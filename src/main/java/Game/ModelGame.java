package Game;

import Global.Info;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import okhttp3.*;

import java.io.IOException;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class ModelGame {
    public String gameName;

    public ModelGame(String game_name){
        this.gameName = game_name;
    }

    //TODO 定义 Health函数v(S)
    public double Health_value(ArrayList<Integer> subset, OkHttpClient client) {
        double[] input = new double[Info.num_of_features_health];  //作为输入的instance
        System.arraycopy(Info.instance_health_avg,0, input, 0, input.length);
        double[] sample=Info.instance_health;

        for (Integer ele : subset) {
//            input[ele] = Info.instance_iot_2[ele];
            input[ele] = sample[ele];
        }
        Gson gson = new Gson();
        Map<String, double[]> payload = new HashMap<>();
        payload.put("inputs", input);
        String json_data = gson.toJson(payload);

        // Define MediaType for JSON
        MediaType JSON = MediaType.get("application/json; charset=utf-8");

        // Create RequestBody
        RequestBody body = RequestBody.create(json_data, JSON);

        /**************** 9091-9095: probability, 9096-9105:class *****************/
        // Create POST request
        Request request = new Request.Builder()
                .url("http://pandax1.d2.comp.nus.edu.sg:9091/predict/")  // 9091-9094   //9092不用   //9106-probability
                .post(body)
                .build();
        Map<String, Object> result = new HashMap<>();
        try (Response response = client.newCall(request).execute()) {
            if (!response.isSuccessful())
                throw new IOException("Unexpected code " + response);

            // Handle the response
            String jsonResponse = response.body().string();
            Type type = new TypeToken<Map<String, Object>>() {
            }.getType();
            Map<String, Object> resultMap = gson.fromJson(jsonResponse, type);
            result=resultMap;
            response.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
//    if((double)result.get("prediction") == 0){
//      System.out.println(subset);
//    }
        return (double)result.get("prediction");
    }

    //TODO 定义 BankMarketing函数v(S)
    public double BankMarketing_value(ArrayList<Integer> subset, OkHttpClient client) {
        double[] input = new double[Info.num_of_features_bank];  //作为输入的instance
        System.arraycopy(Info.instance_bank_avg,0, input, 0, input.length);
        double[] sample=Info.instance_bank;

        for (Integer ele : subset) {
            input[ele] = sample[ele];
        }
        Gson gson = new Gson();
        Map<String, double[]> payload = new HashMap<>();
        payload.put("inputs", input);
        String json_data = gson.toJson(payload);

        // Define MediaType for JSON
        MediaType JSON = MediaType.get("application/json; charset=utf-8");

        // Create RequestBody
        RequestBody body = RequestBody.create(json_data, JSON);

        /**************** http://localhost:9109/predict/*****************/
        // Create POST request
        Request request = new Request.Builder()
                .url("http://pandax1.d2.comp.nus.edu.sg:9109/predict/")  // 9091-9094   //9092不用   //9106-probability
                .post(body)
                .build();
        Map<String, Object> result = new HashMap<>();
        try (Response response = client.newCall(request).execute()) {
            if (!response.isSuccessful())
                throw new IOException("Unexpected code " + response);

            // Handle the response
            String jsonResponse = response.body().string();
            Type type = new TypeToken<Map<String, Object>>() {
            }.getType();
            Map<String, Object> resultMap = gson.fromJson(jsonResponse, type);
            result=resultMap;
            response.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
//    if((double)result.get("prediction") == 0){
//      System.out.println(subset);
//    }
        return (double)result.get("prediction");
    }

    //TODO 定义 Voting game函数v(S)
    public int value_voting(ArrayList<Integer> subset, double[] given_weights, double halfSum) {
        int weights_sum = 0;
        //求weights_sum
        for(int ele : subset){
            weights_sum += given_weights[ele];
        }
        if(weights_sum > halfSum){
            return 1;
        }
        else return 0;
    }

    //TODO 定义 Airport game函数v(S)
    public double value_airport(ArrayList<Integer> subset, double[] given_weights) {
        double maxValue = 0;
        for(int ele : subset){
            maxValue = Math.max(given_weights[ele], maxValue);
        }
        return maxValue;  //返回值是最大值
    }

    //TODO 定义 shoes game函数v(S)
    public int value_shoes(ArrayList<Integer> subset){
        int left_shoes = 0;    //left shoes 的个数
        int right_shoes = 0;  //right shoes 的个数
        for(int ele : subset){
            if(ele < Info.num_of_features / 2){
                left_shoes ++;
            }
            else{
                right_shoes ++;
            }
        }
        return Math.min(left_shoes, right_shoes);  //返回值
    }

    public double IOT_value(double[] instance_ave, ArrayList<Integer> subset) {
        double[] input = new double[Info.num_of_features];  //作为输入的instance
        double output = 0;
//        input = instance_ave; //复制model_instance_ave 到input[]
        // [IOT: feature = 17]
        if(Info.num_of_features == 17){
            System.arraycopy(Info.instance_iot_org_17,0, input, 0, input.length);
            //替换成存在的model_instance
            for (Integer ele : subset) {
//            input[ele] = Info.instance_iot_2[ele];
                input[ele] = 0;
            }
            output = -0.000002541579306125641 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(33397.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(46.991415 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.191524 - input[9], 2.0) + Math.pow(0.106402 - input[10], 2.0) + Math.pow(0.297927 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0))) * -1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(33457.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(32.104011 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.280339 - input[9], 2.0) + Math.pow(0.155744 - input[10], 2.0) + Math.pow(0.436083 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0))) * -1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(56117.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(32.009238 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.281169 - input[9], 2.0) + Math.pow(0.156205 - input[10], 2.0) + Math.pow(0.437374 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0))) * -1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(55835.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0))) * 1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(33125.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0))) * 1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(34135.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0))) * 1.0;
        }
        // [IOT: feature = 33]
        else if(Info.num_of_features == 33){
            System.arraycopy(Info.instance_iot_org_33,0, input, 0, input.length);
            //替换成存在的model_instance
            for (Integer ele : subset) {
//            input[ele] = Info.instance_iot_2[ele];
                input[ele] = 0;
            }
            output = 0.00000036228448152542114 + Math.exp(-0.0000000000005815366366666844 * (Math.pow(60893.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(31.961063 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.281593 - input[9], 2.0) + Math.pow(0.15644 - input[10], 2.0) + Math.pow(0.438033 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(74.0 - input[31], 2.0) + Math.pow(8.222222 - input[32], 2.0))) * -1.0 + Math.exp(-0.0000000000005815366366666844 * (Math.pow(56117.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(32.009238 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.281169 - input[9], 2.0) + Math.pow(0.156205 - input[10], 2.0) + Math.pow(0.437374 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0))) * -1.0 + Math.exp(-0.0000000000005815366366666844 * (Math.pow(60515.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0))) * 1.0 + Math.exp(-0.0000000000005815366366666844 * (Math.pow(56439.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0))) * 1.0;
        }

        // [IOT: feature = 50]
        else if(Info.num_of_features == 50){
            System.arraycopy(Info.instance_iot_org_50,0, input, 0, input.length);
            //替换成存在的model_instance
            for (Integer ele : subset) {
//            input[ele] = Info.instance_iot_2[ele];
                input[ele] = 0;
            }
            output = -0.687914709642318 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(37827.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(62.052435 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.145039 - input[9], 2.0) + Math.pow(0.080577 - input[10], 2.0) + Math.pow(0.225616 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(8.666667 - input[32], 2.0) + Math.pow(13.407088 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(27.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(7.2 - input[37], 2.0) + Math.pow(11.300442 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(8.142857 - input[42], 2.0) + Math.pow(12.265381 - input[43], 2.0) + Math.pow(244.855881 - input[44], 2.0) + Math.pow(59819087.98 - input[45], 2.0) + Math.pow(62052434.92 - input[46], 2.0) + Math.pow(7756554.365 - input[47], 2.0) + Math.pow(21040099.1 - input[48], 2.0) + Math.pow(2206.087112 - input[49], 2.0))) * -0.21919680320334212 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(41463.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(5.937986 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(1.684073 - input[9], 2.0) + Math.pow(1.010444 - input[10], 2.0) + Math.pow(2.694516 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(237.941742 - input[44], 2.0) + Math.pow(3850121.975 - input[45], 2.0) + Math.pow(5937985.897 - input[46], 2.0) + Math.pow(659776.2108 - input[47], 2.0) + Math.pow(1282420.54 - input[48], 2.0) + Math.pow(64.849854 - input[49], 2.0))) * -1.0 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(51093.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(32.033649 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.312172 - input[9], 2.0) + Math.pow(0.187303 - input[10], 2.0) + Math.pow(0.499475 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(262.975693 - input[44], 2.0) + Math.pow(29759529.11 - input[45], 2.0) + Math.pow(32033648.97 - input[46], 2.0) + Math.pow(3559294.33 - input[47], 2.0) + Math.pow(9831750.006 - input[48], 2.0) + Math.pow(938.177109 - input[49], 2.0))) * -0.16883644425292765 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(60095.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(9.182504 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.980125 - input[9], 2.0) + Math.pow(0.544514 - input[10], 2.0) + Math.pow(1.524639 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0) + Math.pow(13.115936 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(32.0 - input[36], 2.0) + Math.pow(6.4 - input[37], 2.0) + Math.pow(9.555103 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(108.0 - input[41], 2.0) + Math.pow(7.714286 - input[42], 2.0) + Math.pow(11.618477 - input[43], 2.0) + Math.pow(267.028809 - input[44], 2.0) + Math.pow(6547153.95 - input[45], 2.0) + Math.pow(9182503.939 - input[46], 2.0) + Math.pow(1147812.992 - input[47], 2.0) + Math.pow(2204161.578 - input[48], 2.0) + Math.pow(2636.909485 - input[49], 2.0))) * -0.9884325707479359 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(46727.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(46.984047 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.191554 - input[9], 2.0) + Math.pow(0.106419 - input[10], 2.0) + Math.pow(0.297973 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(8.555556 - input[32], 2.0) + Math.pow(13.258121 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(26.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(7.0 - input[37], 2.0) + Math.pow(10.86278 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(8.0 - input[42], 2.0) + Math.pow(12.044788 - input[43], 2.0) + Math.pow(261.068344 - input[44], 2.0) + Math.pow(44877249.96 - input[45], 2.0) + Math.pow(46984046.94 - input[46], 2.0) + Math.pow(5873005.867 - input[47], 2.0) + Math.pow(15766823.84 - input[48], 2.0) + Math.pow(3960.847855 - input[49], 2.0))) * -0.14265341093588163 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(34329.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(47.902549 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.208757 - input[9], 2.0) + Math.pow(0.125254 - input[10], 2.0) + Math.pow(0.334011 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(236.034393 - input[44], 2.0) + Math.pow(45864393.95 - input[45], 2.0) + Math.pow(47902549.03 - input[46], 2.0) + Math.pow(5322505.448 - input[47], 2.0) + Math.pow(15209599.7 - input[48], 2.0) + Math.pow(76.055527 - input[49], 2.0))) * -0.05553575502729684 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(57217.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(153.115888 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.06531 - input[9], 2.0) + Math.pow(0.039186 - input[10], 2.0) + Math.pow(0.104496 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(1.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(75.0 - input[31], 2.0) + Math.pow(7.5 - input[32], 2.0) + Math.pow(12.518875 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(31.0 - input[36], 2.0) + Math.pow(5.166667 - input[37], 2.0) + Math.pow(8.542053 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(106.0 - input[41], 2.0) + Math.pow(6.625 - input[42], 2.0) + Math.pow(10.941511 - input[43], 2.0) + Math.pow(258.922577 - input[44], 2.0) + Math.pow(90144531.97 - input[45], 2.0) + Math.pow(153115888.1 - input[46], 2.0) + Math.pow(17012876.46 - input[47], 2.0) + Math.pow(33922342.99 - input[48], 2.0) + Math.pow(2133.131027 - input[49], 2.0))) * -0.3120781496308891 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(42255.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(62.033993 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.161202 - input[9], 2.0) + Math.pow(0.096721 - input[10], 2.0) + Math.pow(0.257923 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(235.080719 - input[44], 2.0) + Math.pow(59991745.0 - input[45], 2.0) + Math.pow(62033993.01 - input[46], 2.0) + Math.pow(6892665.89 - input[47], 2.0) + Math.pow(19916860.24 - input[48], 2.0) + Math.pow(77.962875 - input[49], 2.0))) * -0.05421871171287825 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(40219.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(4.901806 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(2.040064 - input[9], 2.0) + Math.pow(1.224039 - input[10], 2.0) + Math.pow(3.264103 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(277.042389 - input[44], 2.0) + Math.pow(2835640.907 - input[45], 2.0) + Math.pow(4901805.878 - input[46], 2.0) + Math.pow(544645.0975 - input[47], 2.0) + Math.pow(965377.4498 - input[48], 2.0) + Math.pow(3767.01355 - input[49], 2.0))) * -1.0 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(51895.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(41.943964 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.214572 - input[9], 2.0) + Math.pow(0.119207 - input[10], 2.0) + Math.pow(0.333779 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(74.0 - input[31], 2.0) + Math.pow(8.222222 - input[32], 2.0) + Math.pow(12.852799 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(21.0 - input[35], 2.0) + Math.pow(30.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.689074 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(104.0 - input[41], 2.0) + Math.pow(7.428571 - input[42], 2.0) + Math.pow(11.229866 - input[43], 2.0) + Math.pow(272.035599 - input[44], 2.0) + Math.pow(39886271.0 - input[45], 2.0) + Math.pow(41943964.0 - input[46], 2.0) + Math.pow(5242995.501 - input[47], 2.0) + Math.pow(14005816.94 - input[48], 2.0) + Math.pow(1516.103745 - input[49], 2.0))) * -0.02707097917016154 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(48579.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(31.869686 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.2824 - input[9], 2.0) + Math.pow(0.156889 - input[10], 2.0) + Math.pow(0.439289 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0) + Math.pow(13.115936 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(32.0 - input[36], 2.0) + Math.pow(6.4 - input[37], 2.0) + Math.pow(9.555103 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(108.0 - input[41], 2.0) + Math.pow(7.714286 - input[42], 2.0) + Math.pow(11.618477 - input[43], 2.0) + Math.pow(392.913818 - input[44], 2.0) + Math.pow(29825548.17 - input[45], 2.0) + Math.pow(31869686.13 - input[46], 2.0) + Math.pow(3983710.766 - input[47], 2.0) + Math.pow(10451334.02 - input[48], 2.0) + Math.pow(7521.152496 - input[49], 2.0))) * -0.07326994206222294 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(62899.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 1.0 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(62242.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 0.5092323098151169 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(44.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000001 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(1048576.0 - input[9], 2.0) + Math.pow(1048576.0 - input[10], 2.0) + Math.pow(2097152.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 0.8537342516804727 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(65157.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 1.0 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(562.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 0.6783262052479462;
        }
        // [IOT: feature = 67]
        else if(Info.num_of_features == 67){
            System.arraycopy(Info.instance_iot_org_67,0, input, 0, input.length);
            //替换成存在的model_instance
            for (Integer ele : subset) {
//            input[ele] = Info.instance_iot_2[ele];
                input[ele] = 0;
            }
            output = -0.05496864155205834 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(37827.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(62.052435 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.145039 - input[9], 2.0) + Math.pow(0.080577 - input[10], 2.0) + Math.pow(0.225616 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(8.666667 - input[32], 2.0) + Math.pow(13.407088 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(27.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(7.2 - input[37], 2.0) + Math.pow(11.300442 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(8.142857 - input[42], 2.0) + Math.pow(12.265381 - input[43], 2.0) + Math.pow(244.855881 - input[44], 2.0) + Math.pow(59819087.98 - input[45], 2.0) + Math.pow(62052434.92 - input[46], 2.0) + Math.pow(7756554.365 - input[47], 2.0) + Math.pow(21040099.1 - input[48], 2.0) + Math.pow(2206.087112 - input[49], 2.0) + Math.pow(1491240.025 - input[50], 2.0) + Math.pow(1987146.139 - input[51], 2.0) + Math.pow(496786.5348 - input[52], 2.0) + Math.pow(672926.1593 - input[53], 2.0) + Math.pow(244.855881 - input[54], 2.0) + Math.pow(59819087.98 - input[55], 2.0) + Math.pow(62052434.92 - input[56], 2.0) + Math.pow(4773264.225 - input[57], 2.0) + Math.pow(16542662.43 - input[58], 2.0) + Math.pow(1.837156 - input[59], 2.0) + Math.pow(3.0 - input[60], 2.0) + Math.pow(1.666667 - input[61], 2.0) + Math.pow(26.0 - input[62], 2.0) + Math.pow(12.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -0.5140943989151018 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(41463.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(5.937986 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(1.684073 - input[9], 2.0) + Math.pow(1.010444 - input[10], 2.0) + Math.pow(2.694516 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(237.941742 - input[44], 2.0) + Math.pow(3850121.975 - input[45], 2.0) + Math.pow(5937985.897 - input[46], 2.0) + Math.pow(659776.2108 - input[47], 2.0) + Math.pow(1282420.54 - input[48], 2.0) + Math.pow(64.849854 - input[49], 2.0) + Math.pow(1623410.94 - input[50], 2.0) + Math.pow(1935486.794 - input[51], 2.0) + Math.pow(387097.3587 - input[52], 2.0) + Math.pow(695502.7915 - input[53], 2.0) + Math.pow(64.849854 - input[54], 2.0) + Math.pow(3850121.975 - input[55], 2.0) + Math.pow(5937985.897 - input[56], 2.0) + Math.pow(395865.7265 - input[57], 2.0) + Math.pow(1025378.3 - input[58], 2.0) + Math.pow(18.861614 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(60095.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(9.182504 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.980125 - input[9], 2.0) + Math.pow(0.544514 - input[10], 2.0) + Math.pow(1.524639 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0) + Math.pow(13.115936 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(32.0 - input[36], 2.0) + Math.pow(6.4 - input[37], 2.0) + Math.pow(9.555103 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(108.0 - input[41], 2.0) + Math.pow(7.714286 - input[42], 2.0) + Math.pow(11.618477 - input[43], 2.0) + Math.pow(267.028809 - input[44], 2.0) + Math.pow(6547153.95 - input[45], 2.0) + Math.pow(9182503.939 - input[46], 2.0) + Math.pow(1147812.992 - input[47], 2.0) + Math.pow(2204161.578 - input[48], 2.0) + Math.pow(2636.909485 - input[49], 2.0) + Math.pow(1475606.203 - input[50], 2.0) + Math.pow(2250406.981 - input[51], 2.0) + Math.pow(562601.7451 - input[52], 2.0) + Math.pow(634942.6915 - input[53], 2.0) + Math.pow(267.028809 - input[54], 2.0) + Math.pow(6547153.95 - input[55], 2.0) + Math.pow(9182503.939 - input[56], 2.0) + Math.pow(706346.4568 - input[57], 2.0) + Math.pow(1780800.469 - input[58], 2.0) + Math.pow(11.761498 - input[59], 2.0) + Math.pow(3.0 - input[60], 2.0) + Math.pow(1.666667 - input[61], 2.0) + Math.pow(25.333333 - input[62], 2.0) + Math.pow(10.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(51321.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(21.977616 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.455008 - input[9], 2.0) + Math.pow(0.273005 - input[10], 2.0) + Math.pow(0.728013 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(234.127045 - input[44], 2.0) + Math.pow(19855434.89 - input[45], 2.0) + Math.pow(21977615.83 - input[46], 2.0) + Math.pow(2441957.315 - input[47], 2.0) + Math.pow(6545767.519 - input[48], 2.0) + Math.pow(73.90976 - input[49], 2.0) + Math.pow(1615988.97 - input[50], 2.0) + Math.pow(1952076.912 - input[51], 2.0) + Math.pow(390415.3824 - input[52], 2.0) + Math.pow(690239.6324 - input[53], 2.0) + Math.pow(73.90976 - input[54], 2.0) + Math.pow(19855434.89 - input[55], 2.0) + Math.pow(21977615.83 - input[56], 2.0) + Math.pow(1465174.389 - input[57], 2.0) + Math.pow(5100709.137 - input[58], 2.0) + Math.pow(5.187096 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(26.0 - input[62], 2.0) + Math.pow(12.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -0.509217860728239 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(34527.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(18.948232 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.527754 - input[9], 2.0) + Math.pow(0.316652 - input[10], 2.0) + Math.pow(0.844406 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(7.6 - input[32], 2.0) + Math.pow(12.650867 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(21.0 - input[35], 2.0) + Math.pow(34.0 - input[36], 2.0) + Math.pow(5.666667 - input[37], 2.0) + Math.pow(7.814516 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(110.0 - input[41], 2.0) + Math.pow(6.875 - input[42], 2.0) + Math.pow(10.831282 - input[43], 2.0) + Math.pow(235.080719 - input[44], 2.0) + Math.pow(16863188.03 - input[45], 2.0) + Math.pow(18948231.94 - input[46], 2.0) + Math.pow(2105359.104 - input[47], 2.0) + Math.pow(5552877.723 - input[48], 2.0) + Math.pow(159.978867 - input[49], 2.0) + Math.pow(1608409.882 - input[50], 2.0) + Math.pow(1928598.881 - input[51], 2.0) + Math.pow(385719.7762 - input[52], 2.0) + Math.pow(687951.9865 - input[53], 2.0) + Math.pow(159.978867 - input[54], 2.0) + Math.pow(16863188.03 - input[55], 2.0) + Math.pow(18948231.94 - input[56], 2.0) + Math.pow(1263215.462 - input[57], 2.0) + Math.pow(4331201.78 - input[58], 2.0) + Math.pow(5.805291 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.333333 - input[62], 2.0) + Math.pow(11.333333 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(57217.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(153.115888 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.06531 - input[9], 2.0) + Math.pow(0.039186 - input[10], 2.0) + Math.pow(0.104496 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(1.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(75.0 - input[31], 2.0) + Math.pow(7.5 - input[32], 2.0) + Math.pow(12.518875 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(31.0 - input[36], 2.0) + Math.pow(5.166667 - input[37], 2.0) + Math.pow(8.542053 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(106.0 - input[41], 2.0) + Math.pow(6.625 - input[42], 2.0) + Math.pow(10.941511 - input[43], 2.0) + Math.pow(258.922577 - input[44], 2.0) + Math.pow(90144531.97 - input[45], 2.0) + Math.pow(153115888.1 - input[46], 2.0) + Math.pow(17012876.46 - input[47], 2.0) + Math.pow(33922342.99 - input[48], 2.0) + Math.pow(2133.131027 - input[49], 2.0) + Math.pow(89998830.8 - input[50], 2.0) + Math.pow(92011226.89 - input[51], 2.0) + Math.pow(18402245.38 - input[52], 2.0) + Math.pow(40027737.13 - input[53], 2.0) + Math.pow(221.014023 - input[54], 2.0) + Math.pow(89997018.81 - input[55], 2.0) + Math.pow(153115888.1 - input[56], 2.0) + Math.pow(10207725.87 - input[57], 2.0) + Math.pow(27020130.36 - input[58], 2.0) + Math.pow(0.692286 - input[59], 2.0) + Math.pow(2.5 - input[60], 2.0) + Math.pow(1.5 - input[61], 2.0) + Math.pow(18.75 - input[62], 2.0) + Math.pow(7.75 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -0.9448250071447682 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(57975.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(13.929868 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.717882 - input[9], 2.0) + Math.pow(0.430729 - input[10], 2.0) + Math.pow(1.148611 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(234.127045 - input[44], 2.0) + Math.pow(11863771.92 - input[45], 2.0) + Math.pow(13929867.98 - input[46], 2.0) + Math.pow(1547763.109 - input[47], 2.0) + Math.pow(3895159.795 - input[48], 2.0) + Math.pow(74.148178 - input[49], 2.0) + Math.pow(1599987.984 - input[50], 2.0) + Math.pow(1908028.126 - input[51], 2.0) + Math.pow(381605.6252 - input[52], 2.0) + Math.pow(685250.097 - input[53], 2.0) + Math.pow(74.148178 - input[54], 2.0) + Math.pow(11863771.92 - input[55], 2.0) + Math.pow(13929867.98 - input[56], 2.0) + Math.pow(928657.8655 - input[57], 2.0) + Math.pow(3047244.751 - input[58], 2.0) + Math.pow(8.040277 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(40219.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(4.901806 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(2.040064 - input[9], 2.0) + Math.pow(1.224039 - input[10], 2.0) + Math.pow(3.264103 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(277.042389 - input[44], 2.0) + Math.pow(2835640.907 - input[45], 2.0) + Math.pow(4901805.878 - input[46], 2.0) + Math.pow(544645.0975 - input[47], 2.0) + Math.pow(965377.4498 - input[48], 2.0) + Math.pow(3767.01355 - input[49], 2.0) + Math.pow(1572209.12 - input[50], 2.0) + Math.pow(1904067.993 - input[51], 2.0) + Math.pow(380813.5986 - input[52], 2.0) + Math.pow(670672.482 - input[53], 2.0) + Math.pow(277.042389 - input[54], 2.0) + Math.pow(2835640.907 - input[55], 2.0) + Math.pow(4901805.878 - input[56], 2.0) + Math.pow(326787.0585 - input[57], 2.0) + Math.pow(780143.4579 - input[58], 2.0) + Math.pow(22.848722 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(6991.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 0.7653809392741222 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(62242.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(47136.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(33125.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(62912.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000002 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(524288.0 - input[9], 2.0) + Math.pow(524288.0 - input[10], 2.0) + Math.pow(1048576.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(1.907349 - input[54], 2.0) + Math.pow(1.907349 - input[55], 2.0) + Math.pow(1.907349 - input[56], 2.0) + Math.pow(1.907349 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(62914560.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 0.25350004288989536 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(62441.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 0.9986803765602591 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(48528.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 0.04189651964599528 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(3664.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000001 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(1048576.0 - input[9], 2.0) + Math.pow(1048576.0 - input[10], 2.0) + Math.pow(2097152.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.953674 - input[54], 2.0) + Math.pow(0.953674 - input[55], 2.0) + Math.pow(0.953674 - input[56], 2.0) + Math.pow(0.953674 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(125829120.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 0.8945062925991706 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(65157.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(65206.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000001 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(1048576.0 - input[9], 2.0) + Math.pow(1048576.0 - input[10], 2.0) + Math.pow(2097152.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.953674 - input[54], 2.0) + Math.pow(0.953674 - input[55], 2.0) + Math.pow(0.953674 - input[56], 2.0) + Math.pow(0.953674 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(125829120.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 0.01417309581866643;
        }
        // [IOT: feature = 83]
        else if(Info.num_of_features == 83) {
            System.arraycopy(Info.instance_iot_org, 0, input, 0, input.length);
            //替换成存在的model_instance
            for (Integer ele : subset) {
//            input[ele] = Info.instance_iot_2[ele];
                input[ele] = 0;
            }
            double a = 0.00000000000000018810397959620268;   //0.00000000000000018810397959620268
            output = -0.18466732147502646 + Math.exp(a * (Math.pow(41463.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(5.937986 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(1.684073 - input[9], 2.0) + Math.pow(1.010444 - input[10], 2.0) + Math.pow(2.694516 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(237.941742 - input[44], 2.0) + Math.pow(3850121.975 - input[45], 2.0) + Math.pow(5937985.897 - input[46], 2.0) + Math.pow(659776.2108 - input[47], 2.0) + Math.pow(1282420.54 - input[48], 2.0) + Math.pow(64.849854 - input[49], 2.0) + Math.pow(1623410.94 - input[50], 2.0) + Math.pow(1935486.794 - input[51], 2.0) + Math.pow(387097.3587 - input[52], 2.0) + Math.pow(695502.7915 - input[53], 2.0) + Math.pow(64.849854 - input[54], 2.0) + Math.pow(3850121.975 - input[55], 2.0) + Math.pow(5937985.897 - input[56], 2.0) + Math.pow(395865.7265 - input[57], 2.0) + Math.pow(1025378.3 - input[58], 2.0) + Math.pow(18.861614 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(5937985.897 - input[70], 2.0) + Math.pow(5937985.897 - input[71], 2.0) + Math.pow(5937985.897 - input[72], 2.0) + Math.pow(5937985.897 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -1.0 + Math.exp(a * (Math.pow(60095.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(9.182504 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.980125 - input[9], 2.0) + Math.pow(0.544514 - input[10], 2.0) + Math.pow(1.524639 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0) + Math.pow(13.115936 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(32.0 - input[36], 2.0) + Math.pow(6.4 - input[37], 2.0) + Math.pow(9.555103 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(108.0 - input[41], 2.0) + Math.pow(7.714286 - input[42], 2.0) + Math.pow(11.618477 - input[43], 2.0) + Math.pow(267.028809 - input[44], 2.0) + Math.pow(6547153.95 - input[45], 2.0) + Math.pow(9182503.939 - input[46], 2.0) + Math.pow(1147812.992 - input[47], 2.0) + Math.pow(2204161.578 - input[48], 2.0) + Math.pow(2636.909485 - input[49], 2.0) + Math.pow(1475606.203 - input[50], 2.0) + Math.pow(2250406.981 - input[51], 2.0) + Math.pow(562601.7451 - input[52], 2.0) + Math.pow(634942.6915 - input[53], 2.0) + Math.pow(267.028809 - input[54], 2.0) + Math.pow(6547153.95 - input[55], 2.0) + Math.pow(9182503.939 - input[56], 2.0) + Math.pow(706346.4568 - input[57], 2.0) + Math.pow(1780800.469 - input[58], 2.0) + Math.pow(11.761498 - input[59], 2.0) + Math.pow(3.0 - input[60], 2.0) + Math.pow(1.666667 - input[61], 2.0) + Math.pow(25.333333 - input[62], 2.0) + Math.pow(10.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(2635349.989 - input[70], 2.0) + Math.pow(2635349.989 - input[71], 2.0) + Math.pow(2635349.989 - input[72], 2.0) + Math.pow(2635349.989 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(6547153.95 - input[75], 2.0) + Math.pow(6547153.95 - input[76], 2.0) + Math.pow(6547153.95 - input[77], 2.0) + Math.pow(6547153.95 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -1.0 + Math.exp(a * (Math.pow(34527.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(18.948232 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.527754 - input[9], 2.0) + Math.pow(0.316652 - input[10], 2.0) + Math.pow(0.844406 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(7.6 - input[32], 2.0) + Math.pow(12.650867 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(21.0 - input[35], 2.0) + Math.pow(34.0 - input[36], 2.0) + Math.pow(5.666667 - input[37], 2.0) + Math.pow(7.814516 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(110.0 - input[41], 2.0) + Math.pow(6.875 - input[42], 2.0) + Math.pow(10.831282 - input[43], 2.0) + Math.pow(235.080719 - input[44], 2.0) + Math.pow(16863188.03 - input[45], 2.0) + Math.pow(18948231.94 - input[46], 2.0) + Math.pow(2105359.104 - input[47], 2.0) + Math.pow(5552877.723 - input[48], 2.0) + Math.pow(159.978867 - input[49], 2.0) + Math.pow(1608409.882 - input[50], 2.0) + Math.pow(1928598.881 - input[51], 2.0) + Math.pow(385719.7762 - input[52], 2.0) + Math.pow(687951.9865 - input[53], 2.0) + Math.pow(159.978867 - input[54], 2.0) + Math.pow(16863188.03 - input[55], 2.0) + Math.pow(18948231.94 - input[56], 2.0) + Math.pow(1263215.462 - input[57], 2.0) + Math.pow(4331201.78 - input[58], 2.0) + Math.pow(5.805291 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.333333 - input[62], 2.0) + Math.pow(11.333333 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(2085043.907 - input[70], 2.0) + Math.pow(2085043.907 - input[71], 2.0) + Math.pow(2085043.907 - input[72], 2.0) + Math.pow(2085043.907 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(16863188.03 - input[75], 2.0) + Math.pow(16863188.03 - input[76], 2.0) + Math.pow(16863188.03 - input[77], 2.0) + Math.pow(16863188.03 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -0.9451019092619534 + Math.exp(a * (Math.pow(57217.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(153.115888 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.06531 - input[9], 2.0) + Math.pow(0.039186 - input[10], 2.0) + Math.pow(0.104496 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(1.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(75.0 - input[31], 2.0) + Math.pow(7.5 - input[32], 2.0) + Math.pow(12.518875 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(31.0 - input[36], 2.0) + Math.pow(5.166667 - input[37], 2.0) + Math.pow(8.542053 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(106.0 - input[41], 2.0) + Math.pow(6.625 - input[42], 2.0) + Math.pow(10.941511 - input[43], 2.0) + Math.pow(258.922577 - input[44], 2.0) + Math.pow(90144531.97 - input[45], 2.0) + Math.pow(153115888.1 - input[46], 2.0) + Math.pow(17012876.46 - input[47], 2.0) + Math.pow(33922342.99 - input[48], 2.0) + Math.pow(2133.131027 - input[49], 2.0) + Math.pow(89998830.8 - input[50], 2.0) + Math.pow(92011226.89 - input[51], 2.0) + Math.pow(18402245.38 - input[52], 2.0) + Math.pow(40027737.13 - input[53], 2.0) + Math.pow(221.014023 - input[54], 2.0) + Math.pow(89997018.81 - input[55], 2.0) + Math.pow(153115888.1 - input[56], 2.0) + Math.pow(10207725.87 - input[57], 2.0) + Math.pow(27020130.36 - input[58], 2.0) + Math.pow(0.692286 - input[59], 2.0) + Math.pow(2.5 - input[60], 2.0) + Math.pow(1.5 - input[61], 2.0) + Math.pow(18.75 - input[62], 2.0) + Math.pow(7.75 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(147513.1512 - input[70], 2.0) + Math.pow(2283769.131 - input[71], 2.0) + Math.pow(2431282.282 - input[72], 2.0) + Math.pow(1215641.141 - input[73], 2.0) + Math.pow(1510561.089 - input[74], 2.0) + Math.pow(60687587.02 - input[75], 2.0) + Math.pow(89997018.81 - input[76], 2.0) + Math.pow(150684605.8 - input[77], 2.0) + Math.pow(75342302.92 - input[78], 2.0) + Math.pow(20724897.97 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -0.8152609115286339 + Math.exp(a * (Math.pow(57975.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(13.929868 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.717882 - input[9], 2.0) + Math.pow(0.430729 - input[10], 2.0) + Math.pow(1.148611 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(234.127045 - input[44], 2.0) + Math.pow(11863771.92 - input[45], 2.0) + Math.pow(13929867.98 - input[46], 2.0) + Math.pow(1547763.109 - input[47], 2.0) + Math.pow(3895159.795 - input[48], 2.0) + Math.pow(74.148178 - input[49], 2.0) + Math.pow(1599987.984 - input[50], 2.0) + Math.pow(1908028.126 - input[51], 2.0) + Math.pow(381605.6252 - input[52], 2.0) + Math.pow(685250.097 - input[53], 2.0) + Math.pow(74.148178 - input[54], 2.0) + Math.pow(11863771.92 - input[55], 2.0) + Math.pow(13929867.98 - input[56], 2.0) + Math.pow(928657.8655 - input[57], 2.0) + Math.pow(3047244.751 - input[58], 2.0) + Math.pow(8.040277 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(2066096.067 - input[70], 2.0) + Math.pow(2066096.067 - input[71], 2.0) + Math.pow(2066096.067 - input[72], 2.0) + Math.pow(2066096.067 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(11863771.92 - input[75], 2.0) + Math.pow(11863771.92 - input[76], 2.0) + Math.pow(11863771.92 - input[77], 2.0) + Math.pow(11863771.92 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -1.0 + Math.exp(a * (Math.pow(42255.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(62.033993 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.161202 - input[9], 2.0) + Math.pow(0.096721 - input[10], 2.0) + Math.pow(0.257923 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(235.080719 - input[44], 2.0) + Math.pow(59991745.0 - input[45], 2.0) + Math.pow(62033993.01 - input[46], 2.0) + Math.pow(6892665.89 - input[47], 2.0) + Math.pow(19916860.24 - input[48], 2.0) + Math.pow(77.962875 - input[49], 2.0) + Math.pow(1556056.023 - input[50], 2.0) + Math.pow(1872080.088 - input[51], 2.0) + Math.pow(374416.0175 - input[52], 2.0) + Math.pow(664993.1369 - input[53], 2.0) + Math.pow(77.962875 - input[54], 2.0) + Math.pow(59991745.0 - input[55], 2.0) + Math.pow(62033993.01 - input[56], 2.0) + Math.pow(4135599.534 - input[57], 2.0) + Math.pow(15456089.63 - input[58], 2.0) + Math.pow(1.837702 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(26.0 - input[62], 2.0) + Math.pow(12.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(2042248.011 - input[70], 2.0) + Math.pow(2042248.011 - input[71], 2.0) + Math.pow(2042248.011 - input[72], 2.0) + Math.pow(2042248.011 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(59991745.0 - input[75], 2.0) + Math.pow(59991745.0 - input[76], 2.0) + Math.pow(59991745.0 - input[77], 2.0) + Math.pow(59991745.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -0.7294711509825118 + Math.exp(a * (Math.pow(40219.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(4.901806 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(2.040064 - input[9], 2.0) + Math.pow(1.224039 - input[10], 2.0) + Math.pow(3.264103 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(277.042389 - input[44], 2.0) + Math.pow(2835640.907 - input[45], 2.0) + Math.pow(4901805.878 - input[46], 2.0) + Math.pow(544645.0975 - input[47], 2.0) + Math.pow(965377.4498 - input[48], 2.0) + Math.pow(3767.01355 - input[49], 2.0) + Math.pow(1572209.12 - input[50], 2.0) + Math.pow(1904067.993 - input[51], 2.0) + Math.pow(380813.5986 - input[52], 2.0) + Math.pow(670672.482 - input[53], 2.0) + Math.pow(277.042389 - input[54], 2.0) + Math.pow(2835640.907 - input[55], 2.0) + Math.pow(4901805.878 - input[56], 2.0) + Math.pow(326787.0585 - input[57], 2.0) + Math.pow(780143.4579 - input[58], 2.0) + Math.pow(22.848722 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(4901805.878 - input[70], 2.0) + Math.pow(4901805.878 - input[71], 2.0) + Math.pow(4901805.878 - input[72], 2.0) + Math.pow(4901805.878 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -1.0 + Math.exp(a * (Math.pow(62242.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) + Math.exp(a * (Math.pow(3491.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000002 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(524288.0 - input[9], 2.0) + Math.pow(524288.0 - input[10], 2.0) + Math.pow(1048576.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(1.907349 - input[54], 2.0) + Math.pow(1.907349 - input[55], 2.0) + Math.pow(1.907349 - input[56], 2.0) + Math.pow(1.907349 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(62914560.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(1.907349 - input[70], 2.0) + Math.pow(1.907349 - input[71], 2.0) + Math.pow(1.907349 - input[72], 2.0) + Math.pow(1.907349 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) * 0.20001129916396637 + Math.exp(a * (Math.pow(62441.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) + Math.exp(a * (Math.pow(54230.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) + Math.exp(a * (Math.pow(39910.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) + Math.exp(a * (Math.pow(2747.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000001 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(1048576.0 - input[9], 2.0) + Math.pow(1048576.0 - input[10], 2.0) + Math.pow(2097152.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.953674 - input[54], 2.0) + Math.pow(0.953674 - input[55], 2.0) + Math.pow(0.953674 - input[56], 2.0) + Math.pow(0.953674 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(125829120.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.953674 - input[70], 2.0) + Math.pow(0.953674 - input[71], 2.0) + Math.pow(0.953674 - input[72], 2.0) + Math.pow(0.953674 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) * 0.9660113269272366 + Math.exp(a * (Math.pow(562.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) * 0.2528707526686868 + Math.exp(a * (Math.pow(65206.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000001 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(1048576.0 - input[9], 2.0) + Math.pow(1048576.0 - input[10], 2.0) + Math.pow(2097152.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.953674 - input[54], 2.0) + Math.pow(0.953674 - input[55], 2.0) + Math.pow(0.953674 - input[56], 2.0) + Math.pow(0.953674 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(125829120.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.953674 - input[70], 2.0) + Math.pow(0.953674 - input[71], 2.0) + Math.pow(0.953674 - input[72], 2.0) + Math.pow(0.953674 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) * 0.0709405930132093 + Math.exp(a * (Math.pow(39494.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0)));
        }
        return output;
    }

    public double value_modelPrediction(double[] model_instance_ave, ArrayList<Integer> subset) {
        double[] input = new double[Info.num_of_features];  //作为输入的instance
        //复制model_instance_ave 到input[]
        System.arraycopy(model_instance_ave, 0, input, 0, model_instance_ave.length);  //需要逐个复制，才不会改变值
        //替换成存在的model_instance
        for(Integer ele : subset){
            input[ele] = Info.model_instance[ele];
        }
        return 0.00019049644470214844 + Math.exp(-0.00000009069984307813187 * (Math.pow(46.0 - input[0], 2.0) + Math.pow(2.0 - input[1], 2.0) + Math.pow(3.0 - input[2], 2.0) + Math.pow(2.0 - input[3], 2.0) + Math.pow(2.0 - input[4], 2.0) + Math.pow(668.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(2.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(15.0 - input[9], 2.0) + Math.pow(5.0 - input[10], 2.0) + Math.pow(1263.0 - input[11], 2.0) + Math.pow(2.0 - input[12], 2.0) + Math.pow(-1.0 - input[13], 2.0) + Math.pow(0.0 - input[14], 2.0) + Math.pow(4.0 - input[15], 2.0))) + Math.exp(-0.00000009069984307813187 * (Math.pow(48.0 - input[0], 2.0) + Math.pow(2.0 - input[1], 2.0) + Math.pow(3.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(2.0 - input[4], 2.0) + Math.pow(559.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(2.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(15.0 - input[9], 2.0) + Math.pow(5.0 - input[10], 2.0) + Math.pow(1231.0 - input[11], 2.0) + Math.pow(2.0 - input[12], 2.0) + Math.pow(-1.0 - input[13], 2.0) + Math.pow(0.0 - input[14], 2.0) + Math.pow(4.0 - input[15], 2.0)));
    }

    //TODO [Darwin]  features = 36
    public double value_darwin(double[] model_instance_ave, ArrayList<Integer> subset) {

        double[] input = new double[Info.num_of_features];  //作为输入的instance
        //复制model_instance_ave 到input[]
        System.arraycopy(model_instance_ave, 0, input, 0, model_instance_ave.length);  //需要逐个复制，才不会改变值
        //替换成存在的model_instance
        for(Integer ele : subset){
            input[ele] = Info.model_instance_2[ele];
        }

        return 0.31521436405773845 + Math.exp(-0.000000000028797293230485992 * (Math.pow(5160.0 - input[0], 2.0) + Math.pow(0.0000125 - input[1], 2.0) + Math.pow(120.8041741 - input[2], 2.0) + Math.pow(86.85333376 - input[3], 2.0) + Math.pow(957.0 - input[4], 2.0) + Math.pow(6601.0 - input[5], 2.0) + Math.pow(0.361800168 - input[6], 2.0) + Math.pow(0.217459316 - input[7], 2.0) + Math.pow(103.8287539 - input[8], 2.0) + Math.pow(0.051836416 - input[9], 2.0) + Math.pow(0.021547432 - input[10], 2.0) + Math.pow(1.828075941 - input[11], 2.0) + Math.pow(1.493242297 - input[12], 2.0) + Math.pow(22.0 - input[13], 2.0) + Math.pow(10730.0 - input[14], 2.0) + Math.pow(1679.23206 - input[15], 2.0) + Math.pow(288285.0449 - input[16], 2.0) + Math.pow(15890.0 - input[17], 2.0) + Math.pow(6085.0 - input[18], 2.0) + Math.pow(0.0000119 - input[19], 2.0) + Math.pow(269.3557887 - input[20], 2.0) + Math.pow(51.34226273 - input[21], 2.0) + Math.pow(749.0 - input[22], 2.0) + Math.pow(4945.0 - input[23], 2.0) + Math.pow(0.616120599 - input[24], 2.0) + Math.pow(0.076406213 - input[25], 2.0) + Math.pow(160.3490257 - input[26], 2.0) + Math.pow(0.110648063 - input[27], 2.0) + Math.pow(0.010782803 - input[28], 2.0) + Math.pow(3.374298552 - input[29], 2.0) + Math.pow(0.605319562 - input[30], 2.0) + Math.pow(6.0 - input[31], 2.0) + Math.pow(18785.0 - input[32], 2.0) + Math.pow(1851.080916 - input[33], 2.0) + Math.pow(167223.5947 - input[34], 2.0) + Math.pow(24870.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(1970.0 - input[0], 2.0) + Math.pow(0.0000107 - input[1], 2.0) + Math.pow(231.4997774 - input[2], 2.0) + Math.pow(90.64948014 - input[3], 2.0) + Math.pow(1434.0 - input[4], 2.0) + Math.pow(5643.0 - input[5], 2.0) + Math.pow(0.209560376 - input[6], 2.0) + Math.pow(0.144054317 - input[7], 2.0) + Math.pow(161.0746288 - input[8], 2.0) + Math.pow(0.031651798 - input[9], 2.0) + Math.pow(0.016534409 - input[10], 2.0) + Math.pow(3.399653772 - input[11], 2.0) + Math.pow(1.709760861 - input[12], 2.0) + Math.pow(7.0 - input[13], 2.0) + Math.pow(7315.0 - input[14], 2.0) + Math.pow(1525.02324 - input[15], 2.0) + Math.pow(154048.5381 - input[16], 2.0) + Math.pow(9285.0 - input[17], 2.0) + Math.pow(22340.0 - input[18], 2.0) + Math.pow(0.0000124 - input[19], 2.0) + Math.pow(292.6687059 - input[20], 2.0) + Math.pow(129.7505334 - input[21], 2.0) + Math.pow(1809.0 - input[22], 2.0) + Math.pow(4734.0 - input[23], 2.0) + Math.pow(0.546843818 - input[24], 2.0) + Math.pow(0.117796777 - input[25], 2.0) + Math.pow(211.2096197 - input[26], 2.0) + Math.pow(0.100158867 - input[27], 2.0) + Math.pow(0.012186218 - input[28], 2.0) + Math.pow(4.69417538 - input[29], 2.0) + Math.pow(1.425508018 - input[30], 2.0) + Math.pow(5.0 - input[31], 2.0) + Math.pow(7995.0 - input[32], 2.0) + Math.pow(1395.797999 - input[33], 2.0) + Math.pow(108780.7753 - input[34], 2.0) + Math.pow(30335.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(3890.0 - input[0], 2.0) + Math.pow(0.0000105 - input[1], 2.0) + Math.pow(184.0508286 - input[2], 2.0) + Math.pow(146.0670832 - input[3], 2.0) + Math.pow(1528.0 - input[4], 2.0) + Math.pow(7011.0 - input[5], 2.0) + Math.pow(0.250233403 - input[6], 2.0) + Math.pow(0.18223471 - input[7], 2.0) + Math.pow(165.0589559 - input[8], 2.0) + Math.pow(0.032052822 - input[9], 2.0) + Math.pow(0.021659046 - input[10], 2.0) + Math.pow(3.258661297 - input[11], 2.0) + Math.pow(2.510323959 - input[12], 2.0) + Math.pow(13.0 - input[13], 2.0) + Math.pow(6370.0 - input[14], 2.0) + Math.pow(803.5408163 - input[15], 2.0) + Math.pow(66247.70987 - input[16], 2.0) + Math.pow(10260.0 - input[17], 2.0) + Math.pow(1480.0 - input[18], 2.0) + Math.pow(0.0000104 - input[19], 2.0) + Math.pow(254.1256117 - input[20], 2.0) + Math.pow(98.35113426 - input[21], 2.0) + Math.pow(796.0 - input[22], 2.0) + Math.pow(4755.0 - input[23], 2.0) + Math.pow(0.233204794 - input[24], 2.0) + Math.pow(0.059443623 - input[25], 2.0) + Math.pow(176.238373 - input[26], 2.0) + Math.pow(0.030268781 - input[27], 2.0) + Math.pow(0.008175143 - input[28], 2.0) + Math.pow(1.009658422 - input[29], 2.0) + Math.pow(1.972137001 - input[30], 2.0) + Math.pow(2.0 - input[31], 2.0) + Math.pow(6110.0 - input[32], 2.0) + Math.pow(1016.311784 - input[33], 2.0) + Math.pow(90173.50754 - input[34], 2.0) + Math.pow(7590.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(1190.0 - input[0], 2.0) + Math.pow(0.00000849 - input[1], 2.0) + Math.pow(348.4757525 - input[2], 2.0) + Math.pow(197.6914132 - input[3], 2.0) + Math.pow(1739.0 - input[4], 2.0) + Math.pow(7297.0 - input[5], 2.0) + Math.pow(0.189114059 - input[6], 2.0) + Math.pow(0.158889462 - input[7], 2.0) + Math.pow(273.0835828 - input[8], 2.0) + Math.pow(0.025024238 - input[9], 2.0) + Math.pow(0.017805135 - input[10], 2.0) + Math.pow(3.374100943 - input[11], 2.0) + Math.pow(3.718391574 - input[12], 2.0) + Math.pow(3.0 - input[13], 2.0) + Math.pow(4305.0 - input[14], 2.0) + Math.pow(1712.780488 - input[15], 2.0) + Math.pow(113290.5825 - input[16], 2.0) + Math.pow(5495.0 - input[17], 2.0) + Math.pow(3060.0 - input[18], 2.0) + Math.pow(0.0000155 - input[19], 2.0) + Math.pow(63.7169391 - input[20], 2.0) + Math.pow(45.27335666 - input[21], 2.0) + Math.pow(925.0 - input[22], 2.0) + Math.pow(4981.0 - input[23], 2.0) + Math.pow(0.19607449 - input[24], 2.0) + Math.pow(0.107875011 - input[25], 2.0) + Math.pow(54.49514788 - input[26], 2.0) + Math.pow(0.02574662 - input[27], 2.0) + Math.pow(0.011029721 - input[28], 2.0) + Math.pow(1.089685071 - input[29], 2.0) + Math.pow(0.908272888 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(12605.0 - input[32], 2.0) + Math.pow(1866.270924 - input[33], 2.0) + Math.pow(129629.401 - input[34], 2.0) + Math.pow(15665.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(2900.0 - input[0], 2.0) + Math.pow(0.0000114 - input[1], 2.0) + Math.pow(305.0926628 - input[2], 2.0) + Math.pow(130.5014016 - input[3], 2.0) + Math.pow(1214.0 - input[4], 2.0) + Math.pow(8202.0 - input[5], 2.0) + Math.pow(0.979939899 - input[6], 2.0) + Math.pow(0.127558602 - input[7], 2.0) + Math.pow(217.7970322 - input[8], 2.0) + Math.pow(0.185118173 - input[9], 2.0) + Math.pow(0.016558994 - input[10], 2.0) + Math.pow(4.397375931 - input[11], 2.0) + Math.pow(2.368506924 - input[12], 2.0) + Math.pow(10.0 - input[13], 2.0) + Math.pow(6935.0 - input[14], 2.0) + Math.pow(1289.229993 - input[15], 2.0) + Math.pow(143635.9594 - input[16], 2.0) + Math.pow(9835.0 - input[17], 2.0) + Math.pow(6135.0 - input[18], 2.0) + Math.pow(0.0000116 - input[19], 2.0) + Math.pow(269.3255957 - input[20], 2.0) + Math.pow(142.8949877 - input[21], 2.0) + Math.pow(1241.0 - input[22], 2.0) + Math.pow(4934.0 - input[23], 2.0) + Math.pow(0.429868673 - input[24], 2.0) + Math.pow(0.09188141 - input[25], 2.0) + Math.pow(206.1102917 - input[26], 2.0) + Math.pow(0.072794567 - input[27], 2.0) + Math.pow(0.011502948 - input[28], 2.0) + Math.pow(3.606068651 - input[29], 2.0) + Math.pow(1.666109553 - input[30], 2.0) + Math.pow(4.0 - input[31], 2.0) + Math.pow(7485.0 - input[32], 2.0) + Math.pow(1068.522378 - input[33], 2.0) + Math.pow(157580.5514 - input[34], 2.0) + Math.pow(13620.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(5655.0 - input[0], 2.0) + Math.pow(0.0000101 - input[1], 2.0) + Math.pow(124.5290358 - input[2], 2.0) + Math.pow(120.0544741 - input[3], 2.0) + Math.pow(1336.0 - input[4], 2.0) + Math.pow(6170.0 - input[5], 2.0) + Math.pow(0.482080748 - input[6], 2.0) + Math.pow(0.131625906 - input[7], 2.0) + Math.pow(122.291755 - input[8], 2.0) + Math.pow(0.084839504 - input[9], 2.0) + Math.pow(0.016759375 - input[10], 2.0) + Math.pow(2.077973621 - input[11], 2.0) + Math.pow(2.057415467 - input[12], 2.0) + Math.pow(14.0 - input[13], 2.0) + Math.pow(5340.0 - input[14], 2.0) + Math.pow(1492.019663 - input[15], 2.0) + Math.pow(163215.2459 - input[16], 2.0) + Math.pow(10995.0 - input[17], 2.0) + Math.pow(1435.0 - input[18], 2.0) + Math.pow(0.0000119 - input[19], 2.0) + Math.pow(389.3956181 - input[20], 2.0) + Math.pow(76.17379148 - input[21], 2.0) + Math.pow(924.0 - input[22], 2.0) + Math.pow(4979.0 - input[23], 2.0) + Math.pow(0.220990492 - input[24], 2.0) + Math.pow(0.095986587 - input[25], 2.0) + Math.pow(232.7847048 - input[26], 2.0) + Math.pow(0.030996698 - input[27], 2.0) + Math.pow(0.010757559 - input[28], 2.0) + Math.pow(4.159919425 - input[29], 2.0) + Math.pow(1.508055926 - input[30], 2.0) + Math.pow(4.0 - input[31], 2.0) + Math.pow(7920.0 - input[32], 2.0) + Math.pow(1906.636364 - input[33], 2.0) + Math.pow(143575.7301 - input[34], 2.0) + Math.pow(9355.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(6365.0 - input[0], 2.0) + Math.pow(0.0000111 - input[1], 2.0) + Math.pow(78.33916113 - input[2], 2.0) + Math.pow(118.6605736 - input[3], 2.0) + Math.pow(1425.0 - input[4], 2.0) + Math.pow(7755.0 - input[5], 2.0) + Math.pow(0.127188414 - input[6], 2.0) + Math.pow(0.119885543 - input[7], 2.0) + Math.pow(98.49986737 - input[8], 2.0) + Math.pow(0.016190354 - input[9], 2.0) + Math.pow(0.014669905 - input[10], 2.0) + Math.pow(0.831677682 - input[11], 2.0) + Math.pow(2.307646541 - input[12], 2.0) + Math.pow(10.0 - input[13], 2.0) + Math.pow(6460.0 - input[14], 2.0) + Math.pow(1482.620743 - input[15], 2.0) + Math.pow(250511.5032 - input[16], 2.0) + Math.pow(12825.0 - input[17], 2.0) + Math.pow(27745.0 - input[18], 2.0) + Math.pow(0.0000173 - input[19], 2.0) + Math.pow(259.7154753 - input[20], 2.0) + Math.pow(61.11976425 - input[21], 2.0) + Math.pow(1342.0 - input[22], 2.0) + Math.pow(5769.0 - input[23], 2.0) + Math.pow(0.747312719 - input[24], 2.0) + Math.pow(0.075386844 - input[25], 2.0) + Math.pow(160.4176198 - input[26], 2.0) + Math.pow(0.133890903 - input[27], 2.0) + Math.pow(0.009775956 - input[28], 2.0) + Math.pow(4.768731212 - input[29], 2.0) + Math.pow(1.132662521 - input[30], 2.0) + Math.pow(12.0 - input[31], 2.0) + Math.pow(14580.0 - input[32], 2.0) + Math.pow(1407.182442 - input[33], 2.0) + Math.pow(238867.3309 - input[34], 2.0) + Math.pow(42325.0 - input[35], 2.0))) * -0.7087057583506431 + Math.exp(-0.000000000028797293230485992 * (Math.pow(32300.0 - input[0], 2.0) + Math.pow(0.0000129 - input[1], 2.0) + Math.pow(139.4107734 - input[2], 2.0) + Math.pow(94.24823893 - input[3], 2.0) + Math.pow(2091.0 - input[4], 2.0) + Math.pow(5908.0 - input[5], 2.0) + Math.pow(0.415121663 - input[6], 2.0) + Math.pow(0.104892312 - input[7], 2.0) + Math.pow(116.8295061 - input[8], 2.0) + Math.pow(0.07267198 - input[9], 2.0) + Math.pow(0.014504268 - input[10], 2.0) + Math.pow(2.869014666 - input[11], 2.0) + Math.pow(1.624402129 - input[12], 2.0) + Math.pow(21.0 - input[13], 2.0) + Math.pow(9835.0 - input[14], 2.0) + Math.pow(1268.398068 - input[15], 2.0) + Math.pow(171652.568 - input[16], 2.0) + Math.pow(42135.0 - input[17], 2.0) + Math.pow(22575.0 - input[18], 2.0) + Math.pow(0.0000148 - input[19], 2.0) + Math.pow(151.9341573 - input[20], 2.0) + Math.pow(20.82701508 - input[21], 2.0) + Math.pow(213.0 - input[22], 2.0) + Math.pow(13250.0 - input[23], 2.0) + Math.pow(0.291326098 - input[24], 2.0) + Math.pow(0.093983704 - input[25], 2.0) + Math.pow(86.38058619 - input[26], 2.0) + Math.pow(0.048510562 - input[27], 2.0) + Math.pow(0.007511062 - input[28], 2.0) + Math.pow(2.565453245 - input[29], 2.0) + Math.pow(0.420644727 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(12700.0 - input[32], 2.0) + Math.pow(1456.590945 - input[33], 2.0) + Math.pow(45575.49212 - input[34], 2.0) + Math.pow(35275.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(3525.0 - input[0], 2.0) + Math.pow(0.0000102 - input[1], 2.0) + Math.pow(126.3235989 - input[2], 2.0) + Math.pow(139.5962431 - input[3], 2.0) + Math.pow(1046.0 - input[4], 2.0) + Math.pow(6118.0 - input[5], 2.0) + Math.pow(0.225716931 - input[6], 2.0) + Math.pow(0.161174468 - input[7], 2.0) + Math.pow(132.959921 - input[8], 2.0) + Math.pow(0.026493495 - input[9], 2.0) + Math.pow(0.020018228 - input[10], 2.0) + Math.pow(1.802937221 - input[11], 2.0) + Math.pow(2.613177431 - input[12], 2.0) + Math.pow(15.0 - input[13], 2.0) + Math.pow(6275.0 - input[14], 2.0) + Math.pow(1261.23745 - input[15], 2.0) + Math.pow(187505.1293 - input[16], 2.0) + Math.pow(9800.0 - input[17], 2.0) + Math.pow(21475.0 - input[18], 2.0) + Math.pow(0.0000139 - input[19], 2.0) + Math.pow(281.4527552 - input[20], 2.0) + Math.pow(71.43766562 - input[21], 2.0) + Math.pow(840.0 - input[22], 2.0) + Math.pow(5174.0 - input[23], 2.0) + Math.pow(0.765108158 - input[24], 2.0) + Math.pow(0.105780156 - input[25], 2.0) + Math.pow(176.4452104 - input[26], 2.0) + Math.pow(0.134726624 - input[27], 2.0) + Math.pow(0.0100524 - input[28], 2.0) + Math.pow(4.863516751 - input[29], 2.0) + Math.pow(0.8232641 - input[30], 2.0) + Math.pow(12.0 - input[31], 2.0) + Math.pow(13920.0 - input[32], 2.0) + Math.pow(1134.284124 - input[33], 2.0) + Math.pow(115938.7149 - input[34], 2.0) + Math.pow(35395.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(7870.0 - input[0], 2.0) + Math.pow(0.0000122 - input[1], 2.0) + Math.pow(102.9813656 - input[2], 2.0) + Math.pow(79.64754053 - input[3], 2.0) + Math.pow(1420.0 - input[4], 2.0) + Math.pow(6142.0 - input[5], 2.0) + Math.pow(0.320674233 - input[6], 2.0) + Math.pow(0.156004343 - input[7], 2.0) + Math.pow(91.31445308 - input[8], 2.0) + Math.pow(0.054544629 - input[9], 2.0) + Math.pow(0.016951568 - input[10], 2.0) + Math.pow(1.728142674 - input[11], 2.0) + Math.pow(1.324384332 - input[12], 2.0) + Math.pow(8.0 - input[13], 2.0) + Math.pow(9755.0 - input[14], 2.0) + Math.pow(1671.095336 - input[15], 2.0) + Math.pow(162309.1349 - input[16], 2.0) + Math.pow(17625.0 - input[17], 2.0) + Math.pow(2990.0 - input[18], 2.0) + Math.pow(0.0000118 - input[19], 2.0) + Math.pow(73.10957578 - input[20], 2.0) + Math.pow(46.63821951 - input[21], 2.0) + Math.pow(398.0 - input[22], 2.0) + Math.pow(4842.0 - input[23], 2.0) + Math.pow(0.132911365 - input[24], 2.0) + Math.pow(0.142479868 - input[25], 2.0) + Math.pow(59.87389764 - input[26], 2.0) + Math.pow(0.020126914 - input[27], 2.0) + Math.pow(0.012202906 - input[28], 2.0) + Math.pow(0.581303656 - input[29], 2.0) + Math.pow(0.932561948 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(9435.0 - input[32], 2.0) + Math.pow(1803.749338 - input[33], 2.0) + Math.pow(41254.00765 - input[34], 2.0) + Math.pow(12425.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(5000.0 - input[0], 2.0) + Math.pow(0.00000865 - input[1], 2.0) + Math.pow(229.1370537 - input[2], 2.0) + Math.pow(160.55596 - input[3], 2.0) + Math.pow(1422.0 - input[4], 2.0) + Math.pow(7058.0 - input[5], 2.0) + Math.pow(0.223681134 - input[6], 2.0) + Math.pow(0.15414207 - input[7], 2.0) + Math.pow(194.8465068 - input[8], 2.0) + Math.pow(0.032744049 - input[9], 2.0) + Math.pow(0.0196005 - input[10], 2.0) + Math.pow(3.589878363 - input[11], 2.0) + Math.pow(3.00859422 - input[12], 2.0) + Math.pow(6.0 - input[13], 2.0) + Math.pow(4770.0 - input[14], 2.0) + Math.pow(1921.646751 - input[15], 2.0) + Math.pow(82365.22008 - input[16], 2.0) + Math.pow(9770.0 - input[17], 2.0) + Math.pow(12385.0 - input[18], 2.0) + Math.pow(0.0000133 - input[19], 2.0) + Math.pow(343.7489075 - input[20], 2.0) + Math.pow(77.38664001 - input[21], 2.0) + Math.pow(1283.0 - input[22], 2.0) + Math.pow(5229.0 - input[23], 2.0) + Math.pow(0.892261554 - input[24], 2.0) + Math.pow(0.107377054 - input[25], 2.0) + Math.pow(210.5677738 - input[26], 2.0) + Math.pow(0.157573283 - input[27], 2.0) + Math.pow(0.012076761 - input[28], 2.0) + Math.pow(5.488976066 - input[29], 2.0) + Math.pow(1.4300954 - input[30], 2.0) + Math.pow(9.0 - input[31], 2.0) + Math.pow(9205.0 - input[32], 2.0) + Math.pow(1866.643129 - input[33], 2.0) + Math.pow(196536.7184 - input[34], 2.0) + Math.pow(21590.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(2915.0 - input[0], 2.0) + Math.pow(0.0000103 - input[1], 2.0) + Math.pow(202.9456868 - input[2], 2.0) + Math.pow(172.225169 - input[3], 2.0) + Math.pow(1296.0 - input[4], 2.0) + Math.pow(6818.0 - input[5], 2.0) + Math.pow(0.219211763 - input[6], 2.0) + Math.pow(0.146433857 - input[7], 2.0) + Math.pow(187.5854279 - input[8], 2.0) + Math.pow(0.029357224 - input[9], 2.0) + Math.pow(0.019329904 - input[10], 2.0) + Math.pow(2.828033265 - input[11], 2.0) + Math.pow(3.149974297 - input[12], 2.0) + Math.pow(9.0 - input[13], 2.0) + Math.pow(5745.0 - input[14], 2.0) + Math.pow(1456.54134 - input[15], 2.0) + Math.pow(170829.0977 - input[16], 2.0) + Math.pow(8660.0 - input[17], 2.0) + Math.pow(16840.0 - input[18], 2.0) + Math.pow(0.0000136 - input[19], 2.0) + Math.pow(145.1592394 - input[20], 2.0) + Math.pow(54.63435556 - input[21], 2.0) + Math.pow(689.0 - input[22], 2.0) + Math.pow(5148.0 - input[23], 2.0) + Math.pow(0.435635077 - input[24], 2.0) + Math.pow(0.098918756 - input[25], 2.0) + Math.pow(99.89679746 - input[26], 2.0) + Math.pow(0.076897888 - input[27], 2.0) + Math.pow(0.010800667 - input[28], 2.0) + Math.pow(2.20268157 - input[29], 2.0) + Math.pow(1.039400778 - input[30], 2.0) + Math.pow(7.0 - input[31], 2.0) + Math.pow(11515.0 - input[32], 2.0) + Math.pow(1327.74251 - input[33], 2.0) + Math.pow(203028.8356 - input[34], 2.0) + Math.pow(28355.0 - input[35], 2.0))) * -0.11512973143251792 + Math.exp(-0.000000000028797293230485992 * (Math.pow(3365.0 - input[0], 2.0) + Math.pow(0.00000579 - input[1], 2.0) + Math.pow(139.7059851 - input[2], 2.0) + Math.pow(179.7768315 - input[3], 2.0) + Math.pow(1777.0 - input[4], 2.0) + Math.pow(6415.0 - input[5], 2.0) + Math.pow(0.206495764 - input[6], 2.0) + Math.pow(0.208558608 - input[7], 2.0) + Math.pow(159.7414083 - input[8], 2.0) + Math.pow(0.026073025 - input[9], 2.0) + Math.pow(0.024280781 - input[10], 2.0) + Math.pow(1.974643728 - input[11], 2.0) + Math.pow(3.508735265 - input[12], 2.0) + Math.pow(6.0 - input[13], 2.0) + Math.pow(2915.0 - input[14], 2.0) + Math.pow(1854.830189 - input[15], 2.0) + Math.pow(135388.5012 - input[16], 2.0) + Math.pow(6280.0 - input[17], 2.0) + Math.pow(7180.0 - input[18], 2.0) + Math.pow(0.0000109 - input[19], 2.0) + Math.pow(319.2638506 - input[20], 2.0) + Math.pow(147.5673394 - input[21], 2.0) + Math.pow(404.0 - input[22], 2.0) + Math.pow(5502.0 - input[23], 2.0) + Math.pow(0.489275481 - input[24], 2.0) + Math.pow(0.069523795 - input[25], 2.0) + Math.pow(233.415595 - input[26], 2.0) + Math.pow(0.08132372 - input[27], 2.0) + Math.pow(0.008721297 - input[28], 2.0) + Math.pow(3.632417607 - input[29], 2.0) + Math.pow(1.708372627 - input[30], 2.0) + Math.pow(4.0 - input[31], 2.0) + Math.pow(7215.0 - input[32], 2.0) + Math.pow(1942.640333 - input[33], 2.0) + Math.pow(111629.7119 - input[34], 2.0) + Math.pow(14395.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(1385.0 - input[0], 2.0) + Math.pow(0.00000745 - input[1], 2.0) + Math.pow(313.6427464 - input[2], 2.0) + Math.pow(152.8003078 - input[3], 2.0) + Math.pow(1019.0 - input[4], 2.0) + Math.pow(5844.0 - input[5], 2.0) + Math.pow(0.208694097 - input[6], 2.0) + Math.pow(0.148942766 - input[7], 2.0) + Math.pow(233.2215271 - input[8], 2.0) + Math.pow(0.029411174 - input[9], 2.0) + Math.pow(0.019626372 - input[10], 2.0) + Math.pow(3.7603128 - input[11], 2.0) + Math.pow(2.963851905 - input[12], 2.0) + Math.pow(8.0 - input[13], 2.0) + Math.pow(3725.0 - input[14], 2.0) + Math.pow(1483.216107 - input[15], 2.0) + Math.pow(133733.858 - input[16], 2.0) + Math.pow(5110.0 - input[17], 2.0) + Math.pow(2635.0 - input[18], 2.0) + Math.pow(0.00000931 - input[19], 2.0) + Math.pow(52.13731128 - input[20], 2.0) + Math.pow(132.3306412 - input[21], 2.0) + Math.pow(288.0 - input[22], 2.0) + Math.pow(5339.0 - input[23], 2.0) + Math.pow(0.311402786 - input[24], 2.0) + Math.pow(0.052991668 - input[25], 2.0) + Math.pow(92.23397624 - input[26], 2.0) + Math.pow(0.043971629 - input[27], 2.0) + Math.pow(0.008535459 - input[28], 2.0) + Math.pow(1.279550028 - input[29], 2.0) + Math.pow(2.634944629 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(4795.0 - input[32], 2.0) + Math.pow(1971.446298 - input[33], 2.0) + Math.pow(60372.73512 - input[34], 2.0) + Math.pow(7430.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(4115.0 - input[0], 2.0) + Math.pow(0.00000784 - input[1], 2.0) + Math.pow(177.2948687 - input[2], 2.0) + Math.pow(103.1182016 - input[3], 2.0) + Math.pow(1257.0 - input[4], 2.0) + Math.pow(4903.0 - input[5], 2.0) + Math.pow(0.570892443 - input[6], 2.0) + Math.pow(0.160674496 - input[7], 2.0) + Math.pow(140.2065352 - input[8], 2.0) + Math.pow(0.100499528 - input[9], 2.0) + Math.pow(0.020221963 - input[10], 2.0) + Math.pow(3.108564926 - input[11], 2.0) + Math.pow(1.979156065 - input[12], 2.0) + Math.pow(6.0 - input[13], 2.0) + Math.pow(5015.0 - input[14], 2.0) + Math.pow(777.8474576 - input[15], 2.0) + Math.pow(51807.86008 - input[16], 2.0) + Math.pow(9130.0 - input[17], 2.0) + Math.pow(23680.0 - input[18], 2.0) + Math.pow(0.0000158 - input[19], 2.0) + Math.pow(117.3482656 - input[20], 2.0) + Math.pow(65.03277755 - input[21], 2.0) + Math.pow(847.0 - input[22], 2.0) + Math.pow(5181.0 - input[23], 2.0) + Math.pow(0.232910537 - input[24], 2.0) + Math.pow(0.130867109 - input[25], 2.0) + Math.pow(91.19052158 - input[26], 2.0) + Math.pow(0.032171028 - input[27], 2.0) + Math.pow(0.015774094 - input[28], 2.0) + Math.pow(1.813403753 - input[29], 2.0) + Math.pow(0.817848885 - input[30], 2.0) + Math.pow(19.0 - input[31], 2.0) + Math.pow(21015.0 - input[32], 2.0) + Math.pow(808.3445158 - input[33], 2.0) + Math.pow(65430.0707 - input[34], 2.0) + Math.pow(44695.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(9880.0 - input[0], 2.0) + Math.pow(0.0000149 - input[1], 2.0) + Math.pow(137.5240305 - input[2], 2.0) + Math.pow(56.24826417 - input[3], 2.0) + Math.pow(901.0 - input[4], 2.0) + Math.pow(7768.0 - input[5], 2.0) + Math.pow(0.368334928 - input[6], 2.0) + Math.pow(0.181915959 - input[7], 2.0) + Math.pow(96.88614731 - input[8], 2.0) + Math.pow(0.057226451 - input[9], 2.0) + Math.pow(0.018963885 - input[10], 2.0) + Math.pow(2.634658132 - input[11], 2.0) + Math.pow(0.991744933 - input[12], 2.0) + Math.pow(13.0 - input[13], 2.0) + Math.pow(15535.0 - input[14], 2.0) + Math.pow(1735.374316 - input[15], 2.0) + Math.pow(147139.4328 - input[16], 2.0) + Math.pow(25415.0 - input[17], 2.0) + Math.pow(14240.0 - input[18], 2.0) + Math.pow(0.0000118 - input[19], 2.0) + Math.pow(390.6281629 - input[20], 2.0) + Math.pow(100.0575493 - input[21], 2.0) + Math.pow(629.0 - input[22], 2.0) + Math.pow(5271.0 - input[23], 2.0) + Math.pow(1.548553061 - input[24], 2.0) + Math.pow(0.112708869 - input[25], 2.0) + Math.pow(245.3428561 - input[26], 2.0) + Math.pow(0.292048889 - input[27], 2.0) + Math.pow(0.011328222 - input[28], 2.0) + Math.pow(7.203297084 - input[29], 2.0) + Math.pow(1.170767693 - input[30], 2.0) + Math.pow(5.0 - input[31], 2.0) + Math.pow(9325.0 - input[32], 2.0) + Math.pow(1936.734048 - input[33], 2.0) + Math.pow(125063.4832 - input[34], 2.0) + Math.pow(23565.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(1405.0 - input[0], 2.0) + Math.pow(0.0000108 - input[1], 2.0) + Math.pow(233.1938013 - input[2], 2.0) + Math.pow(114.7835011 - input[3], 2.0) + Math.pow(1690.0 - input[4], 2.0) + Math.pow(6268.0 - input[5], 2.0) + Math.pow(0.214848628 - input[6], 2.0) + Math.pow(0.140902947 - input[7], 2.0) + Math.pow(173.9886512 - input[8], 2.0) + Math.pow(0.02693117 - input[9], 2.0) + Math.pow(0.018093675 - input[10], 2.0) + Math.pow(2.260452671 - input[11], 2.0) + Math.pow(2.134250281 - input[12], 2.0) + Math.pow(8.0 - input[13], 2.0) + Math.pow(6110.0 - input[14], 2.0) + Math.pow(1617.676759 - input[15], 2.0) + Math.pow(160270.3513 - input[16], 2.0) + Math.pow(7515.0 - input[17], 2.0) + Math.pow(935.0 - input[18], 2.0) + Math.pow(0.0000145 - input[19], 2.0) + Math.pow(95.76299572 - input[20], 2.0) + Math.pow(40.55019759 - input[21], 2.0) + Math.pow(1087.0 - input[22], 2.0) + Math.pow(4974.0 - input[23], 2.0) + Math.pow(0.174515124 - input[24], 2.0) + Math.pow(0.07972551 - input[25], 2.0) + Math.pow(68.15659665 - input[26], 2.0) + Math.pow(0.024642789 - input[27], 2.0) + Math.pow(0.007531393 - input[28], 2.0) + Math.pow(1.537611299 - input[29], 2.0) + Math.pow(0.810805702 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(13355.0 - input[32], 2.0) + Math.pow(1286.957694 - input[33], 2.0) + Math.pow(56522.1094 - input[34], 2.0) + Math.pow(14290.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(5100.0 - input[0], 2.0) + Math.pow(0.0000106 - input[1], 2.0) + Math.pow(177.9635561 - input[2], 2.0) + Math.pow(237.6092984 - input[3], 2.0) + Math.pow(1648.0 - input[4], 2.0) + Math.pow(6681.0 - input[5], 2.0) + Math.pow(0.189134881 - input[6], 2.0) + Math.pow(0.18636272 - input[7], 2.0) + Math.pow(207.7864273 - input[8], 2.0) + Math.pow(0.02439112 - input[9], 2.0) + Math.pow(0.024875345 - input[10], 2.0) + Math.pow(3.036885672 - input[11], 2.0) + Math.pow(4.24855312 - input[12], 2.0) + Math.pow(9.0 - input[13], 2.0) + Math.pow(5565.0 - input[14], 2.0) + Math.pow(1821.44115 - input[15], 2.0) + Math.pow(151584.1621 - input[16], 2.0) + Math.pow(10665.0 - input[17], 2.0) + Math.pow(11330.0 - input[18], 2.0) + Math.pow(0.000014 - input[19], 2.0) + Math.pow(206.6955914 - input[20], 2.0) + Math.pow(91.12272354 - input[21], 2.0) + Math.pow(959.0 - input[22], 2.0) + Math.pow(5355.0 - input[23], 2.0) + Math.pow(0.341086393 - input[24], 2.0) + Math.pow(0.087144531 - input[25], 2.0) + Math.pow(148.9091575 - input[26], 2.0) + Math.pow(0.057597501 - input[27], 2.0) + Math.pow(0.010684379 - input[28], 2.0) + Math.pow(3.172278754 - input[29], 2.0) + Math.pow(1.061859395 - input[30], 2.0) + Math.pow(6.0 - input[31], 2.0) + Math.pow(11370.0 - input[32], 2.0) + Math.pow(1747.585312 - input[33], 2.0) + Math.pow(292883.3043 - input[34], 2.0) + Math.pow(22700.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(1370.0 - input[0], 2.0) + Math.pow(0.00000707 - input[1], 2.0) + Math.pow(377.251255 - input[2], 2.0) + Math.pow(322.5462303 - input[3], 2.0) + Math.pow(1718.0 - input[4], 2.0) + Math.pow(8347.0 - input[5], 2.0) + Math.pow(0.218832974 - input[6], 2.0) + Math.pow(0.264510018 - input[7], 2.0) + Math.pow(349.8987427 - input[8], 2.0) + Math.pow(0.0308558 - input[9], 2.0) + Math.pow(0.025046298 - input[10], 2.0) + Math.pow(4.740620461 - input[11], 2.0) + Math.pow(6.312143283 - input[12], 2.0) + Math.pow(6.0 - input[13], 2.0) + Math.pow(3100.0 - input[14], 2.0) + Math.pow(1903.443548 - input[15], 2.0) + Math.pow(87585.11778 - input[16], 2.0) + Math.pow(4470.0 - input[17], 2.0) + Math.pow(2710.0 - input[18], 2.0) + Math.pow(0.0000132 - input[19], 2.0) + Math.pow(83.96809011 - input[20], 2.0) + Math.pow(42.74393577 - input[21], 2.0) + Math.pow(323.0 - input[22], 2.0) + Math.pow(4791.0 - input[23], 2.0) + Math.pow(0.278533385 - input[24], 2.0) + Math.pow(0.098769824 - input[25], 2.0) + Math.pow(63.35601294 - input[26], 2.0) + Math.pow(0.046245401 - input[27], 2.0) + Math.pow(0.011131568 - input[28], 2.0) + Math.pow(2.134097393 - input[29], 2.0) + Math.pow(0.85538906 - input[30], 2.0) + Math.pow(3.0 - input[31], 2.0) + Math.pow(13465.0 - input[32], 2.0) + Math.pow(2011.940215 - input[33], 2.0) + Math.pow(46602.22182 - input[34], 2.0) + Math.pow(16175.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(3055.0 - input[0], 2.0) + Math.pow(0.00000399 - input[1], 2.0) + Math.pow(246.2915804 - input[2], 2.0) + Math.pow(437.9511333 - input[3], 2.0) + Math.pow(2027.0 - input[4], 2.0) + Math.pow(6751.0 - input[5], 2.0) + Math.pow(0.413430063 - input[6], 2.0) + Math.pow(0.285251533 - input[7], 2.0) + Math.pow(342.1213569 - input[8], 2.0) + Math.pow(0.066793297 - input[9], 2.0) + Math.pow(0.028946407 - input[10], 2.0) + Math.pow(4.384341762 - input[11], 2.0) + Math.pow(7.790143294 - input[12], 2.0) + Math.pow(6.0 - input[13], 2.0) + Math.pow(1730.0 - input[14], 2.0) + Math.pow(1759.450867 - input[15], 2.0) + Math.pow(142712.4615 - input[16], 2.0) + Math.pow(4785.0 - input[17], 2.0) + Math.pow(1990.0 - input[18], 2.0) + Math.pow(0.00000912 - input[19], 2.0) + Math.pow(263.6804701 - input[20], 2.0) + Math.pow(91.58092026 - input[21], 2.0) + Math.pow(316.0 - input[22], 2.0) + Math.pow(4413.0 - input[23], 2.0) + Math.pow(0.169701669 - input[24], 2.0) + Math.pow(0.064731161 - input[25], 2.0) + Math.pow(177.6306952 - input[26], 2.0) + Math.pow(0.020661176 - input[27], 2.0) + Math.pow(0.009591629 - input[28], 2.0) + Math.pow(3.195074314 - input[29], 2.0) + Math.pow(1.835675135 - input[30], 2.0) + Math.pow(2.0 - input[31], 2.0) + Math.pow(5610.0 - input[32], 2.0) + Math.pow(963.1078431 - input[33], 2.0) + Math.pow(73554.00709 - input[34], 2.0) + Math.pow(7600.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(3720.0 - input[0], 2.0) + Math.pow(0.0000103 - input[1], 2.0) + Math.pow(263.2525531 - input[2], 2.0) + Math.pow(150.3942837 - input[3], 2.0) + Math.pow(1049.0 - input[4], 2.0) + Math.pow(9005.0 - input[5], 2.0) + Math.pow(0.392946758 - input[6], 2.0) + Math.pow(0.169244913 - input[7], 2.0) + Math.pow(206.8234184 - input[8], 2.0) + Math.pow(0.064320401 - input[9], 2.0) + Math.pow(0.022219325 - input[10], 2.0) + Math.pow(4.209757447 - input[11], 2.0) + Math.pow(2.787851898 - input[12], 2.0) + Math.pow(13.0 - input[13], 2.0) + Math.pow(5550.0 - input[14], 2.0) + Math.pow(1170.209009 - input[15], 2.0) + Math.pow(141934.6482 - input[16], 2.0) + Math.pow(9270.0 - input[17], 2.0) + Math.pow(4715.0 - input[18], 2.0) + Math.pow(0.00000871 - input[19], 2.0) + Math.pow(240.253377 - input[20], 2.0) + Math.pow(106.7041945 - input[21], 2.0) + Math.pow(332.0 - input[22], 2.0) + Math.pow(4635.0 - input[23], 2.0) + Math.pow(0.203674526 - input[24], 2.0) + Math.pow(0.07231983 - input[25], 2.0) + Math.pow(173.4787858 - input[26], 2.0) + Math.pow(0.028501341 - input[27], 2.0) + Math.pow(0.009861754 - input[28], 2.0) + Math.pow(2.591301121 - input[29], 2.0) + Math.pow(2.115361912 - input[30], 2.0) + Math.pow(4.0 - input[31], 2.0) + Math.pow(5460.0 - input[32], 2.0) + Math.pow(898.6648352 - input[33], 2.0) + Math.pow(50583.9188 - input[34], 2.0) + Math.pow(10175.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(890.0 - input[0], 2.0) + Math.pow(0.00000953 - input[1], 2.0) + Math.pow(412.0319025 - input[2], 2.0) + Math.pow(264.4318668 - input[3], 2.0) + Math.pow(1877.0 - input[4], 2.0) + Math.pow(6801.0 - input[5], 2.0) + Math.pow(0.340128469 - input[6], 2.0) + Math.pow(0.187452249 - input[7], 2.0) + Math.pow(338.2318846 - input[8], 2.0) + Math.pow(0.058966347 - input[9], 2.0) + Math.pow(0.01965099 - input[10], 2.0) + Math.pow(4.891469723 - input[11], 2.0) + Math.pow(5.070831052 - input[12], 2.0) + Math.pow(6.0 - input[13], 2.0) + Math.pow(4795.0 - input[14], 2.0) + Math.pow(1910.706986 - input[15], 2.0) + Math.pow(107991.4334 - input[16], 2.0) + Math.pow(5685.0 - input[17], 2.0) + Math.pow(965.0 - input[18], 2.0) + Math.pow(0.0000111 - input[19], 2.0) + Math.pow(104.0449867 - input[20], 2.0) + Math.pow(56.14261802 - input[21], 2.0) + Math.pow(262.0 - input[22], 2.0) + Math.pow(4673.0 - input[23], 2.0) + Math.pow(0.225531565 - input[24], 2.0) + Math.pow(0.074903079 - input[25], 2.0) + Math.pow(80.09380237 - input[26], 2.0) + Math.pow(0.027257033 - input[27], 2.0) + Math.pow(0.009775303 - input[28], 2.0) + Math.pow(2.442551765 - input[29], 2.0) + Math.pow(1.129026216 - input[30], 2.0) + Math.pow(2.0 - input[31], 2.0) + Math.pow(10200.0 - input[32], 2.0) + Math.pow(1992.459804 - input[33], 2.0) + Math.pow(58566.57387 - input[34], 2.0) + Math.pow(11165.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(1580.0 - input[0], 2.0) + Math.pow(0.00000927 - input[1], 2.0) + Math.pow(359.1621992 - input[2], 2.0) + Math.pow(252.3733138 - input[3], 2.0) + Math.pow(1468.0 - input[4], 2.0) + Math.pow(6796.0 - input[5], 2.0) + Math.pow(0.176651459 - input[6], 2.0) + Math.pow(0.15997772 - input[7], 2.0) + Math.pow(305.7677565 - input[8], 2.0) + Math.pow(0.023541444 - input[9], 2.0) + Math.pow(0.020445485 - input[10], 2.0) + Math.pow(3.721018651 - input[11], 2.0) + Math.pow(4.836946409 - input[12], 2.0) + Math.pow(5.0 - input[13], 2.0) + Math.pow(4605.0 - input[14], 2.0) + Math.pow(1533.608035 - input[15], 2.0) + Math.pow(88953.58469 - input[16], 2.0) + Math.pow(6185.0 - input[17], 2.0) + Math.pow(1860.0 - input[18], 2.0) + Math.pow(0.0000113 - input[19], 2.0) + Math.pow(212.915944 - input[20], 2.0) + Math.pow(69.00766309 - input[21], 2.0) + Math.pow(345.0 - input[22], 2.0) + Math.pow(5293.0 - input[23], 2.0) + Math.pow(0.303038678 - input[24], 2.0) + Math.pow(0.095977544 - input[25], 2.0) + Math.pow(140.9618035 - input[26], 2.0) + Math.pow(0.044074343 - input[27], 2.0) + Math.pow(0.011603811 - input[28], 2.0) + Math.pow(1.35240453 - input[29], 2.0) + Math.pow(1.367500242 - input[30], 2.0) + Math.pow(2.0 - input[31], 2.0) + Math.pow(8525.0 - input[32], 2.0) + Math.pow(1780.229912 - input[33], 2.0) + Math.pow(98460.47031 - input[34], 2.0) + Math.pow(10385.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(109965.0 - input[0], 2.0) + Math.pow(0.0000283 - input[1], 2.0) + Math.pow(76.72668852 - input[2], 2.0) + Math.pow(47.35498966 - input[3], 2.0) + Math.pow(2039.0 - input[4], 2.0) + Math.pow(12562.0 - input[5], 2.0) + Math.pow(0.315730803 - input[6], 2.0) + Math.pow(0.15896607 - input[7], 2.0) + Math.pow(62.04083909 - input[8], 2.0) + Math.pow(0.050312398 - input[9], 2.0) + Math.pow(0.01817291 - input[10], 2.0) + Math.pow(1.482137372 - input[11], 2.0) + Math.pow(0.822160331 - input[12], 2.0) + Math.pow(54.0 - input[13], 2.0) + Math.pow(46120.0 - input[14], 2.0) + Math.pow(1280.301171 - input[15], 2.0) + Math.pow(226618.1524 - input[16], 2.0) + Math.pow(156085.0 - input[17], 2.0) + Math.pow(96485.0 - input[18], 2.0) + Math.pow(0.0000199 - input[19], 2.0) + Math.pow(104.853754 - input[20], 2.0) + Math.pow(44.75792842 - input[21], 2.0) + Math.pow(3236.0 - input[22], 2.0) + Math.pow(5662.0 - input[23], 2.0) + Math.pow(0.496405442 - input[24], 2.0) + Math.pow(0.149677675 - input[25], 2.0) + Math.pow(74.80584119 - input[26], 2.0) + Math.pow(0.086069835 - input[27], 2.0) + Math.pow(0.017451555 - input[28], 2.0) + Math.pow(2.028206576 - input[29], 2.0) + Math.pow(0.501268311 - input[30], 2.0) + Math.pow(36.0 - input[31], 2.0) + Math.pow(42200.0 - input[32], 2.0) + Math.pow(1583.516588 - input[33], 2.0) + Math.pow(243248.2165 - input[34], 2.0) + Math.pow(138685.0 - input[35], 2.0))) * -0.8637010619590965 + Math.exp(-0.000000000028797293230485992 * (Math.pow(4055.0 - input[0], 2.0) + Math.pow(0.0000136 - input[1], 2.0) + Math.pow(173.4859205 - input[2], 2.0) + Math.pow(97.46897505 - input[3], 2.0) + Math.pow(1163.0 - input[4], 2.0) + Math.pow(6280.0 - input[5], 2.0) + Math.pow(0.208911443 - input[6], 2.0) + Math.pow(0.148446179 - input[7], 2.0) + Math.pow(135.4774478 - input[8], 2.0) + Math.pow(0.026987291 - input[9], 2.0) + Math.pow(0.019202232 - input[10], 2.0) + Math.pow(2.207661548 - input[11], 2.0) + Math.pow(1.923201331 - input[12], 2.0) + Math.pow(16.0 - input[13], 2.0) + Math.pow(10100.0 - input[14], 2.0) + Math.pow(1253.323762 - input[15], 2.0) + Math.pow(139103.9991 - input[16], 2.0) + Math.pow(14155.0 - input[17], 2.0) + Math.pow(21105.0 - input[18], 2.0) + Math.pow(0.0000124 - input[19], 2.0) + Math.pow(183.6719621 - input[20], 2.0) + Math.pow(87.79765982 - input[21], 2.0) + Math.pow(689.0 - input[22], 2.0) + Math.pow(4783.0 - input[23], 2.0) + Math.pow(0.441952044 - input[24], 2.0) + Math.pow(0.195597607 - input[25], 2.0) + Math.pow(135.734811 - input[26], 2.0) + Math.pow(0.074718532 - input[27], 2.0) + Math.pow(0.030031762 - input[28], 2.0) + Math.pow(3.28925724 - input[29], 2.0) + Math.pow(1.297134732 - input[30], 2.0) + Math.pow(7.0 - input[31], 2.0) + Math.pow(10615.0 - input[32], 2.0) + Math.pow(1096.918983 - input[33], 2.0) + Math.pow(111167.5422 - input[34], 2.0) + Math.pow(31720.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(3215.0 - input[0], 2.0) + Math.pow(0.0000127 - input[1], 2.0) + Math.pow(191.564564 - input[2], 2.0) + Math.pow(105.0648237 - input[3], 2.0) + Math.pow(1687.0 - input[4], 2.0) + Math.pow(6601.0 - input[5], 2.0) + Math.pow(0.312352353 - input[6], 2.0) + Math.pow(0.156559479 - input[7], 2.0) + Math.pow(148.3146938 - input[8], 2.0) + Math.pow(0.051054488 - input[9], 2.0) + Math.pow(0.017814756 - input[10], 2.0) + Math.pow(2.90105815 - input[11], 2.0) + Math.pow(1.863310798 - input[12], 2.0) + Math.pow(10.0 - input[13], 2.0) + Math.pow(9215.0 - input[14], 2.0) + Math.pow(1661.862181 - input[15], 2.0) + Math.pow(187149.3972 - input[16], 2.0) + Math.pow(12430.0 - input[17], 2.0) + Math.pow(7840.0 - input[18], 2.0) + Math.pow(0.0000165 - input[19], 2.0) + Math.pow(175.999996 - input[20], 2.0) + Math.pow(52.0340537 - input[21], 2.0) + Math.pow(1368.0 - input[22], 2.0) + Math.pow(5160.0 - input[23], 2.0) + Math.pow(0.268059194 - input[24], 2.0) + Math.pow(0.133734077 - input[25], 2.0) + Math.pow(114.0170248 - input[26], 2.0) + Math.pow(0.039668408 - input[27], 2.0) + Math.pow(0.012065462 - input[28], 2.0) + Math.pow(2.030716145 - input[29], 2.0) + Math.pow(0.965833538 - input[30], 2.0) + Math.pow(11.0 - input[31], 2.0) + Math.pow(14575.0 - input[32], 2.0) + Math.pow(1891.29777 - input[33], 2.0) + Math.pow(148685.5381 - input[34], 2.0) + Math.pow(22415.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(4185.0 - input[0], 2.0) + Math.pow(0.0000102 - input[1], 2.0) + Math.pow(161.2614709 - input[2], 2.0) + Math.pow(145.9451825 - input[3], 2.0) + Math.pow(1556.0 - input[4], 2.0) + Math.pow(7543.0 - input[5], 2.0) + Math.pow(0.353786573 - input[6], 2.0) + Math.pow(0.129615831 - input[7], 2.0) + Math.pow(153.6033267 - input[8], 2.0) + Math.pow(0.059282122 - input[9], 2.0) + Math.pow(0.015813486 - input[10], 2.0) + Math.pow(2.84873816 - input[11], 2.0) + Math.pow(2.537469446 - input[12], 2.0) + Math.pow(15.0 - input[13], 2.0) + Math.pow(5475.0 - input[14], 2.0) + Math.pow(1357.79726 - input[15], 2.0) + Math.pow(136841.6064 - input[16], 2.0) + Math.pow(9660.0 - input[17], 2.0) + Math.pow(6430.0 - input[18], 2.0) + Math.pow(0.000014 - input[19], 2.0) + Math.pow(256.0892386 - input[20], 2.0) + Math.pow(65.0545731 - input[21], 2.0) + Math.pow(1053.0 - input[22], 2.0) + Math.pow(4975.0 - input[23], 2.0) + Math.pow(0.474060669 - input[24], 2.0) + Math.pow(0.074412622 - input[25], 2.0) + Math.pow(160.5719059 - input[26], 2.0) + Math.pow(0.078797629 - input[27], 2.0) + Math.pow(0.008245917 - input[28], 2.0) + Math.pow(2.304280983 - input[29], 2.0) + Math.pow(1.216762913 - input[30], 2.0) + Math.pow(4.0 - input[31], 2.0) + Math.pow(8965.0 - input[32], 2.0) + Math.pow(953.147797 - input[33], 2.0) + Math.pow(103961.3161 - input[34], 2.0) + Math.pow(15395.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(3845.0 - input[0], 2.0) + Math.pow(0.0000105 - input[1], 2.0) + Math.pow(130.9259545 - input[2], 2.0) + Math.pow(232.7228334 - input[3], 2.0) + Math.pow(1976.0 - input[4], 2.0) + Math.pow(8176.0 - input[5], 2.0) + Math.pow(0.203339153 - input[6], 2.0) + Math.pow(0.16793373 - input[7], 2.0) + Math.pow(181.824394 - input[8], 2.0) + Math.pow(0.026982909 - input[9], 2.0) + Math.pow(0.020179702 - input[10], 2.0) + Math.pow(2.13597876 - input[11], 2.0) + Math.pow(4.340161621 - input[12], 2.0) + Math.pow(9.0 - input[13], 2.0) + Math.pow(5020.0 - input[14], 2.0) + Math.pow(1913.365538 - input[15], 2.0) + Math.pow(91289.59447 - input[16], 2.0) + Math.pow(8865.0 - input[17], 2.0) + Math.pow(6540.0 - input[18], 2.0) + Math.pow(0.0000116 - input[19], 2.0) + Math.pow(144.7202755 - input[20], 2.0) + Math.pow(44.34313678 - input[21], 2.0) + Math.pow(490.0 - input[22], 2.0) + Math.pow(4868.0 - input[23], 2.0) + Math.pow(0.315549276 - input[24], 2.0) + Math.pow(0.050221716 - input[25], 2.0) + Math.pow(94.53170616 - input[26], 2.0) + Math.pow(0.051742579 - input[27], 2.0) + Math.pow(0.00664854 - input[28], 2.0) + Math.pow(2.165130782 - input[29], 2.0) + Math.pow(0.864725288 - input[30], 2.0) + Math.pow(5.0 - input[31], 2.0) + Math.pow(13465.0 - input[32], 2.0) + Math.pow(1977.954326 - input[33], 2.0) + Math.pow(78695.91808 - input[34], 2.0) + Math.pow(20005.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(2930.0 - input[0], 2.0) + Math.pow(0.0000155 - input[1], 2.0) + Math.pow(333.8394495 - input[2], 2.0) + Math.pow(156.7275644 - input[3], 2.0) + Math.pow(2428.0 - input[4], 2.0) + Math.pow(9491.0 - input[5], 2.0) + Math.pow(0.19111502 - input[6], 2.0) + Math.pow(0.106993036 - input[7], 2.0) + Math.pow(245.283507 - input[8], 2.0) + Math.pow(0.025509241 - input[9], 2.0) + Math.pow(0.015565552 - input[10], 2.0) + Math.pow(5.216168329 - input[11], 2.0) + Math.pow(2.566982643 - input[12], 2.0) + Math.pow(9.0 - input[13], 2.0) + Math.pow(10070.0 - input[14], 2.0) + Math.pow(1967.197617 - input[15], 2.0) + Math.pow(58974.02748 - input[16], 2.0) + Math.pow(13000.0 - input[17], 2.0) + Math.pow(3540.0 - input[18], 2.0) + Math.pow(0.00000783 - input[19], 2.0) + Math.pow(223.4272718 - input[20], 2.0) + Math.pow(125.4301969 - input[21], 2.0) + Math.pow(1515.0 - input[22], 2.0) + Math.pow(4706.0 - input[23], 2.0) + Math.pow(0.329346126 - input[24], 2.0) + Math.pow(0.062043493 - input[25], 2.0) + Math.pow(174.4287344 - input[26], 2.0) + Math.pow(0.052191328 - input[27], 2.0) + Math.pow(0.009491686 - input[28], 2.0) + Math.pow(1.391327047 - input[29], 2.0) + Math.pow(2.063758039 - input[30], 2.0) + Math.pow(4.0 - input[31], 2.0) + Math.pow(5505.0 - input[32], 2.0) + Math.pow(1872.864668 - input[33], 2.0) + Math.pow(120198.1206 - input[34], 2.0) + Math.pow(9045.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(8905.0 - input[0], 2.0) + Math.pow(0.00000755 - input[1], 2.0) + Math.pow(256.2139915 - input[2], 2.0) + Math.pow(327.5904945 - input[3], 2.0) + Math.pow(2997.0 - input[4], 2.0) + Math.pow(6653.0 - input[5], 2.0) + Math.pow(0.366949603 - input[6], 2.0) + Math.pow(0.232221654 - input[7], 2.0) + Math.pow(291.902243 - input[8], 2.0) + Math.pow(0.061197738 - input[9], 2.0) + Math.pow(0.027765754 - input[10], 2.0) + Math.pow(4.624125613 - input[11], 2.0) + Math.pow(6.078517862 - input[12], 2.0) + Math.pow(7.0 - input[13], 2.0) + Math.pow(3490.0 - input[14], 2.0) + Math.pow(1964.848138 - input[15], 2.0) + Math.pow(69295.28639 - input[16], 2.0) + Math.pow(12395.0 - input[17], 2.0) + Math.pow(3485.0 - input[18], 2.0) + Math.pow(0.00000693 - input[19], 2.0) + Math.pow(71.235252 - input[20], 2.0) + Math.pow(109.175963 - input[21], 2.0) + Math.pow(352.0 - input[22], 2.0) + Math.pow(4861.0 - input[23], 2.0) + Math.pow(0.251038877 - input[24], 2.0) + Math.pow(0.063223518 - input[25], 2.0) + Math.pow(90.20560752 - input[26], 2.0) + Math.pow(0.035407397 - input[27], 2.0) + Math.pow(0.008915743 - input[28], 2.0) + Math.pow(1.617025349 - input[29], 2.0) + Math.pow(2.147820413 - input[30], 2.0) + Math.pow(2.0 - input[31], 2.0) + Math.pow(5780.0 - input[32], 2.0) + Math.pow(1980.432526 - input[33], 2.0) + Math.pow(55826.2887 - input[34], 2.0) + Math.pow(9265.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(7185.0 - input[0], 2.0) + Math.pow(0.00000891 - input[1], 2.0) + Math.pow(263.7622229 - input[2], 2.0) + Math.pow(126.2564257 - input[3], 2.0) + Math.pow(1598.0 - input[4], 2.0) + Math.pow(6190.0 - input[5], 2.0) + Math.pow(0.502991865 - input[6], 2.0) + Math.pow(0.192488003 - input[7], 2.0) + Math.pow(195.0093243 - input[8], 2.0) + Math.pow(0.087829191 - input[9], 2.0) + Math.pow(0.022710376 - input[10], 2.0) + Math.pow(3.689057264 - input[11], 2.0) + Math.pow(2.434401698 - input[12], 2.0) + Math.pow(8.0 - input[13], 2.0) + Math.pow(5485.0 - input[14], 2.0) + Math.pow(1968.856882 - input[15], 2.0) + Math.pow(46031.79264 - input[16], 2.0) + Math.pow(12670.0 - input[17], 2.0) + Math.pow(1800.0 - input[18], 2.0) + Math.pow(0.0000133 - input[19], 2.0) + Math.pow(78.07190578 - input[20], 2.0) + Math.pow(82.78498306 - input[21], 2.0) + Math.pow(418.0 - input[22], 2.0) + Math.pow(4874.0 - input[23], 2.0) + Math.pow(0.28449467 - input[24], 2.0) + Math.pow(0.078042656 - input[25], 2.0) + Math.pow(80.42844442 - input[26], 2.0) + Math.pow(0.044096989 - input[27], 2.0) + Math.pow(0.009228802 - input[28], 2.0) + Math.pow(1.908770699 - input[29], 2.0) + Math.pow(1.644229764 - input[30], 2.0) + Math.pow(2.0 - input[31], 2.0) + Math.pow(9545.0 - input[32], 2.0) + Math.pow(2012.196962 - input[33], 2.0) + Math.pow(40451.17231 - input[34], 2.0) + Math.pow(11345.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(3490.0 - input[0], 2.0) + Math.pow(0.00000951 - input[1], 2.0) + Math.pow(274.9038673 - input[2], 2.0) + Math.pow(250.4724016 - input[3], 2.0) + Math.pow(1073.0 - input[4], 2.0) + Math.pow(7853.0 - input[5], 2.0) + Math.pow(0.322473246 - input[6], 2.0) + Math.pow(0.227918764 - input[7], 2.0) + Math.pow(262.6881345 - input[8], 2.0) + Math.pow(0.044612072 - input[9], 2.0) + Math.pow(0.026538636 - input[10], 2.0) + Math.pow(4.926418298 - input[11], 2.0) + Math.pow(4.864833013 - input[12], 2.0) + Math.pow(11.0 - input[13], 2.0) + Math.pow(4965.0 - input[14], 2.0) + Math.pow(1491.646526 - input[15], 2.0) + Math.pow(166324.3554 - input[16], 2.0) + Math.pow(8455.0 - input[17], 2.0) + Math.pow(10965.0 - input[18], 2.0) + Math.pow(0.0000101 - input[19], 2.0) + Math.pow(295.7790697 - input[20], 2.0) + Math.pow(76.34670687 - input[21], 2.0) + Math.pow(504.0 - input[22], 2.0) + Math.pow(5046.0 - input[23], 2.0) + Math.pow(0.699537363 - input[24], 2.0) + Math.pow(0.063256618 - input[25], 2.0) + Math.pow(186.0628883 - input[26], 2.0) + Math.pow(0.123355606 - input[27], 2.0) + Math.pow(0.010317743 - input[28], 2.0) + Math.pow(4.337959866 - input[29], 2.0) + Math.pow(1.406049501 - input[30], 2.0) + Math.pow(5.0 - input[31], 2.0) + Math.pow(8435.0 - input[32], 2.0) + Math.pow(1897.23118 - input[33], 2.0) + Math.pow(152896.9566 - input[34], 2.0) + Math.pow(19400.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(3235.0 - input[0], 2.0) + Math.pow(0.00000772 - input[1], 2.0) + Math.pow(285.3104054 - input[2], 2.0) + Math.pow(306.7419681 - input[3], 2.0) + Math.pow(2710.0 - input[4], 2.0) + Math.pow(5757.0 - input[5], 2.0) + Math.pow(0.550116818 - input[6], 2.0) + Math.pow(0.237772204 - input[7], 2.0) + Math.pow(296.0261867 - input[8], 2.0) + Math.pow(0.099227717 - input[9], 2.0) + Math.pow(0.021500472 - input[10], 2.0) + Math.pow(4.648664455 - input[11], 2.0) + Math.pow(5.657389847 - input[12], 2.0) + Math.pow(6.0 - input[13], 2.0) + Math.pow(3405.0 - input[14], 2.0) + Math.pow(1917.525698 - input[15], 2.0) + Math.pow(81945.2978 - input[16], 2.0) + Math.pow(6640.0 - input[17], 2.0) + Math.pow(610.0 - input[18], 2.0) + Math.pow(0.0000104 - input[19], 2.0) + Math.pow(99.35808322 - input[20], 2.0) + Math.pow(105.0446324 - input[21], 2.0) + Math.pow(696.0 - input[22], 2.0) + Math.pow(5218.0 - input[23], 2.0) + Math.pow(0.270237891 - input[24], 2.0) + Math.pow(0.08497668 - input[25], 2.0) + Math.pow(102.2013578 - input[26], 2.0) + Math.pow(0.027609995 - input[27], 2.0) + Math.pow(0.010173856 - input[28], 2.0) + Math.pow(2.281347565 - input[29], 2.0) + Math.pow(2.094491685 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(5980.0 - input[32], 2.0) + Math.pow(2037.61204 - input[33], 2.0) + Math.pow(9722.295975 - input[34], 2.0) + Math.pow(6590.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(1000.0 - input[0], 2.0) + Math.pow(0.00000745 - input[1], 2.0) + Math.pow(396.9239372 - input[2], 2.0) + Math.pow(182.373694 - input[3], 2.0) + Math.pow(1222.0 - input[4], 2.0) + Math.pow(8282.0 - input[5], 2.0) + Math.pow(0.319493468 - input[6], 2.0) + Math.pow(0.13860783 - input[7], 2.0) + Math.pow(289.6488156 - input[8], 2.0) + Math.pow(0.030779344 - input[9], 2.0) + Math.pow(0.016716259 - input[10], 2.0) + Math.pow(2.076673046 - input[11], 2.0) + Math.pow(3.571027545 - input[12], 2.0) + Math.pow(3.0 - input[13], 2.0) + Math.pow(3575.0 - input[14], 2.0) + Math.pow(1721.893706 - input[15], 2.0) + Math.pow(139240.9286 - input[16], 2.0) + Math.pow(4575.0 - input[17], 2.0) + Math.pow(5230.0 - input[18], 2.0) + Math.pow(0.000012 - input[19], 2.0) + Math.pow(57.97729841 - input[20], 2.0) + Math.pow(56.98773185 - input[21], 2.0) + Math.pow(751.0 - input[22], 2.0) + Math.pow(4960.0 - input[23], 2.0) + Math.pow(0.259927406 - input[24], 2.0) + Math.pow(0.065630983 - input[25], 2.0) + Math.pow(57.48251513 - input[26], 2.0) + Math.pow(0.040845516 - input[27], 2.0) + Math.pow(0.006909336 - input[28], 2.0) + Math.pow(1.426328529 - input[29], 2.0) + Math.pow(1.132124772 - input[30], 2.0) + Math.pow(2.0 - input[31], 2.0) + Math.pow(10200.0 - input[32], 2.0) + Math.pow(1991.421078 - input[33], 2.0) + Math.pow(68837.74671 - input[34], 2.0) + Math.pow(15430.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(2580.0 - input[0], 2.0) + Math.pow(0.00000931 - input[1], 2.0) + Math.pow(222.1299966 - input[2], 2.0) + Math.pow(174.8759267 - input[3], 2.0) + Math.pow(1740.0 - input[4], 2.0) + Math.pow(6490.0 - input[5], 2.0) + Math.pow(0.249929669 - input[6], 2.0) + Math.pow(0.198751708 - input[7], 2.0) + Math.pow(198.5029617 - input[8], 2.0) + Math.pow(0.037398719 - input[9], 2.0) + Math.pow(0.025839968 - input[10], 2.0) + Math.pow(3.761577568 - input[11], 2.0) + Math.pow(3.195770448 - input[12], 2.0) + Math.pow(11.0 - input[13], 2.0) + Math.pow(5455.0 - input[14], 2.0) + Math.pow(1713.538038 - input[15], 2.0) + Math.pow(187226.9433 - input[16], 2.0) + Math.pow(8035.0 - input[17], 2.0) + Math.pow(2715.0 - input[18], 2.0) + Math.pow(0.00000798 - input[19], 2.0) + Math.pow(118.9373997 - input[20], 2.0) + Math.pow(112.1297114 - input[21], 2.0) + Math.pow(298.0 - input[22], 2.0) + Math.pow(4877.0 - input[23], 2.0) + Math.pow(0.302101872 - input[24], 2.0) + Math.pow(0.063571331 - input[25], 2.0) + Math.pow(115.5335556 - input[26], 2.0) + Math.pow(0.04650953 - input[27], 2.0) + Math.pow(0.009627229 - input[28], 2.0) + Math.pow(2.459382563 - input[29], 2.0) + Math.pow(2.225957788 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(5015.0 - input[32], 2.0) + Math.pow(2008.866401 - input[33], 2.0) + Math.pow(33922.92931 - input[34], 2.0) + Math.pow(7730.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(3490.0 - input[0], 2.0) + Math.pow(0.0000126 - input[1], 2.0) + Math.pow(142.6394514 - input[2], 2.0) + Math.pow(104.0937293 - input[3], 2.0) + Math.pow(1336.0 - input[4], 2.0) + Math.pow(6508.0 - input[5], 2.0) + Math.pow(0.215218427 - input[6], 2.0) + Math.pow(0.116110942 - input[7], 2.0) + Math.pow(123.3665904 - input[8], 2.0) + Math.pow(0.032768499 - input[9], 2.0) + Math.pow(0.016024088 - input[10], 2.0) + Math.pow(1.845574375 - input[11], 2.0) + Math.pow(2.000708193 - input[12], 2.0) + Math.pow(7.0 - input[13], 2.0) + Math.pow(7480.0 - input[14], 2.0) + Math.pow(1931.085561 - input[15], 2.0) + Math.pow(132549.6304 - input[16], 2.0) + Math.pow(10970.0 - input[17], 2.0) + Math.pow(2025.0 - input[18], 2.0) + Math.pow(0.0000117 - input[19], 2.0) + Math.pow(85.6130529 - input[20], 2.0) + Math.pow(54.6343743 - input[21], 2.0) + Math.pow(180.0 - input[22], 2.0) + Math.pow(4875.0 - input[23], 2.0) + Math.pow(0.43635936 - input[24], 2.0) + Math.pow(0.067443936 - input[25], 2.0) + Math.pow(70.1237136 - input[26], 2.0) + Math.pow(0.072098735 - input[27], 2.0) + Math.pow(0.007176626 - input[28], 2.0) + Math.pow(2.215636312 - input[29], 2.0) + Math.pow(1.091955349 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(10455.0 - input[32], 2.0) + Math.pow(2035.867527 - input[33], 2.0) + Math.pow(13498.71272 - input[34], 2.0) + Math.pow(12480.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(26050.0 - input[0], 2.0) + Math.pow(0.00000168 - input[1], 2.0) + Math.pow(37.10275148 - input[2], 2.0) + Math.pow(113.1531863 - input[3], 2.0) + Math.pow(1319.0 - input[4], 2.0) + Math.pow(561.0 - input[5], 2.0) + Math.pow(0.180408203 - input[6], 2.0) + Math.pow(0.117720359 - input[7], 2.0) + Math.pow(75.12796888 - input[8], 2.0) + Math.pow(0.028149522 - input[9], 2.0) + Math.pow(0.016802434 - input[10], 2.0) + Math.pow(0.766628733 - input[11], 2.0) + Math.pow(2.106922763 - input[12], 2.0) + Math.pow(2.0 - input[13], 2.0) + Math.pow(865.0 - input[14], 2.0) + Math.pow(1447.196532 - input[15], 2.0) + Math.pow(188904.2157 - input[16], 2.0) + Math.pow(26915.0 - input[17], 2.0) + Math.pow(8800.0 - input[18], 2.0) + Math.pow(0.0000154 - input[19], 2.0) + Math.pow(192.9027404 - input[20], 2.0) + Math.pow(49.42112461 - input[21], 2.0) + Math.pow(596.0 - input[22], 2.0) + Math.pow(5661.0 - input[23], 2.0) + Math.pow(0.323077536 - input[24], 2.0) + Math.pow(0.139252695 - input[25], 2.0) + Math.pow(121.1619325 - input[26], 2.0) + Math.pow(0.052803939 - input[27], 2.0) + Math.pow(0.013052787 - input[28], 2.0) + Math.pow(2.177852644 - input[29], 2.0) + Math.pow(0.970807395 - input[30], 2.0) + Math.pow(7.0 - input[31], 2.0) + Math.pow(14845.0 - input[32], 2.0) + Math.pow(1736.104075 - input[33], 2.0) + Math.pow(139952.0751 - input[34], 2.0) + Math.pow(23645.0 - input[35], 2.0))) * -1.0 + Math.exp(-0.000000000028797293230485992 * (Math.pow(2175.0 - input[0], 2.0) + Math.pow(0.00001 - input[1], 2.0) + Math.pow(188.083515 - input[2], 2.0) + Math.pow(122.606139 - input[3], 2.0) + Math.pow(1421.0 - input[4], 2.0) + Math.pow(7488.0 - input[5], 2.0) + Math.pow(0.221660318 - input[6], 2.0) + Math.pow(0.12628105 - input[7], 2.0) + Math.pow(155.344827 - input[8], 2.0) + Math.pow(0.028649379 - input[9], 2.0) + Math.pow(0.015245324 - input[10], 2.0) + Math.pow(2.250660567 - input[11], 2.0) + Math.pow(2.238175088 - input[12], 2.0) + Math.pow(6.0 - input[13], 2.0) + Math.pow(5545.0 - input[14], 2.0) + Math.pow(1829.20018 - input[15], 2.0) + Math.pow(106875.8211 - input[16], 2.0) + Math.pow(7720.0 - input[17], 2.0) + Math.pow(1125.0 - input[18], 2.0) + Math.pow(0.00000832 - input[19], 2.0) + Math.pow(27.58494431 - input[20], 2.0) + Math.pow(100.6685195 - input[21], 2.0) + Math.pow(546.0 - input[22], 2.0) + Math.pow(4643.0 - input[23], 2.0) + Math.pow(0.194598738 - input[24], 2.0) + Math.pow(0.077307696 - input[25], 2.0) + Math.pow(64.12673192 - input[26], 2.0) + Math.pow(0.023859274 - input[27], 2.0) + Math.pow(0.011183316 - input[28], 2.0) + Math.pow(0.935753924 - input[29], 2.0) + Math.pow(2.014318224 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(5100.0 - input[32], 2.0) + Math.pow(2013.030392 - input[33], 2.0) + Math.pow(42959.75692 - input[34], 2.0) + Math.pow(6225.0 - input[35], 2.0))) *+ Math.exp(-0.000000000028797293230485992 * (Math.pow(690.0 - input[0], 2.0) + Math.pow(0.00000609 - input[1], 2.0) + Math.pow(831.9131425 - input[2], 2.0) + Math.pow(609.0653204 - input[3], 2.0) + Math.pow(3832.0 - input[4], 2.0) + Math.pow(11572.0 - input[5], 2.0) + Math.pow(0.593926745 - input[6], 2.0) + Math.pow(0.503485004 - input[7], 2.0) + Math.pow(720.4892314 - input[8], 2.0) + Math.pow(0.079997556 - input[9], 2.0) + Math.pow(0.043454733 - input[10], 2.0) + Math.pow(10.15310679 - input[11], 2.0) + Math.pow(12.31701109 - input[12], 2.0) + Math.pow(5.0 - input[13], 2.0) + Math.pow(2570.0 - input[14], 2.0) + Math.pow(1991.095331 - input[15], 2.0) + Math.pow(56662.21854 - input[16], 2.0) + Math.pow(3260.0 - input[17], 2.0) + Math.pow(325.0 - input[18], 2.0) + Math.pow(0.00000972 - input[19], 2.0) + Math.pow(449.7687608 - input[20], 2.0) + Math.pow(166.0525376 - input[21], 2.0) + Math.pow(167.0 - input[22], 2.0) + Math.pow(4774.0 - input[23], 2.0) + Math.pow(0.171442842 - input[24], 2.0) + Math.pow(0.051850302 - input[25], 2.0) + Math.pow(307.9106492 - input[26], 2.0) + Math.pow(0.018721056 - input[27], 2.0) + Math.pow(0.007660093 - input[28], 2.0) + Math.pow(0.630301342 - input[29], 2.0) + Math.pow(3.299087158 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(5785.0 - input[32], 2.0) + Math.pow(2019.395851 - input[33], 2.0) + Math.pow(34951.26249 - input[34], 2.0) + Math.pow(6110.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(7285.0 - input[0], 2.0) + Math.pow(0.0000107 - input[1], 2.0) + Math.pow(494.217977 - input[2], 2.0) + Math.pow(203.3101056 - input[3], 2.0) + Math.pow(3909.0 - input[4], 2.0) + Math.pow(6279.0 - input[5], 2.0) + Math.pow(0.336206748 - input[6], 2.0) + Math.pow(0.173123206 - input[7], 2.0) + Math.pow(348.7640413 - input[8], 2.0) + Math.pow(0.057477713 - input[9], 2.0) + Math.pow(0.018806666 - input[10], 2.0) + Math.pow(4.366485622 - input[11], 2.0) + Math.pow(4.272002625 - input[12], 2.0) + Math.pow(5.0 - input[13], 2.0) + Math.pow(5250.0 - input[14], 2.0) + Math.pow(1894.721905 - input[15], 2.0) + Math.pow(90249.79885 - input[16], 2.0) + Math.pow(12535.0 - input[17], 2.0) + Math.pow(4385.0 - input[18], 2.0) + Math.pow(0.00000905 - input[19], 2.0) + Math.pow(314.6717018 - input[20], 2.0) + Math.pow(101.2389838 - input[21], 2.0) + Math.pow(392.0 - input[22], 2.0) + Math.pow(4929.0 - input[23], 2.0) + Math.pow(0.407047522 - input[24], 2.0) + Math.pow(0.073806387 - input[25], 2.0) + Math.pow(207.9553428 - input[26], 2.0) + Math.pow(0.069284399 - input[27], 2.0) + Math.pow(0.008812698 - input[28], 2.0) + Math.pow(2.17784358 - input[29], 2.0) + Math.pow(2.026013665 - input[30], 2.0) + Math.pow(2.0 - input[31], 2.0) + Math.pow(5840.0 - input[32], 2.0) + Math.pow(1890.650685 - input[33], 2.0) + Math.pow(124308.9482 - input[34], 2.0) + Math.pow(10225.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(3590.0 - input[0], 2.0) + Math.pow(0.00000914 - input[1], 2.0) + Math.pow(241.4641104 - input[2], 2.0) + Math.pow(143.9916358 - input[3], 2.0) + Math.pow(1557.0 - input[4], 2.0) + Math.pow(6218.0 - input[5], 2.0) + Math.pow(0.220932838 - input[6], 2.0) + Math.pow(0.163246719 - input[7], 2.0) + Math.pow(192.7278731 - input[8], 2.0) + Math.pow(0.03488358 - input[9], 2.0) + Math.pow(0.018872988 - input[10], 2.0) + Math.pow(3.0702476 - input[11], 2.0) + Math.pow(3.050541459 - input[12], 2.0) + Math.pow(5.0 - input[13], 2.0) + Math.pow(4785.0 - input[14], 2.0) + Math.pow(1736.77325 - input[15], 2.0) + Math.pow(95496.29655 - input[16], 2.0) + Math.pow(8375.0 - input[17], 2.0) + Math.pow(550.0 - input[18], 2.0) + Math.pow(0.00000691 - input[19], 2.0) + Math.pow(107.7400676 - input[20], 2.0) + Math.pow(154.8414101 - input[21], 2.0) + Math.pow(539.0 - input[22], 2.0) + Math.pow(4798.0 - input[23], 2.0) + Math.pow(0.335937949 - input[24], 2.0) + Math.pow(0.052526633 - input[25], 2.0) + Math.pow(131.2907388 - input[26], 2.0) + Math.pow(0.025582079 - input[27], 2.0) + Math.pow(0.008018931 - input[28], 2.0) + Math.pow(1.710016921 - input[29], 2.0) + Math.pow(3.064338281 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(3495.0 - input[32], 2.0) + Math.pow(1823.264664 - input[33], 2.0) + Math.pow(91837.36486 - input[34], 2.0) + Math.pow(4045.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(620.0 - input[0], 2.0) + Math.pow(0.00000481 - input[1], 2.0) + Math.pow(570.8611169 - input[2], 2.0) + Math.pow(315.8294486 - input[3], 2.0) + Math.pow(2141.0 - input[4], 2.0) + Math.pow(6204.0 - input[5], 2.0) + Math.pow(0.394144088 - input[6], 2.0) + Math.pow(0.302403323 - input[7], 2.0) + Math.pow(443.3452827 - input[8], 2.0) + Math.pow(0.062336093 - input[9], 2.0) + Math.pow(0.031651053 - input[10], 2.0) + Math.pow(6.53558684 - input[11], 2.0) + Math.pow(6.419662181 - input[12], 2.0) + Math.pow(4.0 - input[13], 2.0) + Math.pow(2200.0 - input[14], 2.0) + Math.pow(1504.6 - input[15], 2.0) + Math.pow(195968.4309 - input[16], 2.0) + Math.pow(2820.0 - input[17], 2.0) + Math.pow(1225.0 - input[18], 2.0) + Math.pow(0.00000727 - input[19], 2.0) + Math.pow(62.13311296 - input[20], 2.0) + Math.pow(117.7742114 - input[21], 2.0) + Math.pow(599.0 - input[22], 2.0) + Math.pow(4749.0 - input[23], 2.0) + Math.pow(0.191655857 - input[24], 2.0) + Math.pow(0.058950151 - input[25], 2.0) + Math.pow(89.95366218 - input[26], 2.0) + Math.pow(0.022854944 - input[27], 2.0) + Math.pow(0.008978277 - input[28], 2.0) + Math.pow(1.546120678 - input[29], 2.0) + Math.pow(2.338697579 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(4645.0 - input[32], 2.0) + Math.pow(1983.900969 - input[33], 2.0) + Math.pow(49021.97082 - input[34], 2.0) + Math.pow(5870.0 - input[35], 2.0))) + Math.exp(-0.000000000028797293230485992 * (Math.pow(7770.0 - input[0], 2.0) + Math.pow(0.0000066 - input[1], 2.0) + Math.pow(252.9208697 - input[2], 2.0) + Math.pow(241.0118677 - input[3], 2.0) + Math.pow(2076.0 - input[4], 2.0) + Math.pow(5683.0 - input[5], 2.0) + Math.pow(0.498262731 - input[6], 2.0) + Math.pow(0.193679972 - input[7], 2.0) + Math.pow(246.9663687 - input[8], 2.0) + Math.pow(0.084724866 - input[9], 2.0) + Math.pow(0.021123511 - input[10], 2.0) + Math.pow(4.473217502 - input[11], 2.0) + Math.pow(4.610812021 - input[12], 2.0) + Math.pow(3.0 - input[13], 2.0) + Math.pow(3070.0 - input[14], 2.0) + Math.pow(1811.172638 - input[15], 2.0) + Math.pow(130578.2178 - input[16], 2.0) + Math.pow(10840.0 - input[17], 2.0) + Math.pow(440.0 - input[18], 2.0) + Math.pow(0.00000758 - input[19], 2.0) + Math.pow(79.41225017 - input[20], 2.0) + Math.pow(141.2545233 - input[21], 2.0) + Math.pow(204.0 - input[22], 2.0) + Math.pow(5312.0 - input[23], 2.0) + Math.pow(0.274011601 - input[24], 2.0) + Math.pow(0.076136081 - input[25], 2.0) + Math.pow(110.3333867 - input[26], 2.0) + Math.pow(0.047227521 - input[27], 2.0) + Math.pow(0.010501668 - input[28], 2.0) + Math.pow(2.123927473 - input[29], 2.0) + Math.pow(2.800747552 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(4455.0 - input[32], 2.0) + Math.pow(1962.072952 - input[33], 2.0) + Math.pow(103461.3583 - input[34], 2.0) + Math.pow(4895.0 - input[35], 2.0))) + Math.exp(-0.000000000028797293230485992 * (Math.pow(96686.0 - input[0], 2.0) + Math.pow(0.00000577 - input[1], 2.0) + Math.pow(358.1849443 - input[2], 2.0) + Math.pow(150.0695576 - input[3], 2.0) + Math.pow(1439.0 - input[4], 2.0) + Math.pow(4351.0 - input[5], 2.0) + Math.pow(1.553590745 - input[6], 2.0) + Math.pow(0.139658487 - input[7], 2.0) + Math.pow(254.127251 - input[8], 2.0) + Math.pow(0.297969625 - input[9], 2.0) + Math.pow(0.016515814 - input[10], 2.0) + Math.pow(5.170355081 - input[11], 2.0) + Math.pow(2.682648729 - input[12], 2.0) + Math.pow(4.0 - input[13], 2.0) + Math.pow(2940.0 - input[14], 2.0) + Math.pow(1542.095238 - input[15], 2.0) + Math.pow(122983.5079 - input[16], 2.0) + Math.pow(99626.0 - input[17], 2.0) + Math.pow(575.0 - input[18], 2.0) + Math.pow(0.00000929 - input[19], 2.0) + Math.pow(44.48829498 - input[20], 2.0) + Math.pow(108.3893251 - input[21], 2.0) + Math.pow(143.0 - input[22], 2.0) + Math.pow(4863.0 - input[23], 2.0) + Math.pow(0.219736836 - input[24], 2.0) + Math.pow(0.048727898 - input[25], 2.0) + Math.pow(76.43881006 - input[26], 2.0) + Math.pow(0.019352354 - input[27], 2.0) + Math.pow(0.007819237 - input[28], 2.0) + Math.pow(0.865884768 - input[29], 2.0) + Math.pow(2.160919998 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(5025.0 - input[32], 2.0) + Math.pow(1967.027861 - input[33], 2.0) + Math.pow(71867.26092 - input[34], 2.0) + Math.pow(5600.0 - input[35], 2.0))) + Math.exp(-0.000000000028797293230485992 * (Math.pow(1350.0 - input[0], 2.0) + Math.pow(0.00000989 - input[1], 2.0) + Math.pow(412.1842231 - input[2], 2.0) + Math.pow(242.2818303 - input[3], 2.0) + Math.pow(2536.0 - input[4], 2.0) + Math.pow(6504.0 - input[5], 2.0) + Math.pow(0.186999012 - input[6], 2.0) + Math.pow(0.19802011 - input[7], 2.0) + Math.pow(327.2330267 - input[8], 2.0) + Math.pow(0.031484119 - input[9], 2.0) + Math.pow(0.022676769 - input[10], 2.0) + Math.pow(3.828745532 - input[11], 2.0) + Math.pow(4.907856428 - input[12], 2.0) + Math.pow(3.0 - input[13], 2.0) + Math.pow(4640.0 - input[14], 2.0) + Math.pow(1576.855603 - input[15], 2.0) + Math.pow(73373.67743 - input[16], 2.0) + Math.pow(5990.0 - input[17], 2.0) + Math.pow(665.0 - input[18], 2.0) + Math.pow(0.00000723 - input[19], 2.0) + Math.pow(52.56472047 - input[20], 2.0) + Math.pow(114.1777254 - input[21], 2.0) + Math.pow(744.0 - input[22], 2.0) + Math.pow(4897.0 - input[23], 2.0) + Math.pow(0.159144639 - input[24], 2.0) + Math.pow(0.067272419 - input[25], 2.0) + Math.pow(83.37122292 - input[26], 2.0) + Math.pow(0.020395712 - input[27], 2.0) + Math.pow(0.009030271 - input[28], 2.0) + Math.pow(1.403552112 - input[29], 2.0) + Math.pow(2.272212073 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(4965.0 - input[32], 2.0) + Math.pow(2024.639476 - input[33], 2.0) + Math.pow(25410.79852 - input[34], 2.0) + Math.pow(5630.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(4375.0 - input[0], 2.0) + Math.pow(0.00000183 - input[1], 2.0) + Math.pow(90.66714765 - input[2], 2.0) + Math.pow(243.4849156 - input[3], 2.0) + Math.pow(1550.0 - input[4], 2.0) + Math.pow(1137.0 - input[5], 2.0) + Math.pow(0.313019044 - input[6], 2.0) + Math.pow(0.17725201 - input[7], 2.0) + Math.pow(167.0760316 - input[8], 2.0) + Math.pow(0.044946902 - input[9], 2.0) + Math.pow(0.018294802 - input[10], 2.0) + Math.pow(2.255178948 - input[11], 2.0) + Math.pow(5.257152685 - input[12], 2.0) + Math.pow(2.0 - input[13], 2.0) + Math.pow(805.0 - input[14], 2.0) + Math.pow(1706.428571 - input[15], 2.0) + Math.pow(210142.9406 - input[16], 2.0) + Math.pow(5180.0 - input[17], 2.0) + Math.pow(395.0 - input[18], 2.0) + Math.pow(0.0000076 - input[19], 2.0) + Math.pow(32.34768724 - input[20], 2.0) + Math.pow(149.5195452 - input[21], 2.0) + Math.pow(374.0 - input[22], 2.0) + Math.pow(5078.0 - input[23], 2.0) + Math.pow(0.24748961 - input[24], 2.0) + Math.pow(0.060237702 - input[25], 2.0) + Math.pow(90.93361624 - input[26], 2.0) + Math.pow(0.021001777 - input[27], 2.0) + Math.pow(0.008463596 - input[28], 2.0) + Math.pow(1.215758697 - input[29], 2.0) + Math.pow(2.96033266 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(4020.0 - input[32], 2.0) + Math.pow(1815.879353 - input[33], 2.0) + Math.pow(33499.2852 - input[34], 2.0) + Math.pow(4415.0 - input[35], 2.0))) * 0.6481182061028206 + Math.exp(-0.000000000028797293230485992 * (Math.pow(400.0 - input[0], 2.0) + Math.pow(0.00000522 - input[1], 2.0) + Math.pow(626.6091399 - input[2], 2.0) + Math.pow(865.2105219 - input[3], 2.0) + Math.pow(5104.0 - input[4], 2.0) + Math.pow(8977.0 - input[5], 2.0) + Math.pow(0.690558298 - input[6], 2.0) + Math.pow(0.627350024 - input[7], 2.0) + Math.pow(745.9098309 - input[8], 2.0) + Math.pow(0.102495733 - input[9], 2.0) + Math.pow(0.042042776 - input[10], 2.0) + Math.pow(12.5556916 - input[11], 2.0) + Math.pow(18.18707883 - input[12], 2.0) + Math.pow(4.0 - input[13], 2.0) + Math.pow(2090.0 - input[14], 2.0) + Math.pow(1642.684211 - input[15], 2.0) + Math.pow(147467.8907 - input[16], 2.0) + Math.pow(2490.0 - input[17], 2.0) + Math.pow(5305.0 - input[18], 2.0) + Math.pow(0.0000108 - input[19], 2.0) + Math.pow(191.7098548 - input[20], 2.0) + Math.pow(91.60236412 - input[21], 2.0) + Math.pow(787.0 - input[22], 2.0) + Math.pow(4707.0 - input[23], 2.0) + Math.pow(0.227278525 - input[24], 2.0) + Math.pow(0.071324016 - input[25], 2.0) + Math.pow(141.6561095 - input[26], 2.0) + Math.pow(0.03364102 - input[27], 2.0) + Math.pow(0.009963216 - input[28], 2.0) + Math.pow(4.035182661 - input[29], 2.0) + Math.pow(1.823059358 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(5870.0 - input[32], 2.0) + Math.pow(2004.001704 - input[33], 2.0) + Math.pow(46614.46167 - input[34], 2.0) + Math.pow(11175.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(3990.0 - input[0], 2.0) + Math.pow(0.0000101 - input[1], 2.0) + Math.pow(289.788098 - input[2], 2.0) + Math.pow(180.020926 - input[3], 2.0) + Math.pow(1348.0 - input[4], 2.0) + Math.pow(7379.0 - input[5], 2.0) + Math.pow(0.188276341 - input[6], 2.0) + Math.pow(0.14775206 - input[7], 2.0) + Math.pow(234.904512 - input[8], 2.0) + Math.pow(0.024647766 - input[9], 2.0) + Math.pow(0.017757337 - input[10], 2.0) + Math.pow(4.703664573 - input[11], 2.0) + Math.pow(3.326081922 - input[12], 2.0) + Math.pow(9.0 - input[13], 2.0) + Math.pow(5145.0 - input[14], 2.0) + Math.pow(1671.161322 - input[15], 2.0) + Math.pow(124399.4667 - input[16], 2.0) + Math.pow(9135.0 - input[17], 2.0) + Math.pow(4410.0 - input[18], 2.0) + Math.pow(0.0000133 - input[19], 2.0) + Math.pow(113.5171105 - input[20], 2.0) + Math.pow(58.85067908 - input[21], 2.0) + Math.pow(1098.0 - input[22], 2.0) + Math.pow(4653.0 - input[23], 2.0) + Math.pow(0.229777581 - input[24], 2.0) + Math.pow(0.106649662 - input[25], 2.0) + Math.pow(86.18389477 - input[26], 2.0) + Math.pow(0.031259275 - input[27], 2.0) + Math.pow(0.010889532 - input[28], 2.0) + Math.pow(1.02794521 - input[29], 2.0) + Math.pow(1.165072601 - input[30], 2.0) + Math.pow(3.0 - input[31], 2.0) + Math.pow(9765.0 - input[32], 2.0) + Math.pow(1085.701485 - input[33], 2.0) + Math.pow(181174.0998 - input[34], 2.0) + Math.pow(14175.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(2380.0 - input[0], 2.0) + Math.pow(0.00000694 - input[1], 2.0) + Math.pow(150.6887019 - input[2], 2.0) + Math.pow(170.0700417 - input[3], 2.0) + Math.pow(1872.0 - input[4], 2.0) + Math.pow(4892.0 - input[5], 2.0) + Math.pow(0.408521328 - input[6], 2.0) + Math.pow(0.162480327 - input[7], 2.0) + Math.pow(160.3793718 - input[8], 2.0) + Math.pow(0.071124118 - input[9], 2.0) + Math.pow(0.023024904 - input[10], 2.0) + Math.pow(2.644896039 - input[11], 2.0) + Math.pow(2.938057246 - input[12], 2.0) + Math.pow(11.0 - input[13], 2.0) + Math.pow(3690.0 - input[14], 2.0) + Math.pow(1047.222222 - input[15], 2.0) + Math.pow(117438.3327 - input[16], 2.0) + Math.pow(6070.0 - input[17], 2.0) + Math.pow(10145.0 - input[18], 2.0) + Math.pow(0.00000978 - input[19], 2.0) + Math.pow(221.9108659 - input[20], 2.0) + Math.pow(230.8684986 - input[21], 2.0) + Math.pow(571.0 - input[22], 2.0) + Math.pow(6421.0 - input[23], 2.0) + Math.pow(0.228486802 - input[24], 2.0) + Math.pow(0.083376617 - input[25], 2.0) + Math.pow(226.3896822 - input[26], 2.0) + Math.pow(0.029931133 - input[27], 2.0) + Math.pow(0.011588186 - input[28], 2.0) + Math.pow(3.194295434 - input[29], 2.0) + Math.pow(2.330348269 - input[30], 2.0) + Math.pow(6.0 - input[31], 2.0) + Math.pow(6360.0 - input[32], 2.0) + Math.pow(1742.734277 - input[33], 2.0) + Math.pow(290623.7045 - input[34], 2.0) + Math.pow(16505.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(1375.0 - input[0], 2.0) + Math.pow(0.00000896 - input[1], 2.0) + Math.pow(490.2949521 - input[2], 2.0) + Math.pow(310.0548334 - input[3], 2.0) + Math.pow(1868.0 - input[4], 2.0) + Math.pow(9780.0 - input[5], 2.0) + Math.pow(0.218479676 - input[6], 2.0) + Math.pow(0.211145395 - input[7], 2.0) + Math.pow(400.1748928 - input[8], 2.0) + Math.pow(0.027472142 - input[9], 2.0) + Math.pow(0.02090757 - input[10], 2.0) + Math.pow(5.40261148 - input[11], 2.0) + Math.pow(5.872511429 - input[12], 2.0) + Math.pow(3.0 - input[13], 2.0) + Math.pow(4355.0 - input[14], 2.0) + Math.pow(1590.416762 - input[15], 2.0) + Math.pow(132464.4245 - input[16], 2.0) + Math.pow(5730.0 - input[17], 2.0) + Math.pow(690.0 - input[18], 2.0) + Math.pow(0.0000125 - input[19], 2.0) + Math.pow(43.36264172 - input[20], 2.0) + Math.pow(49.85629638 - input[21], 2.0) + Math.pow(618.0 - input[22], 2.0) + Math.pow(4662.0 - input[23], 2.0) + Math.pow(0.159380747 - input[24], 2.0) + Math.pow(0.112784623 - input[25], 2.0) + Math.pow(46.60946905 - input[26], 2.0) + Math.pow(0.018111953 - input[27], 2.0) + Math.pow(0.013178791 - input[28], 2.0) + Math.pow(1.426118469 - input[29], 2.0) + Math.pow(0.993470345 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(10645.0 - input[32], 2.0) + Math.pow(1959.312353 - input[33], 2.0) + Math.pow(29308.46655 - input[34], 2.0) + Math.pow(11335.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(1755.0 - input[0], 2.0) + Math.pow(0.0000117 - input[1], 2.0) + Math.pow(413.5549276 - input[2], 2.0) + Math.pow(219.6369911 - input[3], 2.0) + Math.pow(1692.0 - input[4], 2.0) + Math.pow(9074.0 - input[5], 2.0) + Math.pow(0.27221878 - input[6], 2.0) + Math.pow(0.169034975 - input[7], 2.0) + Math.pow(316.5959594 - input[8], 2.0) + Math.pow(0.038038632 - input[9], 2.0) + Math.pow(0.019124517 - input[10], 2.0) + Math.pow(5.568563291 - input[11], 2.0) + Math.pow(4.134320386 - input[12], 2.0) + Math.pow(6.0 - input[13], 2.0) + Math.pow(6040.0 - input[14], 2.0) + Math.pow(1639.538079 - input[15], 2.0) + Math.pow(91469.22372 - input[16], 2.0) + Math.pow(7795.0 - input[17], 2.0) + Math.pow(1320.0 - input[18], 2.0) + Math.pow(0.000017 - input[19], 2.0) + Math.pow(97.90651444 - input[20], 2.0) + Math.pow(80.23275689 - input[21], 2.0) + Math.pow(610.0 - input[22], 2.0) + Math.pow(7172.0 - input[23], 2.0) + Math.pow(0.255667293 - input[24], 2.0) + Math.pow(0.078940099 - input[25], 2.0) + Math.pow(89.06963567 - input[26], 2.0) + Math.pow(0.025145879 - input[27], 2.0) + Math.pow(0.009363068 - input[28], 2.0) + Math.pow(2.062600226 - input[29], 2.0) + Math.pow(1.605456546 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(11660.0 - input[32], 2.0) + Math.pow(2027.385935 - input[33], 2.0) + Math.pow(20282.44196 - input[34], 2.0) + Math.pow(12980.0 - input[35], 2.0))) + Math.exp(-0.000000000028797293230485992 * (Math.pow(3115.0 - input[0], 2.0) + Math.pow(0.0000117 - input[1], 2.0) + Math.pow(203.4501469 - input[2], 2.0) + Math.pow(97.2109766 - input[3], 2.0) + Math.pow(1418.0 - input[4], 2.0) + Math.pow(7111.0 - input[5], 2.0) + Math.pow(0.562110785 - input[6], 2.0) + Math.pow(0.121512136 - input[7], 2.0) + Math.pow(150.3305617 - input[8], 2.0) + Math.pow(0.100898887 - input[9], 2.0) + Math.pow(0.014641571 - input[10], 2.0) + Math.pow(3.130031379 - input[11], 2.0) + Math.pow(1.729075911 - input[12], 2.0) + Math.pow(13.0 - input[13], 2.0) + Math.pow(6840.0 - input[14], 2.0) + Math.pow(1425.127924 - input[15], 2.0) + Math.pow(166810.8367 - input[16], 2.0) + Math.pow(9955.0 - input[17], 2.0) + Math.pow(1110.0 - input[18], 2.0) + Math.pow(0.0000105 - input[19], 2.0) + Math.pow(31.483686 - input[20], 2.0) + Math.pow(81.26590591 - input[21], 2.0) + Math.pow(371.0 - input[22], 2.0) + Math.pow(4777.0 - input[23], 2.0) + Math.pow(0.222454869 - input[24], 2.0) + Math.pow(0.053832209 - input[25], 2.0) + Math.pow(56.37479595 - input[26], 2.0) + Math.pow(0.023905453 - input[27], 2.0) + Math.pow(0.007363402 - input[28], 2.0) + Math.pow(0.915684599 - input[29], 2.0) + Math.pow(1.61221109 - input[30], 2.0) + Math.pow(2.0 - input[31], 2.0) + Math.pow(6750.0 - input[32], 2.0) + Math.pow(1801.774815 - input[33], 2.0) + Math.pow(114772.2515 - input[34], 2.0) + Math.pow(7860.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(1270.0 - input[0], 2.0) + Math.pow(0.00000807 - input[1], 2.0) + Math.pow(324.458938 - input[2], 2.0) + Math.pow(180.7695137 - input[3], 2.0) + Math.pow(1382.0 - input[4], 2.0) + Math.pow(6677.0 - input[5], 2.0) + Math.pow(0.322650389 - input[6], 2.0) + Math.pow(0.159450201 - input[7], 2.0) + Math.pow(252.6142259 - input[8], 2.0) + Math.pow(0.042374317 - input[9], 2.0) + Math.pow(0.020978121 - input[10], 2.0) + Math.pow(4.433914152 - input[11], 2.0) + Math.pow(3.020502084 - input[12], 2.0) + Math.pow(7.0 - input[13], 2.0) + Math.pow(4025.0 - input[14], 2.0) + Math.pow(1717.35528 - input[15], 2.0) + Math.pow(219796.1645 - input[16], 2.0) + Math.pow(5295.0 - input[17], 2.0) + Math.pow(2275.0 - input[18], 2.0) + Math.pow(0.0000107 - input[19], 2.0) + Math.pow(106.4197182 - input[20], 2.0) + Math.pow(64.08626967 - input[21], 2.0) + Math.pow(108.0 - input[22], 2.0) + Math.pow(4446.0 - input[23], 2.0) + Math.pow(0.081255433 - input[24], 2.0) + Math.pow(0.042028555 - input[25], 2.0) + Math.pow(85.25299391 - input[26], 2.0) + Math.pow(0.010971155 - input[27], 2.0) + Math.pow(0.006573354 - input[28], 2.0) + Math.pow(0.353844199 - input[29], 2.0) + Math.pow(1.250117821 - input[30], 2.0) + Math.pow(2.0 - input[31], 2.0) + Math.pow(8875.0 - input[32], 2.0) + Math.pow(1984.027042 - input[33], 2.0) + Math.pow(71588.18068 - input[34], 2.0) + Math.pow(11150.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(845.0 - input[0], 2.0) + Math.pow(0.0000093 - input[1], 2.0) + Math.pow(319.1363719 - input[2], 2.0) + Math.pow(148.9795486 - input[3], 2.0) + Math.pow(1328.0 - input[4], 2.0) + Math.pow(5488.0 - input[5], 2.0) + Math.pow(0.250413872 - input[6], 2.0) + Math.pow(0.140594133 - input[7], 2.0) + Math.pow(234.0579602 - input[8], 2.0) + Math.pow(0.044114991 - input[9], 2.0) + Math.pow(0.01915502 - input[10], 2.0) + Math.pow(3.207061144 - input[11], 2.0) + Math.pow(3.027140628 - input[12], 2.0) + Math.pow(8.0 - input[13], 2.0) + Math.pow(4870.0 - input[14], 2.0) + Math.pow(1933.309035 - input[15], 2.0) + Math.pow(109559.2382 - input[16], 2.0) + Math.pow(5715.0 - input[17], 2.0) + Math.pow(1420.0 - input[18], 2.0) + Math.pow(0.00000823 - input[19], 2.0) + Math.pow(48.78624791 - input[20], 2.0) + Math.pow(106.1842591 - input[21], 2.0) + Math.pow(128.0 - input[22], 2.0) + Math.pow(4591.0 - input[23], 2.0) + Math.pow(0.169622241 - input[24], 2.0) + Math.pow(0.053723865 - input[25], 2.0) + Math.pow(77.48525352 - input[26], 2.0) + Math.pow(0.026068825 - input[27], 2.0) + Math.pow(0.00808387 - input[28], 2.0) + Math.pow(1.30551436 - input[29], 2.0) + Math.pow(2.115973306 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(5195.0 - input[32], 2.0) + Math.pow(1985.530318 - input[33], 2.0) + Math.pow(59805.62925 - input[34], 2.0) + Math.pow(6615.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(5880.0 - input[0], 2.0) + Math.pow(0.00000678 - input[1], 2.0) + Math.pow(167.7039546 - input[2], 2.0) + Math.pow(332.1268729 - input[3], 2.0) + Math.pow(1402.0 - input[4], 2.0) + Math.pow(5626.0 - input[5], 2.0) + Math.pow(0.339519564 - input[6], 2.0) + Math.pow(0.250084606 - input[7], 2.0) + Math.pow(249.9154138 - input[8], 2.0) + Math.pow(0.054316589 - input[9], 2.0) + Math.pow(0.022653195 - input[10], 2.0) + Math.pow(2.788683492 - input[11], 2.0) + Math.pow(6.532125973 - input[12], 2.0) + Math.pow(5.0 - input[13], 2.0) + Math.pow(3115.0 - input[14], 2.0) + Math.pow(1613.370787 - input[15], 2.0) + Math.pow(232203.3954 - input[16], 2.0) + Math.pow(8995.0 - input[17], 2.0) + Math.pow(1350.0 - input[18], 2.0) + Math.pow(0.00000937 - input[19], 2.0) + Math.pow(114.3446497 - input[20], 2.0) + Math.pow(77.12882797 - input[21], 2.0) + Math.pow(226.0 - input[22], 2.0) + Math.pow(4279.0 - input[23], 2.0) + Math.pow(0.163488345 - input[24], 2.0) + Math.pow(0.049369597 - input[25], 2.0) + Math.pow(95.73673882 - input[26], 2.0) + Math.pow(0.02004977 - input[27], 2.0) + Math.pow(0.006734873 - input[28], 2.0) + Math.pow(0.893947054 - input[29], 2.0) + Math.pow(1.536899372 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(7790.0 - input[32], 2.0) + Math.pow(1983.756098 - input[33], 2.0) + Math.pow(57245.29738 - input[34], 2.0) + Math.pow(9140.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(345.0 - input[0], 2.0) + Math.pow(0.0000124 - input[1], 2.0) + Math.pow(556.5058007 - input[2], 2.0) + Math.pow(193.2565252 - input[3], 2.0) + Math.pow(2191.0 - input[4], 2.0) + Math.pow(7860.0 - input[5], 2.0) + Math.pow(0.317984014 - input[6], 2.0) + Math.pow(0.149155064 - input[7], 2.0) + Math.pow(374.881163 - input[8], 2.0) + Math.pow(0.04713606 - input[9], 2.0) + Math.pow(0.017270526 - input[10], 2.0) + Math.pow(6.329158524 - input[11], 2.0) + Math.pow(3.998044971 - input[12], 2.0) + Math.pow(3.0 - input[13], 2.0) + Math.pow(6275.0 - input[14], 2.0) + Math.pow(1954.280478 - input[15], 2.0) + Math.pow(36593.5054 - input[16], 2.0) + Math.pow(6620.0 - input[17], 2.0) + Math.pow(1895.0 - input[18], 2.0) + Math.pow(0.00000989 - input[19], 2.0) + Math.pow(47.60079737 - input[20], 2.0) + Math.pow(77.44088347 - input[21], 2.0) + Math.pow(667.0 - input[22], 2.0) + Math.pow(4583.0 - input[23], 2.0) + Math.pow(0.187958737 - input[24], 2.0) + Math.pow(0.066791759 - input[25], 2.0) + Math.pow(62.52084042 - input[26], 2.0) + Math.pow(0.023613687 - input[27], 2.0) + Math.pow(0.008862387 - input[28], 2.0) + Math.pow(1.046370677 - input[29], 2.0) + Math.pow(1.545891264 - input[30], 2.0) + Math.pow(2.0 - input[31], 2.0) + Math.pow(7265.0 - input[32], 2.0) + Math.pow(2009.21404 - input[33], 2.0) + Math.pow(35388.62108 - input[34], 2.0) + Math.pow(9160.0 - input[35], 2.0))) + Math.exp(-0.000000000028797293230485992 * (Math.pow(3030.0 - input[0], 2.0) + Math.pow(0.00000708 - input[1], 2.0) + Math.pow(176.2085405 - input[2], 2.0) + Math.pow(190.0148812 - input[3], 2.0) + Math.pow(1646.0 - input[4], 2.0) + Math.pow(5371.0 - input[5], 2.0) + Math.pow(0.246580075 - input[6], 2.0) + Math.pow(0.210171442 - input[7], 2.0) + Math.pow(183.1117108 - input[8], 2.0) + Math.pow(0.026835406 - input[9], 2.0) + Math.pow(0.023386468 - input[10], 2.0) + Math.pow(3.099955621 - input[11], 2.0) + Math.pow(3.45090042 - input[12], 2.0) + Math.pow(10.0 - input[13], 2.0) + Math.pow(4345.0 - input[14], 2.0) + Math.pow(1811.874568 - input[15], 2.0) + Math.pow(168670.6598 - input[16], 2.0) + Math.pow(7375.0 - input[17], 2.0) + Math.pow(1435.0 - input[18], 2.0) + Math.pow(0.0000126 - input[19], 2.0) + Math.pow(42.57102412 - input[20], 2.0) + Math.pow(63.74256021 - input[21], 2.0) + Math.pow(583.0 - input[22], 2.0) + Math.pow(4930.0 - input[23], 2.0) + Math.pow(0.176898454 - input[24], 2.0) + Math.pow(0.074969013 - input[25], 2.0) + Math.pow(53.15679217 - input[26], 2.0) + Math.pow(0.023362269 - input[27], 2.0) + Math.pow(0.00863469 - input[28], 2.0) + Math.pow(0.996934107 - input[29], 2.0) + Math.pow(1.270546338 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(9005.0 - input[32], 2.0) + Math.pow(1793.946141 - input[33], 2.0) + Math.pow(58912.86051 - input[34], 2.0) + Math.pow(10440.0 - input[35], 2.0))) + Math.exp(-0.000000000028797293230485992 * (Math.pow(950.0 - input[0], 2.0) + Math.pow(0.00000879 - input[1], 2.0) + Math.pow(298.7826644 - input[2], 2.0) + Math.pow(126.4434839 - input[3], 2.0) + Math.pow(990.0 - input[4], 2.0) + Math.pow(5249.0 - input[5], 2.0) + Math.pow(0.207722246 - input[6], 2.0) + Math.pow(0.118068596 - input[7], 2.0) + Math.pow(212.6130742 - input[8], 2.0) + Math.pow(0.02438217 - input[9], 2.0) + Math.pow(0.017582729 - input[10], 2.0) + Math.pow(3.285230615 - input[11], 2.0) + Math.pow(2.410013087 - input[12], 2.0) + Math.pow(4.0 - input[13], 2.0) + Math.pow(4450.0 - input[14], 2.0) + Math.pow(1983.122472 - input[15], 2.0) + Math.pow(58156.94118 - input[16], 2.0) + Math.pow(5400.0 - input[17], 2.0) + Math.pow(915.0 - input[18], 2.0) + Math.pow(0.00000593 - input[19], 2.0) + Math.pow(25.36259842 - input[20], 2.0) + Math.pow(177.8213847 - input[21], 2.0) + Math.pow(235.0 - input[22], 2.0) + Math.pow(4558.0 - input[23], 2.0) + Math.pow(0.176188068 - input[24], 2.0) + Math.pow(0.064045082 - input[25], 2.0) + Math.pow(101.5919915 - input[26], 2.0) + Math.pow(0.025305186 - input[27], 2.0) + Math.pow(0.009536701 - input[28], 2.0) + Math.pow(0.745392102 - input[29], 2.0) + Math.pow(3.520179766 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(3060.0 - input[32], 2.0) + Math.pow(1983.256536 - input[33], 2.0) + Math.pow(61680.97504 - input[34], 2.0) + Math.pow(3975.0 - input[35], 2.0))) + Math.exp(-0.000000000028797293230485992 * (Math.pow(5120.0 - input[0], 2.0) + Math.pow(0.00000817 - input[1], 2.0) + Math.pow(444.5601489 - input[2], 2.0) + Math.pow(206.0120578 - input[3], 2.0) + Math.pow(1883.0 - input[4], 2.0) + Math.pow(7998.0 - input[5], 2.0) + Math.pow(2.311423998 - input[6], 2.0) + Math.pow(0.207807075 - input[7], 2.0) + Math.pow(325.2861033 - input[8], 2.0) + Math.pow(0.447804718 - input[9], 2.0) + Math.pow(0.02475341 - input[10], 2.0) + Math.pow(8.128257315 - input[11], 2.0) + Math.pow(3.886649186 - input[12], 2.0) + Math.pow(18.0 - input[13], 2.0) + Math.pow(4375.0 - input[14], 2.0) + Math.pow(1747.441143 - input[15], 2.0) + Math.pow(196497.4397 - input[16], 2.0) + Math.pow(9495.0 - input[17], 2.0) + Math.pow(3260.0 - input[18], 2.0) + Math.pow(0.0000114 - input[19], 2.0) + Math.pow(256.1738495 - input[20], 2.0) + Math.pow(62.42905499 - input[21], 2.0) + Math.pow(236.0 - input[22], 2.0) + Math.pow(4567.0 - input[23], 2.0) + Math.pow(0.625927319 - input[24], 2.0) + Math.pow(0.102498727 - input[25], 2.0) + Math.pow(159.3014522 - input[26], 2.0) + Math.pow(0.110536279 - input[27], 2.0) + Math.pow(0.010572138 - input[28], 2.0) + Math.pow(3.370996555 - input[29], 2.0) + Math.pow(1.252269635 - input[30], 2.0) + Math.pow(3.0 - input[31], 2.0) + Math.pow(8860.0 - input[32], 2.0) + Math.pow(1635.539503 - input[33], 2.0) + Math.pow(136439.1198 - input[34], 2.0) + Math.pow(12120.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(1285.0 - input[0], 2.0) + Math.pow(0.00000874 - input[1], 2.0) + Math.pow(359.163772 - input[2], 2.0) + Math.pow(162.1408143 - input[3], 2.0) + Math.pow(1250.0 - input[4], 2.0) + Math.pow(6881.0 - input[5], 2.0) + Math.pow(0.237089606 - input[6], 2.0) + Math.pow(0.166214574 - input[7], 2.0) + Math.pow(260.6522931 - input[8], 2.0) + Math.pow(0.035756247 - input[9], 2.0) + Math.pow(0.02113419 - input[10], 2.0) + Math.pow(4.529568847 - input[11], 2.0) + Math.pow(3.057531967 - input[12], 2.0) + Math.pow(7.0 - input[13], 2.0) + Math.pow(4715.0 - input[14], 2.0) + Math.pow(1574.128314 - input[15], 2.0) + Math.pow(79839.39287 - input[16], 2.0) + Math.pow(6000.0 - input[17], 2.0) + Math.pow(795.0 - input[18], 2.0) + Math.pow(0.00000873 - input[19], 2.0) + Math.pow(91.58891204 - input[20], 2.0) + Math.pow(85.96069338 - input[21], 2.0) + Math.pow(673.0 - input[22], 2.0) + Math.pow(4946.0 - input[23], 2.0) + Math.pow(0.197619664 - input[24], 2.0) + Math.pow(0.080586926 - input[25], 2.0) + Math.pow(88.77480271 - input[26], 2.0) + Math.pow(0.024419608 - input[27], 2.0) + Math.pow(0.009712191 - input[28], 2.0) + Math.pow(1.609674764 - input[29], 2.0) + Math.pow(1.719049086 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(6940.0 - input[32], 2.0) + Math.pow(2027.530259 - input[33], 2.0) + Math.pow(19500.1122 - input[34], 2.0) + Math.pow(7735.0 - input[35], 2.0))) * 0.03941834563943669 + Math.exp(-0.000000000028797293230485992 * (Math.pow(1870.0 - input[0], 2.0) + Math.pow(0.00000626 - input[1], 2.0) + Math.pow(595.5720139 - input[2], 2.0) + Math.pow(498.8908171 - input[3], 2.0) + Math.pow(2316.0 - input[4], 2.0) + Math.pow(8467.0 - input[5], 2.0) + Math.pow(1.04333271 - input[6], 2.0) + Math.pow(0.31346397 - input[7], 2.0) + Math.pow(547.2314155 - input[8], 2.0) + Math.pow(0.190816102 - input[9], 2.0) + Math.pow(0.025585821 - input[10], 2.0) + Math.pow(8.525480606 - input[11], 2.0) + Math.pow(8.977478544 - input[12], 2.0) + Math.pow(6.0 - input[13], 2.0) + Math.pow(2925.0 - input[14], 2.0) + Math.pow(1948.723077 - input[15], 2.0) + Math.pow(86732.29596 - input[16], 2.0) + Math.pow(4795.0 - input[17], 2.0) + Math.pow(4180.0 - input[18], 2.0) + Math.pow(0.0000122 - input[19], 2.0) + Math.pow(50.47602571 - input[20], 2.0) + Math.pow(38.92156783 - input[21], 2.0) + Math.pow(200.0 - input[22], 2.0) + Math.pow(4439.0 - input[23], 2.0) + Math.pow(0.24737 - input[24], 2.0) + Math.pow(0.082321323 - input[25], 2.0) + Math.pow(44.69879677 - input[26], 2.0) + Math.pow(0.036387001 - input[27], 2.0) + Math.pow(0.008026825 - input[28], 2.0) + Math.pow(1.283754046 - input[29], 2.0) + Math.pow(0.772030774 - input[30], 2.0) + Math.pow(3.0 - input[31], 2.0) + Math.pow(13355.0 - input[32], 2.0) + Math.pow(1805.642082 - input[33], 2.0) + Math.pow(198126.5817 - input[34], 2.0) + Math.pow(17535.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(9375.0 - input[0], 2.0) + Math.pow(0.0000106 - input[1], 2.0) + Math.pow(261.4543594 - input[2], 2.0) + Math.pow(232.5957472 - input[3], 2.0) + Math.pow(1613.0 - input[4], 2.0) + Math.pow(8994.0 - input[5], 2.0) + Math.pow(0.589140866 - input[6], 2.0) + Math.pow(0.168101267 - input[7], 2.0) + Math.pow(247.0250533 - input[8], 2.0) + Math.pow(0.098884035 - input[9], 2.0) + Math.pow(0.021052333 - input[10], 2.0) + Math.pow(4.524501589 - input[11], 2.0) + Math.pow(4.409273836 - input[12], 2.0) + Math.pow(12.0 - input[13], 2.0) + Math.pow(5245.0 - input[14], 2.0) + Math.pow(1900.185891 - input[15], 2.0) + Math.pow(123926.6184 - input[16], 2.0) + Math.pow(14620.0 - input[17], 2.0) + Math.pow(695.0 - input[18], 2.0) + Math.pow(0.00000556 - input[19], 2.0) + Math.pow(39.41741021 - input[20], 2.0) + Math.pow(199.8659666 - input[21], 2.0) + Math.pow(425.0 - input[22], 2.0) + Math.pow(5386.0 - input[23], 2.0) + Math.pow(0.139299756 - input[24], 2.0) + Math.pow(0.053196332 - input[25], 2.0) + Math.pow(119.6416884 - input[26], 2.0) + Math.pow(0.021418463 - input[27], 2.0) + Math.pow(0.008119676 - input[28], 2.0) + Math.pow(0.887731729 - input[29], 2.0) + Math.pow(3.936959876 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(2885.0 - input[32], 2.0) + Math.pow(1887.568458 - input[33], 2.0) + Math.pow(162910.4741 - input[34], 2.0) + Math.pow(3580.0 - input[35], 2.0))) + Math.exp(-0.000000000028797293230485992 * (Math.pow(1800.0 - input[0], 2.0) + Math.pow(0.00000827 - input[1], 2.0) + Math.pow(254.9988476 - input[2], 2.0) + Math.pow(169.725972 - input[3], 2.0) + Math.pow(1476.0 - input[4], 2.0) + Math.pow(7247.0 - input[5], 2.0) + Math.pow(0.203488837 - input[6], 2.0) + Math.pow(0.153118321 - input[7], 2.0) + Math.pow(212.3624098 - input[8], 2.0) + Math.pow(0.030854205 - input[9], 2.0) + Math.pow(0.01938714 - input[10], 2.0) + Math.pow(3.320148812 - input[11], 2.0) + Math.pow(3.104293295 - input[12], 2.0) + Math.pow(10.0 - input[13], 2.0) + Math.pow(4070.0 - input[14], 2.0) + Math.pow(1874.603194 - input[15], 2.0) + Math.pow(149316.2836 - input[16], 2.0) + Math.pow(5870.0 - input[17], 2.0) + Math.pow(6175.0 - input[18], 2.0) + Math.pow(0.0000123 - input[19], 2.0) + Math.pow(48.23997203 - input[20], 2.0) + Math.pow(68.65366905 - input[21], 2.0) + Math.pow(257.0 - input[22], 2.0) + Math.pow(4675.0 - input[23], 2.0) + Math.pow(0.298615387 - input[24], 2.0) + Math.pow(0.080875184 - input[25], 2.0) + Math.pow(58.44682054 - input[26], 2.0) + Math.pow(0.051858611 - input[27], 2.0) + Math.pow(0.009285887 - input[28], 2.0) + Math.pow(1.072375344 - input[29], 2.0) + Math.pow(1.366283615 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(7665.0 - input[32], 2.0) + Math.pow(2014.276582 - input[33], 2.0) + Math.pow(30647.4734 - input[34], 2.0) + Math.pow(13840.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(1860.0 - input[0], 2.0) + Math.pow(0.00000852 - input[1], 2.0) + Math.pow(470.9572077 - input[2], 2.0) + Math.pow(175.3362048 - input[3], 2.0) + Math.pow(1519.0 - input[4], 2.0) + Math.pow(7714.0 - input[5], 2.0) + Math.pow(0.960297641 - input[6], 2.0) + Math.pow(0.141991997 - input[7], 2.0) + Math.pow(323.1467063 - input[8], 2.0) + Math.pow(0.179982962 - input[9], 2.0) + Math.pow(0.018329814 - input[10], 2.0) + Math.pow(5.681122567 - input[11], 2.0) + Math.pow(3.251419944 - input[12], 2.0) + Math.pow(6.0 - input[13], 2.0) + Math.pow(3990.0 - input[14], 2.0) + Math.pow(1867.681704 - input[15], 2.0) + Math.pow(91899.45257 - input[16], 2.0) + Math.pow(5850.0 - input[17], 2.0) + Math.pow(1225.0 - input[18], 2.0) + Math.pow(0.00000978 - input[19], 2.0) + Math.pow(248.4468633 - input[20], 2.0) + Math.pow(71.61280835 - input[21], 2.0) + Math.pow(343.0 - input[22], 2.0) + Math.pow(4554.0 - input[23], 2.0) + Math.pow(0.247403221 - input[24], 2.0) + Math.pow(0.057320214 - input[25], 2.0) + Math.pow(160.0298358 - input[26], 2.0) + Math.pow(0.024444086 - input[27], 2.0) + Math.pow(0.007135769 - input[28], 2.0) + Math.pow(1.330832978 - input[29], 2.0) + Math.pow(1.427054854 - input[30], 2.0) + Math.pow(2.0 - input[31], 2.0) + Math.pow(7545.0 - input[32], 2.0) + Math.pow(1914.730948 - input[33], 2.0) + Math.pow(88262.28944 - input[34], 2.0) + Math.pow(8770.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(5975.0 - input[0], 2.0) + Math.pow(0.00000467 - input[1], 2.0) + Math.pow(468.028309 - input[2], 2.0) + Math.pow(254.5413051 - input[3], 2.0) + Math.pow(1443.0 - input[4], 2.0) + Math.pow(6013.0 - input[5], 2.0) + Math.pow(2.772565516 - input[6], 2.0) + Math.pow(0.170471774 - input[7], 2.0) + Math.pow(361.284807 - input[8], 2.0) + Math.pow(0.543198712 - input[9], 2.0) + Math.pow(0.01887312 - input[10], 2.0) + Math.pow(8.477144116 - input[11], 2.0) + Math.pow(4.735740173 - input[12], 2.0) + Math.pow(3.0 - input[13], 2.0) + Math.pow(2025.0 - input[14], 2.0) + Math.pow(1889.881481 - input[15], 2.0) + Math.pow(90937.94645 - input[16], 2.0) + Math.pow(8000.0 - input[17], 2.0) + Math.pow(685.0 - input[18], 2.0) + Math.pow(0.0000137 - input[19], 2.0) + Math.pow(91.45195606 - input[20], 2.0) + Math.pow(50.39096467 - input[21], 2.0) + Math.pow(723.0 - input[22], 2.0) + Math.pow(4638.0 - input[23], 2.0) + Math.pow(0.205122269 - input[24], 2.0) + Math.pow(0.086803529 - input[25], 2.0) + Math.pow(70.92146036 - input[26], 2.0) + Math.pow(0.021251114 - input[27], 2.0) + Math.pow(0.008490104 - input[28], 2.0) + Math.pow(1.449071059 - input[29], 2.0) + Math.pow(1.004290448 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(11585.0 - input[32], 2.0) + Math.pow(2030.488994 - input[33], 2.0) + Math.pow(19744.2283 - input[34], 2.0) + Math.pow(12270.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(2035.0 - input[0], 2.0) + Math.pow(0.00000947 - input[1], 2.0) + Math.pow(297.9836405 - input[2], 2.0) + Math.pow(184.4524895 - input[3], 2.0) + Math.pow(1440.0 - input[4], 2.0) + Math.pow(8714.0 - input[5], 2.0) + Math.pow(0.229115749 - input[6], 2.0) + Math.pow(0.157908117 - input[7], 2.0) + Math.pow(241.218065 - input[8], 2.0) + Math.pow(0.032878212 - input[9], 2.0) + Math.pow(0.017944377 - input[10], 2.0) + Math.pow(4.139644029 - input[11], 2.0) + Math.pow(3.652202375 - input[12], 2.0) + Math.pow(5.0 - input[13], 2.0) + Math.pow(4520.0 - input[14], 2.0) + Math.pow(1901.056416 - input[15], 2.0) + Math.pow(85899.73022 - input[16], 2.0) + Math.pow(6555.0 - input[17], 2.0) + Math.pow(2270.0 - input[18], 2.0) + Math.pow(0.0000082 - input[19], 2.0) + Math.pow(544.5708616 - input[20], 2.0) + Math.pow(122.2075887 - input[21], 2.0) + Math.pow(337.0 - input[22], 2.0) + Math.pow(4957.0 - input[23], 2.0) + Math.pow(0.35960658 - input[24], 2.0) + Math.pow(0.065721398 - input[25], 2.0) + Math.pow(333.3892252 - input[26], 2.0) + Math.pow(0.036690102 - input[27], 2.0) + Math.pow(0.009866155 - input[28], 2.0) + Math.pow(11.12171109 - input[29], 2.0) + Math.pow(2.388233089 - input[30], 2.0) + Math.pow(2.0 - input[31], 2.0) + Math.pow(4665.0 - input[32], 2.0) + Math.pow(2005.783494 - input[33], 2.0) + Math.pow(43205.97456 - input[34], 2.0) + Math.pow(6935.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(2055.0 - input[0], 2.0) + Math.pow(0.00000858 - input[1], 2.0) + Math.pow(177.5208492 - input[2], 2.0) + Math.pow(143.9221311 - input[3], 2.0) + Math.pow(1384.0 - input[4], 2.0) + Math.pow(5942.0 - input[5], 2.0) + Math.pow(0.208180768 - input[6], 2.0) + Math.pow(0.153230152 - input[7], 2.0) + Math.pow(160.7214901 - input[8], 2.0) + Math.pow(0.031218836 - input[9], 2.0) + Math.pow(0.018529697 - input[10], 2.0) + Math.pow(2.695603784 - input[11], 2.0) + Math.pow(2.781051981 - input[12], 2.0) + Math.pow(10.0 - input[13], 2.0) + Math.pow(4180.0 - input[14], 2.0) + Math.pow(1570.120813 - input[15], 2.0) + Math.pow(167358.6325 - input[16], 2.0) + Math.pow(6235.0 - input[17], 2.0) + Math.pow(795.0 - input[18], 2.0) + Math.pow(0.0000128 - input[19], 2.0) + Math.pow(47.46911079 - input[20], 2.0) + Math.pow(47.56504778 - input[21], 2.0) + Math.pow(321.0 - input[22], 2.0) + Math.pow(4522.0 - input[23], 2.0) + Math.pow(0.157763287 - input[24], 2.0) + Math.pow(0.101519514 - input[25], 2.0) + Math.pow(47.51707928 - input[26], 2.0) + Math.pow(0.025374628 - input[27], 2.0) + Math.pow(0.009153884 - input[28], 2.0) + Math.pow(0.843095563 - input[29], 2.0) + Math.pow(0.9505016 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(11530.0 - input[32], 2.0) + Math.pow(1949.716392 - input[33], 2.0) + Math.pow(50802.68366 - input[34], 2.0) + Math.pow(12325.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(4050.0 - input[0], 2.0) + Math.pow(0.0000114 - input[1], 2.0) + Math.pow(313.3486003 - input[2], 2.0) + Math.pow(262.5191512 - input[3], 2.0) + Math.pow(3119.0 - input[4], 2.0) + Math.pow(11475.0 - input[5], 2.0) + Math.pow(0.287621015 - input[6], 2.0) + Math.pow(0.176755349 - input[7], 2.0) + Math.pow(287.9338758 - input[8], 2.0) + Math.pow(0.03655541 - input[9], 2.0) + Math.pow(0.018651553 - input[10], 2.0) + Math.pow(5.264368722 - input[11], 2.0) + Math.pow(4.628374037 - input[12], 2.0) + Math.pow(14.0 - input[13], 2.0) + Math.pow(5215.0 - input[14], 2.0) + Math.pow(1655.009588 - input[15], 2.0) + Math.pow(166635.7142 - input[16], 2.0) + Math.pow(9265.0 - input[17], 2.0) + Math.pow(2645.0 - input[18], 2.0) + Math.pow(0.0000117 - input[19], 2.0) + Math.pow(322.4120444 - input[20], 2.0) + Math.pow(63.06199218 - input[21], 2.0) + Math.pow(712.0 - input[22], 2.0) + Math.pow(4569.0 - input[23], 2.0) + Math.pow(0.28057952 - input[24], 2.0) + Math.pow(0.092249296 - input[25], 2.0) + Math.pow(192.7370183 - input[26], 2.0) + Math.pow(0.046678715 - input[27], 2.0) + Math.pow(0.01137382 - input[28], 2.0) + Math.pow(3.098860917 - input[29], 2.0) + Math.pow(1.246263689 - input[30], 2.0) + Math.pow(3.0 - input[31], 2.0) + Math.pow(9060.0 - input[32], 2.0) + Math.pow(1928.650662 - input[33], 2.0) + Math.pow(128089.0882 - input[34], 2.0) + Math.pow(11705.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(3315.0 - input[0], 2.0) + Math.pow(0.0000158 - input[1], 2.0) + Math.pow(234.722662 - input[2], 2.0) + Math.pow(138.589041 - input[3], 2.0) + Math.pow(1766.0 - input[4], 2.0) + Math.pow(8247.0 - input[5], 2.0) + Math.pow(0.209320146 - input[6], 2.0) + Math.pow(0.147288043 - input[7], 2.0) + Math.pow(186.6558515 - input[8], 2.0) + Math.pow(0.026822655 - input[9], 2.0) + Math.pow(0.018202619 - input[10], 2.0) + Math.pow(2.926837092 - input[11], 2.0) + Math.pow(2.676724178 - input[12], 2.0) + Math.pow(14.0 - input[13], 2.0) + Math.pow(9680.0 - input[14], 2.0) + Math.pow(1808.387397 - input[15], 2.0) + Math.pow(168879.0844 - input[16], 2.0) + Math.pow(12995.0 - input[17], 2.0) + Math.pow(10850.0 - input[18], 2.0) + Math.pow(0.000013 - input[19], 2.0) + Math.pow(196.995892 - input[20], 2.0) + Math.pow(68.20041857 - input[21], 2.0) + Math.pow(535.0 - input[22], 2.0) + Math.pow(5111.0 - input[23], 2.0) + Math.pow(0.240748209 - input[24], 2.0) + Math.pow(0.102205372 - input[25], 2.0) + Math.pow(132.5981553 - input[26], 2.0) + Math.pow(0.034104965 - input[27], 2.0) + Math.pow(0.011331834 - input[28], 2.0) + Math.pow(2.991681327 - input[29], 2.0) + Math.pow(1.273963629 - input[30], 2.0) + Math.pow(7.0 - input[31], 2.0) + Math.pow(9275.0 - input[32], 2.0) + Math.pow(1852.070081 - input[33], 2.0) + Math.pow(218294.4501 - input[34], 2.0) + Math.pow(20125.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(1215.0 - input[0], 2.0) + Math.pow(0.00000873 - input[1], 2.0) + Math.pow(327.431236 - input[2], 2.0) + Math.pow(166.5594802 - input[3], 2.0) + Math.pow(1035.0 - input[4], 2.0) + Math.pow(6680.0 - input[5], 2.0) + Math.pow(0.232444883 - input[6], 2.0) + Math.pow(0.135397589 - input[7], 2.0) + Math.pow(246.9953581 - input[8], 2.0) + Math.pow(0.038715195 - input[9], 2.0) + Math.pow(0.017719362 - input[10], 2.0) + Math.pow(3.439955041 - input[11], 2.0) + Math.pow(3.248407169 - input[12], 2.0) + Math.pow(8.0 - input[13], 2.0) + Math.pow(4560.0 - input[14], 2.0) + Math.pow(1861.328947 - input[15], 2.0) + Math.pow(134709.144 - input[16], 2.0) + Math.pow(5775.0 - input[17], 2.0) + Math.pow(1060.0 - input[18], 2.0) + Math.pow(0.0000108 - input[19], 2.0) + Math.pow(66.10200437 - input[20], 2.0) + Math.pow(96.39816687 - input[21], 2.0) + Math.pow(1085.0 - input[22], 2.0) + Math.pow(5145.0 - input[23], 2.0) + Math.pow(0.17995397 - input[24], 2.0) + Math.pow(0.064926479 - input[25], 2.0) + Math.pow(81.25008562 - input[26], 2.0) + Math.pow(0.02523673 - input[27], 2.0) + Math.pow(0.008325479 - input[28], 2.0) + Math.pow(1.601929586 - input[29], 2.0) + Math.pow(1.923412217 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(6395.0 - input[32], 2.0) + Math.pow(2008.137608 - input[33], 2.0) + Math.pow(40320.46738 - input[34], 2.0) + Math.pow(7455.0 - input[35], 2.0))) + Math.exp(-0.000000000028797293230485992 * (Math.pow(6475.0 - input[0], 2.0) + Math.pow(0.0000104 - input[1], 2.0) + Math.pow(189.318655 - input[2], 2.0) + Math.pow(179.2328797 - input[3], 2.0) + Math.pow(1969.0 - input[4], 2.0) + Math.pow(6721.0 - input[5], 2.0) + Math.pow(0.319965242 - input[6], 2.0) + Math.pow(0.164647531 - input[7], 2.0) + Math.pow(184.2757674 - input[8], 2.0) + Math.pow(0.048747214 - input[9], 2.0) + Math.pow(0.021732166 - input[10], 2.0) + Math.pow(3.603927495 - input[11], 2.0) + Math.pow(3.121011967 - input[12], 2.0) + Math.pow(16.0 - input[13], 2.0) + Math.pow(6025.0 - input[14], 2.0) + Math.pow(1762.322822 - input[15], 2.0) + Math.pow(149911.7539 - input[16], 2.0) + Math.pow(12500.0 - input[17], 2.0) + Math.pow(550.0 - input[18], 2.0) + Math.pow(0.00000743 - input[19], 2.0) + Math.pow(73.23087656 - input[20], 2.0) + Math.pow(145.9050863 - input[21], 2.0) + Math.pow(451.0 - input[22], 2.0) + Math.pow(4885.0 - input[23], 2.0) + Math.pow(0.177687601 - input[24], 2.0) + Math.pow(0.055649082 - input[25], 2.0) + Math.pow(109.5679814 - input[26], 2.0) + Math.pow(0.020704101 - input[27], 2.0) + Math.pow(0.008408596 - input[28], 2.0) + Math.pow(2.217439365 - input[29], 2.0) + Math.pow(2.898986364 - input[30], 2.0) + Math.pow(1.0 - input[31], 2.0) + Math.pow(3650.0 - input[32], 2.0) + Math.pow(2003.231507 - input[33], 2.0) + Math.pow(44603.20805 - input[34], 2.0) + Math.pow(4200.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(2725.0 - input[0], 2.0) + Math.pow(0.00000987 - input[1], 2.0) + Math.pow(511.5339367 - input[2], 2.0) + Math.pow(222.3048626 - input[3], 2.0) + Math.pow(1446.0 - input[4], 2.0) + Math.pow(8956.0 - input[5], 2.0) + Math.pow(0.852475263 - input[6], 2.0) + Math.pow(0.096631002 - input[7], 2.0) + Math.pow(366.9193996 - input[8], 2.0) + Math.pow(0.151500843 - input[9], 2.0) + Math.pow(0.012616727 - input[10], 2.0) + Math.pow(8.424576556 - input[11], 2.0) + Math.pow(2.170805432 - input[12], 2.0) + Math.pow(9.0 - input[13], 2.0) + Math.pow(6585.0 - input[14], 2.0) + Math.pow(1649.621109 - input[15], 2.0) + Math.pow(201942.369 - input[16], 2.0) + Math.pow(9310.0 - input[17], 2.0) + Math.pow(6055.0 - input[18], 2.0) + Math.pow(0.00000741 - input[19], 2.0) + Math.pow(328.5165445 - input[20], 2.0) + Math.pow(283.5935654 - input[21], 2.0) + Math.pow(751.0 - input[22], 2.0) + Math.pow(5050.0 - input[23], 2.0) + Math.pow(0.343065959 - input[24], 2.0) + Math.pow(0.084534635 - input[25], 2.0) + Math.pow(306.0550549 - input[26], 2.0) + Math.pow(0.056152304 - input[27], 2.0) + Math.pow(0.010272383 - input[28], 2.0) + Math.pow(4.734605103 - input[29], 2.0) + Math.pow(2.537711527 - input[30], 2.0) + Math.pow(6.0 - input[31], 2.0) + Math.pow(4560.0 - input[32], 2.0) + Math.pow(1560.948465 - input[33], 2.0) + Math.pow(272930.8515 - input[34], 2.0) + Math.pow(10615.0 - input[35], 2.0)))  + Math.exp(-0.000000000028797293230485992 * (Math.pow(22520.0 - input[0], 2.0) + Math.pow(0.0000097 - input[1], 2.0) + Math.pow(28.73451524 - input[2], 2.0) + Math.pow(103.8944597 - input[3], 2.0) + Math.pow(981.0 - input[4], 2.0) + Math.pow(5830.0 - input[5], 2.0) + Math.pow(0.067748466 - input[6], 2.0) + Math.pow(0.12289742 - input[7], 2.0) + Math.pow(66.31448747 - input[8], 2.0) + Math.pow(0.011860663 - input[9], 2.0) + Math.pow(0.01600865 - input[10], 2.0) + Math.pow(0.447541462 - input[11], 2.0) + Math.pow(1.747719737 - input[12], 2.0) + Math.pow(10.0 - input[13], 2.0) + Math.pow(5595.0 - input[14], 2.0) + Math.pow(1385.023235 - input[15], 2.0) + Math.pow(122164.0263 - input[16], 2.0) + Math.pow(28115.0 - input[17], 2.0) + Math.pow(3530.0 - input[18], 2.0) + Math.pow(0.0000109 - input[19], 2.0) + Math.pow(329.0011167 - input[20], 2.0) + Math.pow(144.0435909 - input[21], 2.0) + Math.pow(638.0 - input[22], 2.0) + Math.pow(4589.0 - input[23], 2.0) + Math.pow(0.746152767 - input[24], 2.0) + Math.pow(0.073535302 - input[25], 2.0) + Math.pow(236.5223538 - input[26], 2.0) + Math.pow(0.13126717 - input[27], 2.0) + Math.pow(0.009000493 - input[28], 2.0) + Math.pow(3.851697289 - input[29], 2.0) + Math.pow(1.686236737 - input[30], 2.0) + Math.pow(4.0 - input[31], 2.0) + Math.pow(6030.0 - input[32], 2.0) + Math.pow(1492.064677 - input[33], 2.0) + Math.pow(206804.5912 - input[34], 2.0) + Math.pow(9560.0 - input[35], 2.0))) + subMath_1(input);
    }
    private double subMath_1(double[] input){
        double a = Math.pow(805.0 - input[0], 2.0) + Math.pow(0.00000803 - input[1], 2.0) + Math.pow(382.210767 - input[2], 2.0) + Math.pow(239.0357109 - input[3], 2.0) + Math.pow(2668.0 - input[4], 2.0) + Math.pow(4987.0 - input[5], 2.0) + Math.pow(0.416253056 - input[6], 2.0) + Math.pow(0.189354093 - input[7], 2.0) + Math.pow(310.6232389 - input[8], 2.0) + Math.pow(0.068110395 - input[9], 2.0) + Math.pow(0.021067302 - input[10], 2.0) + Math.pow(7.87346496 - input[11], 2.0) + Math.pow(4.440531543 - input[12], 2.0) + Math.pow(5.0 - input[13], 2.0) + Math.pow(3850.0 - input[14], 2.0) + Math.pow(1705.654545 - input[15], 2.0) + Math.pow(183367.3846 - input[16], 2.0) + Math.pow(4655.0 - input[17], 2.0) + Math.pow(4005.0 - input[18], 2.0) + Math.pow(0.000013 - input[19], 2.0) + Math.pow(308.698198 - input[20], 2.0) + Math.pow(78.25551843 - input[21], 2.0) + Math.pow(336.0 - input[22], 2.0) + Math.pow(5156.0 - input[23], 2.0) + Math.pow(0.161814163 - input[24], 2.0) + Math.pow(0.074910929 - input[25], 2.0) + Math.pow(193.4768582 - input[26], 2.0) + Math.pow(0.018354591 - input[27], 2.0) + Math.pow(0.0092744 - input[28], 2.0) + Math.pow(3.60055067 - input[29], 2.0) + Math.pow(1.494775678 - input[30], 2.0) + Math.pow(4.0 - input[31], 2.0) + Math.pow(7815.0 - input[32], 2.0) + Math.pow(1666.740243 - input[33], 2.0) + Math.pow(128127.2825 - input[34], 2.0) + Math.pow(11820.0 - input[35], 2.0);
        double b = Math.exp(-0.000000000028797293230485992 * a);

        return b;
    }

}



