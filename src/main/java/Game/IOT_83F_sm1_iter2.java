package Game;

import Global.Info;

import java.util.ArrayList;
import java.util.Arrays;

public class IOT_83F_sm1_iter2 {

    public double IOT_value(double[] instance_ave, ArrayList<Integer> subset) {
        double[] input = new double[Info.num_of_features];  //作为输入的instance
        double output = 0;
//        input = instance_ave; //复制model_instance_ave 到input[]
        // [IOT: feature = 17]
        if(Info.num_of_features == 17){
            System.arraycopy(Info.instance_iot_org_17,0, input, 0, input.length);
            //替换成存在的model_instance
            for (Integer ele : subset) {
//            input[ele] = Info.instance_iot_2[ele];
                input[ele] = 0;
            }
            output = -0.000002541579306125641 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(33397.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(46.991415 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.191524 - input[9], 2.0) + Math.pow(0.106402 - input[10], 2.0) + Math.pow(0.297927 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0))) * -1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(33457.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(32.104011 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.280339 - input[9], 2.0) + Math.pow(0.155744 - input[10], 2.0) + Math.pow(0.436083 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0))) * -1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(56117.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(32.009238 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.281169 - input[9], 2.0) + Math.pow(0.156205 - input[10], 2.0) + Math.pow(0.437374 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0))) * -1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(55835.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0))) * 1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(33125.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0))) * 1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(34135.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0))) * 1.0;
        }
        // [IOT: feature = 33]
        else if(Info.num_of_features == 33){
            System.arraycopy(Info.instance_iot_org_33,0, input, 0, input.length);
            //替换成存在的model_instance
            for (Integer ele : subset) {
//            input[ele] = Info.instance_iot_2[ele];
                input[ele] = 0;
            }
            output = 0.00000036228448152542114 + Math.exp(-0.0000000000005815366366666844 * (Math.pow(60893.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(31.961063 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.281593 - input[9], 2.0) + Math.pow(0.15644 - input[10], 2.0) + Math.pow(0.438033 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(74.0 - input[31], 2.0) + Math.pow(8.222222 - input[32], 2.0))) * -1.0 + Math.exp(-0.0000000000005815366366666844 * (Math.pow(56117.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(32.009238 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.281169 - input[9], 2.0) + Math.pow(0.156205 - input[10], 2.0) + Math.pow(0.437374 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0))) * -1.0 + Math.exp(-0.0000000000005815366366666844 * (Math.pow(60515.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0))) * 1.0 + Math.exp(-0.0000000000005815366366666844 * (Math.pow(56439.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0))) * 1.0;
        }

        // [IOT: feature = 50]
        else if(Info.num_of_features == 50){
            System.arraycopy(Info.instance_iot_org_50,0, input, 0, input.length);
            //替换成存在的model_instance
            for (Integer ele : subset) {
//            input[ele] = Info.instance_iot_2[ele];
                input[ele] = 0;
            }
            output = -0.687914709642318 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(37827.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(62.052435 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.145039 - input[9], 2.0) + Math.pow(0.080577 - input[10], 2.0) + Math.pow(0.225616 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(8.666667 - input[32], 2.0) + Math.pow(13.407088 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(27.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(7.2 - input[37], 2.0) + Math.pow(11.300442 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(8.142857 - input[42], 2.0) + Math.pow(12.265381 - input[43], 2.0) + Math.pow(244.855881 - input[44], 2.0) + Math.pow(59819087.98 - input[45], 2.0) + Math.pow(62052434.92 - input[46], 2.0) + Math.pow(7756554.365 - input[47], 2.0) + Math.pow(21040099.1 - input[48], 2.0) + Math.pow(2206.087112 - input[49], 2.0))) * -0.21919680320334212 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(41463.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(5.937986 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(1.684073 - input[9], 2.0) + Math.pow(1.010444 - input[10], 2.0) + Math.pow(2.694516 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(237.941742 - input[44], 2.0) + Math.pow(3850121.975 - input[45], 2.0) + Math.pow(5937985.897 - input[46], 2.0) + Math.pow(659776.2108 - input[47], 2.0) + Math.pow(1282420.54 - input[48], 2.0) + Math.pow(64.849854 - input[49], 2.0))) * -1.0 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(51093.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(32.033649 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.312172 - input[9], 2.0) + Math.pow(0.187303 - input[10], 2.0) + Math.pow(0.499475 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(262.975693 - input[44], 2.0) + Math.pow(29759529.11 - input[45], 2.0) + Math.pow(32033648.97 - input[46], 2.0) + Math.pow(3559294.33 - input[47], 2.0) + Math.pow(9831750.006 - input[48], 2.0) + Math.pow(938.177109 - input[49], 2.0))) * -0.16883644425292765 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(60095.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(9.182504 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.980125 - input[9], 2.0) + Math.pow(0.544514 - input[10], 2.0) + Math.pow(1.524639 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0) + Math.pow(13.115936 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(32.0 - input[36], 2.0) + Math.pow(6.4 - input[37], 2.0) + Math.pow(9.555103 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(108.0 - input[41], 2.0) + Math.pow(7.714286 - input[42], 2.0) + Math.pow(11.618477 - input[43], 2.0) + Math.pow(267.028809 - input[44], 2.0) + Math.pow(6547153.95 - input[45], 2.0) + Math.pow(9182503.939 - input[46], 2.0) + Math.pow(1147812.992 - input[47], 2.0) + Math.pow(2204161.578 - input[48], 2.0) + Math.pow(2636.909485 - input[49], 2.0))) * -0.9884325707479359 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(46727.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(46.984047 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.191554 - input[9], 2.0) + Math.pow(0.106419 - input[10], 2.0) + Math.pow(0.297973 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(8.555556 - input[32], 2.0) + Math.pow(13.258121 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(26.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(7.0 - input[37], 2.0) + Math.pow(10.86278 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(8.0 - input[42], 2.0) + Math.pow(12.044788 - input[43], 2.0) + Math.pow(261.068344 - input[44], 2.0) + Math.pow(44877249.96 - input[45], 2.0) + Math.pow(46984046.94 - input[46], 2.0) + Math.pow(5873005.867 - input[47], 2.0) + Math.pow(15766823.84 - input[48], 2.0) + Math.pow(3960.847855 - input[49], 2.0))) * -0.14265341093588163 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(34329.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(47.902549 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.208757 - input[9], 2.0) + Math.pow(0.125254 - input[10], 2.0) + Math.pow(0.334011 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(236.034393 - input[44], 2.0) + Math.pow(45864393.95 - input[45], 2.0) + Math.pow(47902549.03 - input[46], 2.0) + Math.pow(5322505.448 - input[47], 2.0) + Math.pow(15209599.7 - input[48], 2.0) + Math.pow(76.055527 - input[49], 2.0))) * -0.05553575502729684 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(57217.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(153.115888 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.06531 - input[9], 2.0) + Math.pow(0.039186 - input[10], 2.0) + Math.pow(0.104496 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(1.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(75.0 - input[31], 2.0) + Math.pow(7.5 - input[32], 2.0) + Math.pow(12.518875 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(31.0 - input[36], 2.0) + Math.pow(5.166667 - input[37], 2.0) + Math.pow(8.542053 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(106.0 - input[41], 2.0) + Math.pow(6.625 - input[42], 2.0) + Math.pow(10.941511 - input[43], 2.0) + Math.pow(258.922577 - input[44], 2.0) + Math.pow(90144531.97 - input[45], 2.0) + Math.pow(153115888.1 - input[46], 2.0) + Math.pow(17012876.46 - input[47], 2.0) + Math.pow(33922342.99 - input[48], 2.0) + Math.pow(2133.131027 - input[49], 2.0))) * -0.3120781496308891 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(42255.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(62.033993 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.161202 - input[9], 2.0) + Math.pow(0.096721 - input[10], 2.0) + Math.pow(0.257923 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(235.080719 - input[44], 2.0) + Math.pow(59991745.0 - input[45], 2.0) + Math.pow(62033993.01 - input[46], 2.0) + Math.pow(6892665.89 - input[47], 2.0) + Math.pow(19916860.24 - input[48], 2.0) + Math.pow(77.962875 - input[49], 2.0))) * -0.05421871171287825 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(40219.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(4.901806 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(2.040064 - input[9], 2.0) + Math.pow(1.224039 - input[10], 2.0) + Math.pow(3.264103 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(277.042389 - input[44], 2.0) + Math.pow(2835640.907 - input[45], 2.0) + Math.pow(4901805.878 - input[46], 2.0) + Math.pow(544645.0975 - input[47], 2.0) + Math.pow(965377.4498 - input[48], 2.0) + Math.pow(3767.01355 - input[49], 2.0))) * -1.0 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(51895.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(41.943964 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.214572 - input[9], 2.0) + Math.pow(0.119207 - input[10], 2.0) + Math.pow(0.333779 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(74.0 - input[31], 2.0) + Math.pow(8.222222 - input[32], 2.0) + Math.pow(12.852799 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(21.0 - input[35], 2.0) + Math.pow(30.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.689074 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(104.0 - input[41], 2.0) + Math.pow(7.428571 - input[42], 2.0) + Math.pow(11.229866 - input[43], 2.0) + Math.pow(272.035599 - input[44], 2.0) + Math.pow(39886271.0 - input[45], 2.0) + Math.pow(41943964.0 - input[46], 2.0) + Math.pow(5242995.501 - input[47], 2.0) + Math.pow(14005816.94 - input[48], 2.0) + Math.pow(1516.103745 - input[49], 2.0))) * -0.02707097917016154 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(48579.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(31.869686 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.2824 - input[9], 2.0) + Math.pow(0.156889 - input[10], 2.0) + Math.pow(0.439289 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0) + Math.pow(13.115936 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(32.0 - input[36], 2.0) + Math.pow(6.4 - input[37], 2.0) + Math.pow(9.555103 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(108.0 - input[41], 2.0) + Math.pow(7.714286 - input[42], 2.0) + Math.pow(11.618477 - input[43], 2.0) + Math.pow(392.913818 - input[44], 2.0) + Math.pow(29825548.17 - input[45], 2.0) + Math.pow(31869686.13 - input[46], 2.0) + Math.pow(3983710.766 - input[47], 2.0) + Math.pow(10451334.02 - input[48], 2.0) + Math.pow(7521.152496 - input[49], 2.0))) * -0.07326994206222294 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(62899.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 1.0 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(62242.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 0.5092323098151169 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(44.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000001 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(1048576.0 - input[9], 2.0) + Math.pow(1048576.0 - input[10], 2.0) + Math.pow(2097152.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 0.8537342516804727 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(65157.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 1.0 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(562.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 0.6783262052479462;
        }
        // [IOT: feature = 67]
        else if(Info.num_of_features == 67){
            System.arraycopy(Info.instance_iot_org_67,0, input, 0, input.length);
            //替换成存在的model_instance
            for (Integer ele : subset) {
//            input[ele] = Info.instance_iot_2[ele];
                input[ele] = 0;
            }
            output = -0.05496864155205834 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(37827.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(62.052435 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.145039 - input[9], 2.0) + Math.pow(0.080577 - input[10], 2.0) + Math.pow(0.225616 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(8.666667 - input[32], 2.0) + Math.pow(13.407088 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(27.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(7.2 - input[37], 2.0) + Math.pow(11.300442 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(8.142857 - input[42], 2.0) + Math.pow(12.265381 - input[43], 2.0) + Math.pow(244.855881 - input[44], 2.0) + Math.pow(59819087.98 - input[45], 2.0) + Math.pow(62052434.92 - input[46], 2.0) + Math.pow(7756554.365 - input[47], 2.0) + Math.pow(21040099.1 - input[48], 2.0) + Math.pow(2206.087112 - input[49], 2.0) + Math.pow(1491240.025 - input[50], 2.0) + Math.pow(1987146.139 - input[51], 2.0) + Math.pow(496786.5348 - input[52], 2.0) + Math.pow(672926.1593 - input[53], 2.0) + Math.pow(244.855881 - input[54], 2.0) + Math.pow(59819087.98 - input[55], 2.0) + Math.pow(62052434.92 - input[56], 2.0) + Math.pow(4773264.225 - input[57], 2.0) + Math.pow(16542662.43 - input[58], 2.0) + Math.pow(1.837156 - input[59], 2.0) + Math.pow(3.0 - input[60], 2.0) + Math.pow(1.666667 - input[61], 2.0) + Math.pow(26.0 - input[62], 2.0) + Math.pow(12.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -0.5140943989151018 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(41463.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(5.937986 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(1.684073 - input[9], 2.0) + Math.pow(1.010444 - input[10], 2.0) + Math.pow(2.694516 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(237.941742 - input[44], 2.0) + Math.pow(3850121.975 - input[45], 2.0) + Math.pow(5937985.897 - input[46], 2.0) + Math.pow(659776.2108 - input[47], 2.0) + Math.pow(1282420.54 - input[48], 2.0) + Math.pow(64.849854 - input[49], 2.0) + Math.pow(1623410.94 - input[50], 2.0) + Math.pow(1935486.794 - input[51], 2.0) + Math.pow(387097.3587 - input[52], 2.0) + Math.pow(695502.7915 - input[53], 2.0) + Math.pow(64.849854 - input[54], 2.0) + Math.pow(3850121.975 - input[55], 2.0) + Math.pow(5937985.897 - input[56], 2.0) + Math.pow(395865.7265 - input[57], 2.0) + Math.pow(1025378.3 - input[58], 2.0) + Math.pow(18.861614 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(60095.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(9.182504 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.980125 - input[9], 2.0) + Math.pow(0.544514 - input[10], 2.0) + Math.pow(1.524639 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0) + Math.pow(13.115936 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(32.0 - input[36], 2.0) + Math.pow(6.4 - input[37], 2.0) + Math.pow(9.555103 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(108.0 - input[41], 2.0) + Math.pow(7.714286 - input[42], 2.0) + Math.pow(11.618477 - input[43], 2.0) + Math.pow(267.028809 - input[44], 2.0) + Math.pow(6547153.95 - input[45], 2.0) + Math.pow(9182503.939 - input[46], 2.0) + Math.pow(1147812.992 - input[47], 2.0) + Math.pow(2204161.578 - input[48], 2.0) + Math.pow(2636.909485 - input[49], 2.0) + Math.pow(1475606.203 - input[50], 2.0) + Math.pow(2250406.981 - input[51], 2.0) + Math.pow(562601.7451 - input[52], 2.0) + Math.pow(634942.6915 - input[53], 2.0) + Math.pow(267.028809 - input[54], 2.0) + Math.pow(6547153.95 - input[55], 2.0) + Math.pow(9182503.939 - input[56], 2.0) + Math.pow(706346.4568 - input[57], 2.0) + Math.pow(1780800.469 - input[58], 2.0) + Math.pow(11.761498 - input[59], 2.0) + Math.pow(3.0 - input[60], 2.0) + Math.pow(1.666667 - input[61], 2.0) + Math.pow(25.333333 - input[62], 2.0) + Math.pow(10.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(51321.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(21.977616 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.455008 - input[9], 2.0) + Math.pow(0.273005 - input[10], 2.0) + Math.pow(0.728013 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(234.127045 - input[44], 2.0) + Math.pow(19855434.89 - input[45], 2.0) + Math.pow(21977615.83 - input[46], 2.0) + Math.pow(2441957.315 - input[47], 2.0) + Math.pow(6545767.519 - input[48], 2.0) + Math.pow(73.90976 - input[49], 2.0) + Math.pow(1615988.97 - input[50], 2.0) + Math.pow(1952076.912 - input[51], 2.0) + Math.pow(390415.3824 - input[52], 2.0) + Math.pow(690239.6324 - input[53], 2.0) + Math.pow(73.90976 - input[54], 2.0) + Math.pow(19855434.89 - input[55], 2.0) + Math.pow(21977615.83 - input[56], 2.0) + Math.pow(1465174.389 - input[57], 2.0) + Math.pow(5100709.137 - input[58], 2.0) + Math.pow(5.187096 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(26.0 - input[62], 2.0) + Math.pow(12.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -0.509217860728239 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(34527.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(18.948232 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.527754 - input[9], 2.0) + Math.pow(0.316652 - input[10], 2.0) + Math.pow(0.844406 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(7.6 - input[32], 2.0) + Math.pow(12.650867 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(21.0 - input[35], 2.0) + Math.pow(34.0 - input[36], 2.0) + Math.pow(5.666667 - input[37], 2.0) + Math.pow(7.814516 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(110.0 - input[41], 2.0) + Math.pow(6.875 - input[42], 2.0) + Math.pow(10.831282 - input[43], 2.0) + Math.pow(235.080719 - input[44], 2.0) + Math.pow(16863188.03 - input[45], 2.0) + Math.pow(18948231.94 - input[46], 2.0) + Math.pow(2105359.104 - input[47], 2.0) + Math.pow(5552877.723 - input[48], 2.0) + Math.pow(159.978867 - input[49], 2.0) + Math.pow(1608409.882 - input[50], 2.0) + Math.pow(1928598.881 - input[51], 2.0) + Math.pow(385719.7762 - input[52], 2.0) + Math.pow(687951.9865 - input[53], 2.0) + Math.pow(159.978867 - input[54], 2.0) + Math.pow(16863188.03 - input[55], 2.0) + Math.pow(18948231.94 - input[56], 2.0) + Math.pow(1263215.462 - input[57], 2.0) + Math.pow(4331201.78 - input[58], 2.0) + Math.pow(5.805291 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.333333 - input[62], 2.0) + Math.pow(11.333333 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(57217.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(153.115888 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.06531 - input[9], 2.0) + Math.pow(0.039186 - input[10], 2.0) + Math.pow(0.104496 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(1.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(75.0 - input[31], 2.0) + Math.pow(7.5 - input[32], 2.0) + Math.pow(12.518875 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(31.0 - input[36], 2.0) + Math.pow(5.166667 - input[37], 2.0) + Math.pow(8.542053 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(106.0 - input[41], 2.0) + Math.pow(6.625 - input[42], 2.0) + Math.pow(10.941511 - input[43], 2.0) + Math.pow(258.922577 - input[44], 2.0) + Math.pow(90144531.97 - input[45], 2.0) + Math.pow(153115888.1 - input[46], 2.0) + Math.pow(17012876.46 - input[47], 2.0) + Math.pow(33922342.99 - input[48], 2.0) + Math.pow(2133.131027 - input[49], 2.0) + Math.pow(89998830.8 - input[50], 2.0) + Math.pow(92011226.89 - input[51], 2.0) + Math.pow(18402245.38 - input[52], 2.0) + Math.pow(40027737.13 - input[53], 2.0) + Math.pow(221.014023 - input[54], 2.0) + Math.pow(89997018.81 - input[55], 2.0) + Math.pow(153115888.1 - input[56], 2.0) + Math.pow(10207725.87 - input[57], 2.0) + Math.pow(27020130.36 - input[58], 2.0) + Math.pow(0.692286 - input[59], 2.0) + Math.pow(2.5 - input[60], 2.0) + Math.pow(1.5 - input[61], 2.0) + Math.pow(18.75 - input[62], 2.0) + Math.pow(7.75 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -0.9448250071447682 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(57975.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(13.929868 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.717882 - input[9], 2.0) + Math.pow(0.430729 - input[10], 2.0) + Math.pow(1.148611 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(234.127045 - input[44], 2.0) + Math.pow(11863771.92 - input[45], 2.0) + Math.pow(13929867.98 - input[46], 2.0) + Math.pow(1547763.109 - input[47], 2.0) + Math.pow(3895159.795 - input[48], 2.0) + Math.pow(74.148178 - input[49], 2.0) + Math.pow(1599987.984 - input[50], 2.0) + Math.pow(1908028.126 - input[51], 2.0) + Math.pow(381605.6252 - input[52], 2.0) + Math.pow(685250.097 - input[53], 2.0) + Math.pow(74.148178 - input[54], 2.0) + Math.pow(11863771.92 - input[55], 2.0) + Math.pow(13929867.98 - input[56], 2.0) + Math.pow(928657.8655 - input[57], 2.0) + Math.pow(3047244.751 - input[58], 2.0) + Math.pow(8.040277 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(40219.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(4.901806 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(2.040064 - input[9], 2.0) + Math.pow(1.224039 - input[10], 2.0) + Math.pow(3.264103 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(277.042389 - input[44], 2.0) + Math.pow(2835640.907 - input[45], 2.0) + Math.pow(4901805.878 - input[46], 2.0) + Math.pow(544645.0975 - input[47], 2.0) + Math.pow(965377.4498 - input[48], 2.0) + Math.pow(3767.01355 - input[49], 2.0) + Math.pow(1572209.12 - input[50], 2.0) + Math.pow(1904067.993 - input[51], 2.0) + Math.pow(380813.5986 - input[52], 2.0) + Math.pow(670672.482 - input[53], 2.0) + Math.pow(277.042389 - input[54], 2.0) + Math.pow(2835640.907 - input[55], 2.0) + Math.pow(4901805.878 - input[56], 2.0) + Math.pow(326787.0585 - input[57], 2.0) + Math.pow(780143.4579 - input[58], 2.0) + Math.pow(22.848722 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * -1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(6991.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 0.7653809392741222 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(62242.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(47136.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(33125.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(62912.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000002 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(524288.0 - input[9], 2.0) + Math.pow(524288.0 - input[10], 2.0) + Math.pow(1048576.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(1.907349 - input[54], 2.0) + Math.pow(1.907349 - input[55], 2.0) + Math.pow(1.907349 - input[56], 2.0) + Math.pow(1.907349 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(62914560.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 0.25350004288989536 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(62441.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 0.9986803765602591 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(48528.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 0.04189651964599528 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(3664.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000001 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(1048576.0 - input[9], 2.0) + Math.pow(1048576.0 - input[10], 2.0) + Math.pow(2097152.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.953674 - input[54], 2.0) + Math.pow(0.953674 - input[55], 2.0) + Math.pow(0.953674 - input[56], 2.0) + Math.pow(0.953674 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(125829120.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 0.8945062925991706 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(65157.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 1.0 + Math.exp(-0.0000000000000002067340884101327 * (Math.pow(65206.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000001 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(1048576.0 - input[9], 2.0) + Math.pow(1048576.0 - input[10], 2.0) + Math.pow(2097152.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.953674 - input[54], 2.0) + Math.pow(0.953674 - input[55], 2.0) + Math.pow(0.953674 - input[56], 2.0) + Math.pow(0.953674 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(125829120.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0))) * 0.01417309581866643;
        }
        // [IOT: feature = 83]
        else if(Info.num_of_features == 83) {
            System.arraycopy(Info.instance_iot_org, 0, input, 0, input.length);
            //替换成存在的model_instance
            for (Integer ele : subset) {
//            input[ele] = Info.instance_iot_2[ele];
                input[ele] = 0;
            }
            double a = 0.00000000000000018810397959620268;   //0.00000000000000018810397959620268
            output = -0.18466732147502646 + Math.exp(a * (Math.pow(41463.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(5.937986 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(1.684073 - input[9], 2.0) + Math.pow(1.010444 - input[10], 2.0) + Math.pow(2.694516 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(237.941742 - input[44], 2.0) + Math.pow(3850121.975 - input[45], 2.0) + Math.pow(5937985.897 - input[46], 2.0) + Math.pow(659776.2108 - input[47], 2.0) + Math.pow(1282420.54 - input[48], 2.0) + Math.pow(64.849854 - input[49], 2.0) + Math.pow(1623410.94 - input[50], 2.0) + Math.pow(1935486.794 - input[51], 2.0) + Math.pow(387097.3587 - input[52], 2.0) + Math.pow(695502.7915 - input[53], 2.0) + Math.pow(64.849854 - input[54], 2.0) + Math.pow(3850121.975 - input[55], 2.0) + Math.pow(5937985.897 - input[56], 2.0) + Math.pow(395865.7265 - input[57], 2.0) + Math.pow(1025378.3 - input[58], 2.0) + Math.pow(18.861614 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(5937985.897 - input[70], 2.0) + Math.pow(5937985.897 - input[71], 2.0) + Math.pow(5937985.897 - input[72], 2.0) + Math.pow(5937985.897 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -1.0 + Math.exp(a * (Math.pow(60095.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(9.182504 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.980125 - input[9], 2.0) + Math.pow(0.544514 - input[10], 2.0) + Math.pow(1.524639 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0) + Math.pow(13.115936 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(32.0 - input[36], 2.0) + Math.pow(6.4 - input[37], 2.0) + Math.pow(9.555103 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(108.0 - input[41], 2.0) + Math.pow(7.714286 - input[42], 2.0) + Math.pow(11.618477 - input[43], 2.0) + Math.pow(267.028809 - input[44], 2.0) + Math.pow(6547153.95 - input[45], 2.0) + Math.pow(9182503.939 - input[46], 2.0) + Math.pow(1147812.992 - input[47], 2.0) + Math.pow(2204161.578 - input[48], 2.0) + Math.pow(2636.909485 - input[49], 2.0) + Math.pow(1475606.203 - input[50], 2.0) + Math.pow(2250406.981 - input[51], 2.0) + Math.pow(562601.7451 - input[52], 2.0) + Math.pow(634942.6915 - input[53], 2.0) + Math.pow(267.028809 - input[54], 2.0) + Math.pow(6547153.95 - input[55], 2.0) + Math.pow(9182503.939 - input[56], 2.0) + Math.pow(706346.4568 - input[57], 2.0) + Math.pow(1780800.469 - input[58], 2.0) + Math.pow(11.761498 - input[59], 2.0) + Math.pow(3.0 - input[60], 2.0) + Math.pow(1.666667 - input[61], 2.0) + Math.pow(25.333333 - input[62], 2.0) + Math.pow(10.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(2635349.989 - input[70], 2.0) + Math.pow(2635349.989 - input[71], 2.0) + Math.pow(2635349.989 - input[72], 2.0) + Math.pow(2635349.989 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(6547153.95 - input[75], 2.0) + Math.pow(6547153.95 - input[76], 2.0) + Math.pow(6547153.95 - input[77], 2.0) + Math.pow(6547153.95 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -1.0 + Math.exp(a * (Math.pow(34527.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(18.948232 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.527754 - input[9], 2.0) + Math.pow(0.316652 - input[10], 2.0) + Math.pow(0.844406 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(7.6 - input[32], 2.0) + Math.pow(12.650867 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(21.0 - input[35], 2.0) + Math.pow(34.0 - input[36], 2.0) + Math.pow(5.666667 - input[37], 2.0) + Math.pow(7.814516 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(110.0 - input[41], 2.0) + Math.pow(6.875 - input[42], 2.0) + Math.pow(10.831282 - input[43], 2.0) + Math.pow(235.080719 - input[44], 2.0) + Math.pow(16863188.03 - input[45], 2.0) + Math.pow(18948231.94 - input[46], 2.0) + Math.pow(2105359.104 - input[47], 2.0) + Math.pow(5552877.723 - input[48], 2.0) + Math.pow(159.978867 - input[49], 2.0) + Math.pow(1608409.882 - input[50], 2.0) + Math.pow(1928598.881 - input[51], 2.0) + Math.pow(385719.7762 - input[52], 2.0) + Math.pow(687951.9865 - input[53], 2.0) + Math.pow(159.978867 - input[54], 2.0) + Math.pow(16863188.03 - input[55], 2.0) + Math.pow(18948231.94 - input[56], 2.0) + Math.pow(1263215.462 - input[57], 2.0) + Math.pow(4331201.78 - input[58], 2.0) + Math.pow(5.805291 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.333333 - input[62], 2.0) + Math.pow(11.333333 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(2085043.907 - input[70], 2.0) + Math.pow(2085043.907 - input[71], 2.0) + Math.pow(2085043.907 - input[72], 2.0) + Math.pow(2085043.907 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(16863188.03 - input[75], 2.0) + Math.pow(16863188.03 - input[76], 2.0) + Math.pow(16863188.03 - input[77], 2.0) + Math.pow(16863188.03 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -0.9451019092619534 + Math.exp(a * (Math.pow(57217.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(153.115888 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.06531 - input[9], 2.0) + Math.pow(0.039186 - input[10], 2.0) + Math.pow(0.104496 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(1.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(75.0 - input[31], 2.0) + Math.pow(7.5 - input[32], 2.0) + Math.pow(12.518875 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(31.0 - input[36], 2.0) + Math.pow(5.166667 - input[37], 2.0) + Math.pow(8.542053 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(106.0 - input[41], 2.0) + Math.pow(6.625 - input[42], 2.0) + Math.pow(10.941511 - input[43], 2.0) + Math.pow(258.922577 - input[44], 2.0) + Math.pow(90144531.97 - input[45], 2.0) + Math.pow(153115888.1 - input[46], 2.0) + Math.pow(17012876.46 - input[47], 2.0) + Math.pow(33922342.99 - input[48], 2.0) + Math.pow(2133.131027 - input[49], 2.0) + Math.pow(89998830.8 - input[50], 2.0) + Math.pow(92011226.89 - input[51], 2.0) + Math.pow(18402245.38 - input[52], 2.0) + Math.pow(40027737.13 - input[53], 2.0) + Math.pow(221.014023 - input[54], 2.0) + Math.pow(89997018.81 - input[55], 2.0) + Math.pow(153115888.1 - input[56], 2.0) + Math.pow(10207725.87 - input[57], 2.0) + Math.pow(27020130.36 - input[58], 2.0) + Math.pow(0.692286 - input[59], 2.0) + Math.pow(2.5 - input[60], 2.0) + Math.pow(1.5 - input[61], 2.0) + Math.pow(18.75 - input[62], 2.0) + Math.pow(7.75 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(147513.1512 - input[70], 2.0) + Math.pow(2283769.131 - input[71], 2.0) + Math.pow(2431282.282 - input[72], 2.0) + Math.pow(1215641.141 - input[73], 2.0) + Math.pow(1510561.089 - input[74], 2.0) + Math.pow(60687587.02 - input[75], 2.0) + Math.pow(89997018.81 - input[76], 2.0) + Math.pow(150684605.8 - input[77], 2.0) + Math.pow(75342302.92 - input[78], 2.0) + Math.pow(20724897.97 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -0.8152609115286339 + Math.exp(a * (Math.pow(57975.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(13.929868 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.717882 - input[9], 2.0) + Math.pow(0.430729 - input[10], 2.0) + Math.pow(1.148611 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(234.127045 - input[44], 2.0) + Math.pow(11863771.92 - input[45], 2.0) + Math.pow(13929867.98 - input[46], 2.0) + Math.pow(1547763.109 - input[47], 2.0) + Math.pow(3895159.795 - input[48], 2.0) + Math.pow(74.148178 - input[49], 2.0) + Math.pow(1599987.984 - input[50], 2.0) + Math.pow(1908028.126 - input[51], 2.0) + Math.pow(381605.6252 - input[52], 2.0) + Math.pow(685250.097 - input[53], 2.0) + Math.pow(74.148178 - input[54], 2.0) + Math.pow(11863771.92 - input[55], 2.0) + Math.pow(13929867.98 - input[56], 2.0) + Math.pow(928657.8655 - input[57], 2.0) + Math.pow(3047244.751 - input[58], 2.0) + Math.pow(8.040277 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(2066096.067 - input[70], 2.0) + Math.pow(2066096.067 - input[71], 2.0) + Math.pow(2066096.067 - input[72], 2.0) + Math.pow(2066096.067 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(11863771.92 - input[75], 2.0) + Math.pow(11863771.92 - input[76], 2.0) + Math.pow(11863771.92 - input[77], 2.0) + Math.pow(11863771.92 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -1.0 + Math.exp(a * (Math.pow(42255.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(62.033993 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.161202 - input[9], 2.0) + Math.pow(0.096721 - input[10], 2.0) + Math.pow(0.257923 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(235.080719 - input[44], 2.0) + Math.pow(59991745.0 - input[45], 2.0) + Math.pow(62033993.01 - input[46], 2.0) + Math.pow(6892665.89 - input[47], 2.0) + Math.pow(19916860.24 - input[48], 2.0) + Math.pow(77.962875 - input[49], 2.0) + Math.pow(1556056.023 - input[50], 2.0) + Math.pow(1872080.088 - input[51], 2.0) + Math.pow(374416.0175 - input[52], 2.0) + Math.pow(664993.1369 - input[53], 2.0) + Math.pow(77.962875 - input[54], 2.0) + Math.pow(59991745.0 - input[55], 2.0) + Math.pow(62033993.01 - input[56], 2.0) + Math.pow(4135599.534 - input[57], 2.0) + Math.pow(15456089.63 - input[58], 2.0) + Math.pow(1.837702 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(26.0 - input[62], 2.0) + Math.pow(12.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(2042248.011 - input[70], 2.0) + Math.pow(2042248.011 - input[71], 2.0) + Math.pow(2042248.011 - input[72], 2.0) + Math.pow(2042248.011 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(59991745.0 - input[75], 2.0) + Math.pow(59991745.0 - input[76], 2.0) + Math.pow(59991745.0 - input[77], 2.0) + Math.pow(59991745.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -0.7294711509825118 + Math.exp(a * (Math.pow(40219.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(4.901806 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(2.040064 - input[9], 2.0) + Math.pow(1.224039 - input[10], 2.0) + Math.pow(3.264103 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(277.042389 - input[44], 2.0) + Math.pow(2835640.907 - input[45], 2.0) + Math.pow(4901805.878 - input[46], 2.0) + Math.pow(544645.0975 - input[47], 2.0) + Math.pow(965377.4498 - input[48], 2.0) + Math.pow(3767.01355 - input[49], 2.0) + Math.pow(1572209.12 - input[50], 2.0) + Math.pow(1904067.993 - input[51], 2.0) + Math.pow(380813.5986 - input[52], 2.0) + Math.pow(670672.482 - input[53], 2.0) + Math.pow(277.042389 - input[54], 2.0) + Math.pow(2835640.907 - input[55], 2.0) + Math.pow(4901805.878 - input[56], 2.0) + Math.pow(326787.0585 - input[57], 2.0) + Math.pow(780143.4579 - input[58], 2.0) + Math.pow(22.848722 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(4901805.878 - input[70], 2.0) + Math.pow(4901805.878 - input[71], 2.0) + Math.pow(4901805.878 - input[72], 2.0) + Math.pow(4901805.878 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -1.0 + Math.exp(a * (Math.pow(62242.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) + Math.exp(a * (Math.pow(3491.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000002 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(524288.0 - input[9], 2.0) + Math.pow(524288.0 - input[10], 2.0) + Math.pow(1048576.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(1.907349 - input[54], 2.0) + Math.pow(1.907349 - input[55], 2.0) + Math.pow(1.907349 - input[56], 2.0) + Math.pow(1.907349 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(62914560.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(1.907349 - input[70], 2.0) + Math.pow(1.907349 - input[71], 2.0) + Math.pow(1.907349 - input[72], 2.0) + Math.pow(1.907349 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) * 0.20001129916396637 + Math.exp(a * (Math.pow(62441.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) + Math.exp(a * (Math.pow(54230.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) + Math.exp(a * (Math.pow(39910.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) + Math.exp(a * (Math.pow(2747.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000001 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(1048576.0 - input[9], 2.0) + Math.pow(1048576.0 - input[10], 2.0) + Math.pow(2097152.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.953674 - input[54], 2.0) + Math.pow(0.953674 - input[55], 2.0) + Math.pow(0.953674 - input[56], 2.0) + Math.pow(0.953674 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(125829120.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.953674 - input[70], 2.0) + Math.pow(0.953674 - input[71], 2.0) + Math.pow(0.953674 - input[72], 2.0) + Math.pow(0.953674 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) * 0.9660113269272366 + Math.exp(a * (Math.pow(562.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) * 0.2528707526686868 + Math.exp(a * (Math.pow(65206.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000001 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(1048576.0 - input[9], 2.0) + Math.pow(1048576.0 - input[10], 2.0) + Math.pow(2097152.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.953674 - input[54], 2.0) + Math.pow(0.953674 - input[55], 2.0) + Math.pow(0.953674 - input[56], 2.0) + Math.pow(0.953674 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(125829120.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.953674 - input[70], 2.0) + Math.pow(0.953674 - input[71], 2.0) + Math.pow(0.953674 - input[72], 2.0) + Math.pow(0.953674 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) * 0.0709405930132093 + Math.exp(a * (Math.pow(39494.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0)));
        }
        return output;
    }

    //TODO [IOT: feature = 17]
//    public double IOT_value(double[] instance_ave, ArrayList<Integer> subset) {
//        double[] input = new double[Info.num_of_features];  //作为输入的instance
////        input = instance_ave; //复制model_instance_ave 到input[]
//        System.arraycopy(Info.instance_iot_org_17,0, input, 0, input.length);;
//        //替换成存在的model_instance
//        for (Integer ele : subset) {
////            input[ele] = Info.instance_iot_2[ele];
//            input[ele] = 0;
//        }
//        return -0.000002541579306125641 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(33397.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(46.991415 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.191524 - input[9], 2.0) + Math.pow(0.106402 - input[10], 2.0) + Math.pow(0.297927 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0))) * -1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(33457.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(32.104011 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.280339 - input[9], 2.0) + Math.pow(0.155744 - input[10], 2.0) + Math.pow(0.436083 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0))) * -1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(56117.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(32.009238 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.281169 - input[9], 2.0) + Math.pow(0.156205 - input[10], 2.0) + Math.pow(0.437374 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0))) * -1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(55835.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0))) * 1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(33125.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0))) * 1.0 + Math.exp(-0.0000000000006091894896811169 * (Math.pow(34135.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0))) * 1.0;
//    }
    //TODO [IOT: feature = 33]
//    public double IOT_value(double[] instance_ave, ArrayList<Integer> subset) {
//        double[] input = new double[Info.num_of_features];  //作为输入的instance
////        input = instance_ave; //复制model_instance_ave 到input[]
//        System.arraycopy(Info.instance_iot_org_33,0, input, 0, input.length);;
//        //替换成存在的model_instance
//        for (Integer ele : subset) {
////            input[ele] = Info.instance_iot_2[ele];
//            input[ele] = 0;
//        }
//        return 0.00000036228448152542114 + Math.exp(-0.0000000000005815366366666844 * (Math.pow(60893.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(31.961063 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.281593 - input[9], 2.0) + Math.pow(0.15644 - input[10], 2.0) + Math.pow(0.438033 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(74.0 - input[31], 2.0) + Math.pow(8.222222 - input[32], 2.0))) * -1.0 + Math.exp(-0.0000000000005815366366666844 * (Math.pow(56117.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(32.009238 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.281169 - input[9], 2.0) + Math.pow(0.156205 - input[10], 2.0) + Math.pow(0.437374 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0))) * -1.0 + Math.exp(-0.0000000000005815366366666844 * (Math.pow(60515.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0))) * 1.0 + Math.exp(-0.0000000000005815366366666844 * (Math.pow(56439.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0))) * 1.0;
//    }

    //TODO [IOT: feature = 50]
//    public double IOT_value(double[] instance_ave, ArrayList<Integer> subset) {
//        double[] input = new double[Info.num_of_features];  //作为输入的instance
////        input = instance_ave; //复制model_instance_ave 到input[]
//        System.arraycopy(Info.instance_iot_org_50,0, input, 0, input.length);;
//        //替换成存在的model_instance
//        for (Integer ele : subset) {
////            input[ele] = Info.instance_iot_2[ele];
//            input[ele] = 0;
//        }
//        return -0.687914709642318 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(37827.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(62.052435 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.145039 - input[9], 2.0) + Math.pow(0.080577 - input[10], 2.0) + Math.pow(0.225616 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(8.666667 - input[32], 2.0) + Math.pow(13.407088 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(27.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(7.2 - input[37], 2.0) + Math.pow(11.300442 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(8.142857 - input[42], 2.0) + Math.pow(12.265381 - input[43], 2.0) + Math.pow(244.855881 - input[44], 2.0) + Math.pow(59819087.98 - input[45], 2.0) + Math.pow(62052434.92 - input[46], 2.0) + Math.pow(7756554.365 - input[47], 2.0) + Math.pow(21040099.1 - input[48], 2.0) + Math.pow(2206.087112 - input[49], 2.0))) * -0.21919680320334212 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(41463.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(5.937986 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(1.684073 - input[9], 2.0) + Math.pow(1.010444 - input[10], 2.0) + Math.pow(2.694516 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(237.941742 - input[44], 2.0) + Math.pow(3850121.975 - input[45], 2.0) + Math.pow(5937985.897 - input[46], 2.0) + Math.pow(659776.2108 - input[47], 2.0) + Math.pow(1282420.54 - input[48], 2.0) + Math.pow(64.849854 - input[49], 2.0))) * -1.0 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(51093.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(32.033649 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.312172 - input[9], 2.0) + Math.pow(0.187303 - input[10], 2.0) + Math.pow(0.499475 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(262.975693 - input[44], 2.0) + Math.pow(29759529.11 - input[45], 2.0) + Math.pow(32033648.97 - input[46], 2.0) + Math.pow(3559294.33 - input[47], 2.0) + Math.pow(9831750.006 - input[48], 2.0) + Math.pow(938.177109 - input[49], 2.0))) * -0.16883644425292765 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(60095.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(9.182504 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.980125 - input[9], 2.0) + Math.pow(0.544514 - input[10], 2.0) + Math.pow(1.524639 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0) + Math.pow(13.115936 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(32.0 - input[36], 2.0) + Math.pow(6.4 - input[37], 2.0) + Math.pow(9.555103 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(108.0 - input[41], 2.0) + Math.pow(7.714286 - input[42], 2.0) + Math.pow(11.618477 - input[43], 2.0) + Math.pow(267.028809 - input[44], 2.0) + Math.pow(6547153.95 - input[45], 2.0) + Math.pow(9182503.939 - input[46], 2.0) + Math.pow(1147812.992 - input[47], 2.0) + Math.pow(2204161.578 - input[48], 2.0) + Math.pow(2636.909485 - input[49], 2.0))) * -0.9884325707479359 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(46727.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(46.984047 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.191554 - input[9], 2.0) + Math.pow(0.106419 - input[10], 2.0) + Math.pow(0.297973 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(8.555556 - input[32], 2.0) + Math.pow(13.258121 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(26.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(7.0 - input[37], 2.0) + Math.pow(10.86278 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(8.0 - input[42], 2.0) + Math.pow(12.044788 - input[43], 2.0) + Math.pow(261.068344 - input[44], 2.0) + Math.pow(44877249.96 - input[45], 2.0) + Math.pow(46984046.94 - input[46], 2.0) + Math.pow(5873005.867 - input[47], 2.0) + Math.pow(15766823.84 - input[48], 2.0) + Math.pow(3960.847855 - input[49], 2.0))) * -0.14265341093588163 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(34329.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(47.902549 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.208757 - input[9], 2.0) + Math.pow(0.125254 - input[10], 2.0) + Math.pow(0.334011 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(236.034393 - input[44], 2.0) + Math.pow(45864393.95 - input[45], 2.0) + Math.pow(47902549.03 - input[46], 2.0) + Math.pow(5322505.448 - input[47], 2.0) + Math.pow(15209599.7 - input[48], 2.0) + Math.pow(76.055527 - input[49], 2.0))) * -0.05553575502729684 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(57217.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(153.115888 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.06531 - input[9], 2.0) + Math.pow(0.039186 - input[10], 2.0) + Math.pow(0.104496 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(1.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(75.0 - input[31], 2.0) + Math.pow(7.5 - input[32], 2.0) + Math.pow(12.518875 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(31.0 - input[36], 2.0) + Math.pow(5.166667 - input[37], 2.0) + Math.pow(8.542053 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(106.0 - input[41], 2.0) + Math.pow(6.625 - input[42], 2.0) + Math.pow(10.941511 - input[43], 2.0) + Math.pow(258.922577 - input[44], 2.0) + Math.pow(90144531.97 - input[45], 2.0) + Math.pow(153115888.1 - input[46], 2.0) + Math.pow(17012876.46 - input[47], 2.0) + Math.pow(33922342.99 - input[48], 2.0) + Math.pow(2133.131027 - input[49], 2.0))) * -0.3120781496308891 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(42255.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(62.033993 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.161202 - input[9], 2.0) + Math.pow(0.096721 - input[10], 2.0) + Math.pow(0.257923 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(235.080719 - input[44], 2.0) + Math.pow(59991745.0 - input[45], 2.0) + Math.pow(62033993.01 - input[46], 2.0) + Math.pow(6892665.89 - input[47], 2.0) + Math.pow(19916860.24 - input[48], 2.0) + Math.pow(77.962875 - input[49], 2.0))) * -0.05421871171287825 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(40219.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(4.901806 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(2.040064 - input[9], 2.0) + Math.pow(1.224039 - input[10], 2.0) + Math.pow(3.264103 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(277.042389 - input[44], 2.0) + Math.pow(2835640.907 - input[45], 2.0) + Math.pow(4901805.878 - input[46], 2.0) + Math.pow(544645.0975 - input[47], 2.0) + Math.pow(965377.4498 - input[48], 2.0) + Math.pow(3767.01355 - input[49], 2.0))) * -1.0 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(51895.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(41.943964 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.214572 - input[9], 2.0) + Math.pow(0.119207 - input[10], 2.0) + Math.pow(0.333779 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(74.0 - input[31], 2.0) + Math.pow(8.222222 - input[32], 2.0) + Math.pow(12.852799 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(21.0 - input[35], 2.0) + Math.pow(30.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.689074 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(104.0 - input[41], 2.0) + Math.pow(7.428571 - input[42], 2.0) + Math.pow(11.229866 - input[43], 2.0) + Math.pow(272.035599 - input[44], 2.0) + Math.pow(39886271.0 - input[45], 2.0) + Math.pow(41943964.0 - input[46], 2.0) + Math.pow(5242995.501 - input[47], 2.0) + Math.pow(14005816.94 - input[48], 2.0) + Math.pow(1516.103745 - input[49], 2.0))) * -0.02707097917016154 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(48579.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(31.869686 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.2824 - input[9], 2.0) + Math.pow(0.156889 - input[10], 2.0) + Math.pow(0.439289 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0) + Math.pow(13.115936 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(32.0 - input[36], 2.0) + Math.pow(6.4 - input[37], 2.0) + Math.pow(9.555103 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(108.0 - input[41], 2.0) + Math.pow(7.714286 - input[42], 2.0) + Math.pow(11.618477 - input[43], 2.0) + Math.pow(392.913818 - input[44], 2.0) + Math.pow(29825548.17 - input[45], 2.0) + Math.pow(31869686.13 - input[46], 2.0) + Math.pow(3983710.766 - input[47], 2.0) + Math.pow(10451334.02 - input[48], 2.0) + Math.pow(7521.152496 - input[49], 2.0))) * -0.07326994206222294 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(62899.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 1.0 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(62242.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 0.5092323098151169 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(44.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000001 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(1048576.0 - input[9], 2.0) + Math.pow(1048576.0 - input[10], 2.0) + Math.pow(2097152.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 0.8537342516804727 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(65157.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 1.0 + Math.exp(-0.000000000000003560780253110876 * (Math.pow(562.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0))) * 0.6783262052479462;
//    }

    //TODO [IOT: feature = 83]
//    public double IOT_value(double[] instance_ave, ArrayList<Integer> subset) {
//        double[] input = new double[Info.num_of_features];  //作为输入的instance
////        input = instance_ave; //复制model_instance_ave 到input[]
//        System.arraycopy(Info.instance_iot_org,0, input, 0, input.length);;
//        //替换成存在的model_instance
//        for (Integer ele : subset) {
////            input[ele] = Info.instance_iot_2[ele];
//            input[ele] = 0;
//        }
//        double a =  0.00000000000000018810397959620268;   //0.00000000000000018810397959620268
//        double result = -0.18466732147502646 + Math.exp(a * (Math.pow(41463.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(5.937986 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(1.684073 - input[9], 2.0) + Math.pow(1.010444 - input[10], 2.0) + Math.pow(2.694516 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(237.941742 - input[44], 2.0) + Math.pow(3850121.975 - input[45], 2.0) + Math.pow(5937985.897 - input[46], 2.0) + Math.pow(659776.2108 - input[47], 2.0) + Math.pow(1282420.54 - input[48], 2.0) + Math.pow(64.849854 - input[49], 2.0) + Math.pow(1623410.94 - input[50], 2.0) + Math.pow(1935486.794 - input[51], 2.0) + Math.pow(387097.3587 - input[52], 2.0) + Math.pow(695502.7915 - input[53], 2.0) + Math.pow(64.849854 - input[54], 2.0) + Math.pow(3850121.975 - input[55], 2.0) + Math.pow(5937985.897 - input[56], 2.0) + Math.pow(395865.7265 - input[57], 2.0) + Math.pow(1025378.3 - input[58], 2.0) + Math.pow(18.861614 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(5937985.897 - input[70], 2.0) + Math.pow(5937985.897 - input[71], 2.0) + Math.pow(5937985.897 - input[72], 2.0) + Math.pow(5937985.897 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -1.0 + Math.exp(a * (Math.pow(60095.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(9.182504 - input[4], 2.0) + Math.pow(9.0 - input[5], 2.0) + Math.pow(5.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.980125 - input[9], 2.0) + Math.pow(0.544514 - input[10], 2.0) + Math.pow(1.524639 - input[11], 2.0) + Math.pow(0.555556 - input[12], 2.0) + Math.pow(296.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(168.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(13.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(8.444444 - input[32], 2.0) + Math.pow(13.115936 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(32.0 - input[36], 2.0) + Math.pow(6.4 - input[37], 2.0) + Math.pow(9.555103 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(108.0 - input[41], 2.0) + Math.pow(7.714286 - input[42], 2.0) + Math.pow(11.618477 - input[43], 2.0) + Math.pow(267.028809 - input[44], 2.0) + Math.pow(6547153.95 - input[45], 2.0) + Math.pow(9182503.939 - input[46], 2.0) + Math.pow(1147812.992 - input[47], 2.0) + Math.pow(2204161.578 - input[48], 2.0) + Math.pow(2636.909485 - input[49], 2.0) + Math.pow(1475606.203 - input[50], 2.0) + Math.pow(2250406.981 - input[51], 2.0) + Math.pow(562601.7451 - input[52], 2.0) + Math.pow(634942.6915 - input[53], 2.0) + Math.pow(267.028809 - input[54], 2.0) + Math.pow(6547153.95 - input[55], 2.0) + Math.pow(9182503.939 - input[56], 2.0) + Math.pow(706346.4568 - input[57], 2.0) + Math.pow(1780800.469 - input[58], 2.0) + Math.pow(11.761498 - input[59], 2.0) + Math.pow(3.0 - input[60], 2.0) + Math.pow(1.666667 - input[61], 2.0) + Math.pow(25.333333 - input[62], 2.0) + Math.pow(10.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(2635349.989 - input[70], 2.0) + Math.pow(2635349.989 - input[71], 2.0) + Math.pow(2635349.989 - input[72], 2.0) + Math.pow(2635349.989 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(6547153.95 - input[75], 2.0) + Math.pow(6547153.95 - input[76], 2.0) + Math.pow(6547153.95 - input[77], 2.0) + Math.pow(6547153.95 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -1.0 + Math.exp(a * (Math.pow(34527.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(18.948232 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.527754 - input[9], 2.0) + Math.pow(0.316652 - input[10], 2.0) + Math.pow(0.844406 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(76.0 - input[31], 2.0) + Math.pow(7.6 - input[32], 2.0) + Math.pow(12.650867 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(21.0 - input[35], 2.0) + Math.pow(34.0 - input[36], 2.0) + Math.pow(5.666667 - input[37], 2.0) + Math.pow(7.814516 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(110.0 - input[41], 2.0) + Math.pow(6.875 - input[42], 2.0) + Math.pow(10.831282 - input[43], 2.0) + Math.pow(235.080719 - input[44], 2.0) + Math.pow(16863188.03 - input[45], 2.0) + Math.pow(18948231.94 - input[46], 2.0) + Math.pow(2105359.104 - input[47], 2.0) + Math.pow(5552877.723 - input[48], 2.0) + Math.pow(159.978867 - input[49], 2.0) + Math.pow(1608409.882 - input[50], 2.0) + Math.pow(1928598.881 - input[51], 2.0) + Math.pow(385719.7762 - input[52], 2.0) + Math.pow(687951.9865 - input[53], 2.0) + Math.pow(159.978867 - input[54], 2.0) + Math.pow(16863188.03 - input[55], 2.0) + Math.pow(18948231.94 - input[56], 2.0) + Math.pow(1263215.462 - input[57], 2.0) + Math.pow(4331201.78 - input[58], 2.0) + Math.pow(5.805291 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.333333 - input[62], 2.0) + Math.pow(11.333333 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(2085043.907 - input[70], 2.0) + Math.pow(2085043.907 - input[71], 2.0) + Math.pow(2085043.907 - input[72], 2.0) + Math.pow(2085043.907 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(16863188.03 - input[75], 2.0) + Math.pow(16863188.03 - input[76], 2.0) + Math.pow(16863188.03 - input[77], 2.0) + Math.pow(16863188.03 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -0.9451019092619534 + Math.exp(a * (Math.pow(57217.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(153.115888 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(0.06531 - input[9], 2.0) + Math.pow(0.039186 - input[10], 2.0) + Math.pow(0.104496 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(1.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(3.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(75.0 - input[31], 2.0) + Math.pow(7.5 - input[32], 2.0) + Math.pow(12.518875 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(31.0 - input[36], 2.0) + Math.pow(5.166667 - input[37], 2.0) + Math.pow(8.542053 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(106.0 - input[41], 2.0) + Math.pow(6.625 - input[42], 2.0) + Math.pow(10.941511 - input[43], 2.0) + Math.pow(258.922577 - input[44], 2.0) + Math.pow(90144531.97 - input[45], 2.0) + Math.pow(153115888.1 - input[46], 2.0) + Math.pow(17012876.46 - input[47], 2.0) + Math.pow(33922342.99 - input[48], 2.0) + Math.pow(2133.131027 - input[49], 2.0) + Math.pow(89998830.8 - input[50], 2.0) + Math.pow(92011226.89 - input[51], 2.0) + Math.pow(18402245.38 - input[52], 2.0) + Math.pow(40027737.13 - input[53], 2.0) + Math.pow(221.014023 - input[54], 2.0) + Math.pow(89997018.81 - input[55], 2.0) + Math.pow(153115888.1 - input[56], 2.0) + Math.pow(10207725.87 - input[57], 2.0) + Math.pow(27020130.36 - input[58], 2.0) + Math.pow(0.692286 - input[59], 2.0) + Math.pow(2.5 - input[60], 2.0) + Math.pow(1.5 - input[61], 2.0) + Math.pow(18.75 - input[62], 2.0) + Math.pow(7.75 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(147513.1512 - input[70], 2.0) + Math.pow(2283769.131 - input[71], 2.0) + Math.pow(2431282.282 - input[72], 2.0) + Math.pow(1215641.141 - input[73], 2.0) + Math.pow(1510561.089 - input[74], 2.0) + Math.pow(60687587.02 - input[75], 2.0) + Math.pow(89997018.81 - input[76], 2.0) + Math.pow(150684605.8 - input[77], 2.0) + Math.pow(75342302.92 - input[78], 2.0) + Math.pow(20724897.97 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -0.8152609115286339 + Math.exp(a * (Math.pow(57975.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(13.929868 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.717882 - input[9], 2.0) + Math.pow(0.430729 - input[10], 2.0) + Math.pow(1.148611 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(234.127045 - input[44], 2.0) + Math.pow(11863771.92 - input[45], 2.0) + Math.pow(13929867.98 - input[46], 2.0) + Math.pow(1547763.109 - input[47], 2.0) + Math.pow(3895159.795 - input[48], 2.0) + Math.pow(74.148178 - input[49], 2.0) + Math.pow(1599987.984 - input[50], 2.0) + Math.pow(1908028.126 - input[51], 2.0) + Math.pow(381605.6252 - input[52], 2.0) + Math.pow(685250.097 - input[53], 2.0) + Math.pow(74.148178 - input[54], 2.0) + Math.pow(11863771.92 - input[55], 2.0) + Math.pow(13929867.98 - input[56], 2.0) + Math.pow(928657.8655 - input[57], 2.0) + Math.pow(3047244.751 - input[58], 2.0) + Math.pow(8.040277 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(2066096.067 - input[70], 2.0) + Math.pow(2066096.067 - input[71], 2.0) + Math.pow(2066096.067 - input[72], 2.0) + Math.pow(2066096.067 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(11863771.92 - input[75], 2.0) + Math.pow(11863771.92 - input[76], 2.0) + Math.pow(11863771.92 - input[77], 2.0) + Math.pow(11863771.92 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -1.0 + Math.exp(a * (Math.pow(42255.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(62.033993 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(0.161202 - input[9], 2.0) + Math.pow(0.096721 - input[10], 2.0) + Math.pow(0.257923 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(78.0 - input[31], 2.0) + Math.pow(7.8 - input[32], 2.0) + Math.pow(12.934021 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(23.0 - input[35], 2.0) + Math.pow(36.0 - input[36], 2.0) + Math.pow(6.0 - input[37], 2.0) + Math.pow(8.602325 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(114.0 - input[41], 2.0) + Math.pow(7.125 - input[42], 2.0) + Math.pow(11.218289 - input[43], 2.0) + Math.pow(235.080719 - input[44], 2.0) + Math.pow(59991745.0 - input[45], 2.0) + Math.pow(62033993.01 - input[46], 2.0) + Math.pow(6892665.89 - input[47], 2.0) + Math.pow(19916860.24 - input[48], 2.0) + Math.pow(77.962875 - input[49], 2.0) + Math.pow(1556056.023 - input[50], 2.0) + Math.pow(1872080.088 - input[51], 2.0) + Math.pow(374416.0175 - input[52], 2.0) + Math.pow(664993.1369 - input[53], 2.0) + Math.pow(77.962875 - input[54], 2.0) + Math.pow(59991745.0 - input[55], 2.0) + Math.pow(62033993.01 - input[56], 2.0) + Math.pow(4135599.534 - input[57], 2.0) + Math.pow(15456089.63 - input[58], 2.0) + Math.pow(1.837702 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(26.0 - input[62], 2.0) + Math.pow(12.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(2042248.011 - input[70], 2.0) + Math.pow(2042248.011 - input[71], 2.0) + Math.pow(2042248.011 - input[72], 2.0) + Math.pow(2042248.011 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(59991745.0 - input[75], 2.0) + Math.pow(59991745.0 - input[76], 2.0) + Math.pow(59991745.0 - input[77], 2.0) + Math.pow(59991745.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -0.7294711509825118 + Math.exp(a * (Math.pow(40219.0 - input[0], 2.0) + Math.pow(1883.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(4.901806 - input[4], 2.0) + Math.pow(10.0 - input[5], 2.0) + Math.pow(6.0 - input[6], 2.0) + Math.pow(3.0 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(2.040064 - input[9], 2.0) + Math.pow(1.224039 - input[10], 2.0) + Math.pow(3.264103 - input[11], 2.0) + Math.pow(0.6 - input[12], 2.0) + Math.pow(328.0 - input[13], 2.0) + Math.pow(32.0 - input[14], 2.0) + Math.pow(40.0 - input[15], 2.0) + Math.pow(200.0 - input[16], 2.0) + Math.pow(32.0 - input[17], 2.0) + Math.pow(40.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(2.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(3.0 - input[22], 2.0) + Math.pow(4.0 - input[23], 2.0) + Math.pow(15.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(0.0 - input[29], 2.0) + Math.pow(33.0 - input[30], 2.0) + Math.pow(77.0 - input[31], 2.0) + Math.pow(7.7 - input[32], 2.0) + Math.pow(12.789318 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(22.0 - input[35], 2.0) + Math.pow(35.0 - input[36], 2.0) + Math.pow(5.833333 - input[37], 2.0) + Math.pow(8.20772 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(33.0 - input[40], 2.0) + Math.pow(112.0 - input[41], 2.0) + Math.pow(7.0 - input[42], 2.0) + Math.pow(11.021192 - input[43], 2.0) + Math.pow(277.042389 - input[44], 2.0) + Math.pow(2835640.907 - input[45], 2.0) + Math.pow(4901805.878 - input[46], 2.0) + Math.pow(544645.0975 - input[47], 2.0) + Math.pow(965377.4498 - input[48], 2.0) + Math.pow(3767.01355 - input[49], 2.0) + Math.pow(1572209.12 - input[50], 2.0) + Math.pow(1904067.993 - input[51], 2.0) + Math.pow(380813.5986 - input[52], 2.0) + Math.pow(670672.482 - input[53], 2.0) + Math.pow(277.042389 - input[54], 2.0) + Math.pow(2835640.907 - input[55], 2.0) + Math.pow(4901805.878 - input[56], 2.0) + Math.pow(326787.0585 - input[57], 2.0) + Math.pow(780143.4579 - input[58], 2.0) + Math.pow(22.848722 - input[59], 2.0) + Math.pow(3.333333 - input[60], 2.0) + Math.pow(2.0 - input[61], 2.0) + Math.pow(25.666667 - input[62], 2.0) + Math.pow(11.666667 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(4901805.878 - input[70], 2.0) + Math.pow(4901805.878 - input[71], 2.0) + Math.pow(4901805.878 - input[72], 2.0) + Math.pow(4901805.878 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64240.0 - input[80], 2.0) + Math.pow(26847.0 - input[81], 2.0) + Math.pow(502.0 - input[82], 2.0))) * -1.0 + Math.exp(a * (Math.pow(62242.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) + Math.exp(a * (Math.pow(3491.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000002 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(524288.0 - input[9], 2.0) + Math.pow(524288.0 - input[10], 2.0) + Math.pow(1048576.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(1.907349 - input[54], 2.0) + Math.pow(1.907349 - input[55], 2.0) + Math.pow(1.907349 - input[56], 2.0) + Math.pow(1.907349 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(62914560.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(1.907349 - input[70], 2.0) + Math.pow(1.907349 - input[71], 2.0) + Math.pow(1.907349 - input[72], 2.0) + Math.pow(1.907349 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) * 0.20001129916396637 + Math.exp(a * (Math.pow(62441.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) + Math.exp(a * (Math.pow(54230.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) + Math.exp(a * (Math.pow(39910.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) + Math.exp(a * (Math.pow(2747.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000001 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(1048576.0 - input[9], 2.0) + Math.pow(1048576.0 - input[10], 2.0) + Math.pow(2097152.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.953674 - input[54], 2.0) + Math.pow(0.953674 - input[55], 2.0) + Math.pow(0.953674 - input[56], 2.0) + Math.pow(0.953674 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(125829120.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.953674 - input[70], 2.0) + Math.pow(0.953674 - input[71], 2.0) + Math.pow(0.953674 - input[72], 2.0) + Math.pow(0.953674 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) * 0.9660113269272366 + Math.exp(a * (Math.pow(562.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) * 0.2528707526686868 + Math.exp(a * (Math.pow(65206.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.000001 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(1.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(1048576.0 - input[9], 2.0) + Math.pow(1048576.0 - input[10], 2.0) + Math.pow(2097152.0 - input[11], 2.0) + Math.pow(1.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(20.0 - input[16], 2.0) + Math.pow(20.0 - input[17], 2.0) + Math.pow(20.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(1.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(1.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(0.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(60.0 - input[42], 2.0) + Math.pow(84.852814 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.953674 - input[54], 2.0) + Math.pow(0.953674 - input[55], 2.0) + Math.pow(0.953674 - input[56], 2.0) + Math.pow(0.953674 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(125829120.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(1.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.953674 - input[70], 2.0) + Math.pow(0.953674 - input[71], 2.0) + Math.pow(0.953674 - input[72], 2.0) + Math.pow(0.953674 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0))) * 0.0709405930132093 + Math.exp(a * (Math.pow(39494.0 - input[0], 2.0) + Math.pow(21.0 - input[1], 2.0) + Math.pow(1.0 - input[2], 2.0) + Math.pow(3.0 - input[3], 2.0) + Math.pow(0.0 - input[4], 2.0) + Math.pow(1.0 - input[5], 2.0) + Math.pow(0.0 - input[6], 2.0) + Math.pow(1.0 - input[7], 2.0) + Math.pow(0.0 - input[8], 2.0) + Math.pow(0.0 - input[9], 2.0) + Math.pow(0.0 - input[10], 2.0) + Math.pow(0.0 - input[11], 2.0) + Math.pow(0.0 - input[12], 2.0) + Math.pow(20.0 - input[13], 2.0) + Math.pow(20.0 - input[14], 2.0) + Math.pow(20.0 - input[15], 2.0) + Math.pow(0.0 - input[16], 2.0) + Math.pow(0.0 - input[17], 2.0) + Math.pow(0.0 - input[18], 2.0) + Math.pow(0.0 - input[19], 2.0) + Math.pow(1.0 - input[20], 2.0) + Math.pow(0.0 - input[21], 2.0) + Math.pow(0.0 - input[22], 2.0) + Math.pow(0.0 - input[23], 2.0) + Math.pow(0.0 - input[24], 2.0) + Math.pow(0.0 - input[25], 2.0) + Math.pow(0.0 - input[26], 2.0) + Math.pow(0.0 - input[27], 2.0) + Math.pow(0.0 - input[28], 2.0) + Math.pow(120.0 - input[29], 2.0) + Math.pow(120.0 - input[30], 2.0) + Math.pow(120.0 - input[31], 2.0) + Math.pow(120.0 - input[32], 2.0) + Math.pow(0.0 - input[33], 2.0) + Math.pow(0.0 - input[34], 2.0) + Math.pow(0.0 - input[35], 2.0) + Math.pow(0.0 - input[36], 2.0) + Math.pow(0.0 - input[37], 2.0) + Math.pow(0.0 - input[38], 2.0) + Math.pow(120.0 - input[39], 2.0) + Math.pow(120.0 - input[40], 2.0) + Math.pow(120.0 - input[41], 2.0) + Math.pow(120.0 - input[42], 2.0) + Math.pow(0.0 - input[43], 2.0) + Math.pow(0.0 - input[44], 2.0) + Math.pow(0.0 - input[45], 2.0) + Math.pow(0.0 - input[46], 2.0) + Math.pow(0.0 - input[47], 2.0) + Math.pow(0.0 - input[48], 2.0) + Math.pow(0.0 - input[49], 2.0) + Math.pow(0.0 - input[50], 2.0) + Math.pow(0.0 - input[51], 2.0) + Math.pow(0.0 - input[52], 2.0) + Math.pow(0.0 - input[53], 2.0) + Math.pow(0.0 - input[54], 2.0) + Math.pow(0.0 - input[55], 2.0) + Math.pow(0.0 - input[56], 2.0) + Math.pow(0.0 - input[57], 2.0) + Math.pow(0.0 - input[58], 2.0) + Math.pow(0.0 - input[59], 2.0) + Math.pow(1.0 - input[60], 2.0) + Math.pow(0.0 - input[61], 2.0) + Math.pow(120.0 - input[62], 2.0) + Math.pow(0.0 - input[63], 2.0) + Math.pow(0.0 - input[64], 2.0) + Math.pow(0.0 - input[65], 2.0) + Math.pow(0.0 - input[66], 2.0) + Math.pow(0.0 - input[67], 2.0) + Math.pow(0.0 - input[68], 2.0) + Math.pow(0.0 - input[69], 2.0) + Math.pow(0.0 - input[70], 2.0) + Math.pow(0.0 - input[71], 2.0) + Math.pow(0.0 - input[72], 2.0) + Math.pow(0.0 - input[73], 2.0) + Math.pow(0.0 - input[74], 2.0) + Math.pow(0.0 - input[75], 2.0) + Math.pow(0.0 - input[76], 2.0) + Math.pow(0.0 - input[77], 2.0) + Math.pow(0.0 - input[78], 2.0) + Math.pow(0.0 - input[79], 2.0) + Math.pow(64.0 - input[80], 2.0) + Math.pow(0.0 - input[81], 2.0) + Math.pow(64.0 - input[82], 2.0)));
//        return result;
//    }





}
